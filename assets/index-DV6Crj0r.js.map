{"version":3,"file":"index-DV6Crj0r.js","sources":["../../node_modules/react/cjs/react-jsx-runtime.production.min.js","../../node_modules/react/jsx-runtime.js","../../node_modules/@remix-run/router/dist/router.js","../../node_modules/react-dom/client.js","../../node_modules/react-router/dist/index.js","../../node_modules/react-router-dom/dist/index.js","../../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../../node_modules/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs","../../node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","../../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../../node_modules/framer-motion/dist/es/components/AnimatePresence/utils.mjs","../../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../../node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs","../../node_modules/motion-utils/dist/es/noop.mjs","../../node_modules/motion-utils/dist/es/errors.mjs","../../node_modules/motion-utils/dist/es/memo.mjs","../../node_modules/motion-utils/dist/es/progress.mjs","../../node_modules/motion-utils/dist/es/time-conversion.mjs","../../node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","../../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../../node_modules/framer-motion/dist/es/render/components/create-proxy.mjs","../../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../../node_modules/framer-motion/dist/es/frameloop/microtask.mjs","../../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../../node_modules/framer-motion/dist/es/motion/index.mjs","../../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/keys-transform.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../../node_modules/framer-motion/dist/es/utils/clamp.mjs","../../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/number-browser.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/transform.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../../node_modules/framer-motion/dist/es/render/components/create-factory.mjs","../../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../../node_modules/motion-dom/dist/es/utils/supports/scroll-timeline.mjs","../../node_modules/motion-dom/dist/es/animation/controls/BaseGroup.mjs","../../node_modules/motion-dom/dist/es/animation/controls/Group.mjs","../../node_modules/motion-dom/dist/es/animation/utils/get-value-transition.mjs","../../node_modules/motion-dom/dist/es/animation/generators/utils/calc-duration.mjs","../../node_modules/motion-dom/dist/es/animation/generators/utils/is-generator.mjs","../../node_modules/motion-dom/dist/es/animation/waapi/utils/attach-timeline.mjs","../../node_modules/motion-dom/dist/es/utils/is-bezier-definition.mjs","../../node_modules/motion-dom/dist/es/utils/supports/flags.mjs","../../node_modules/motion-dom/dist/es/utils/supports/memo.mjs","../../node_modules/motion-dom/dist/es/utils/supports/linear-easing.mjs","../../node_modules/motion-dom/dist/es/animation/waapi/utils/linear.mjs","../../node_modules/motion-dom/dist/es/animation/waapi/utils/easing.mjs","../../node_modules/motion-dom/dist/es/gestures/drag/state/is-active.mjs","../../node_modules/motion-dom/dist/es/gestures/utils/setup.mjs","../../node_modules/motion-dom/dist/es/utils/resolve-elements.mjs","../../node_modules/motion-dom/dist/es/gestures/hover.mjs","../../node_modules/motion-dom/dist/es/gestures/utils/is-node-or-child.mjs","../../node_modules/motion-dom/dist/es/gestures/utils/is-primary-pointer.mjs","../../node_modules/motion-dom/dist/es/gestures/press/utils/is-keyboard-accessible.mjs","../../node_modules/motion-dom/dist/es/gestures/press/utils/state.mjs","../../node_modules/motion-dom/dist/es/gestures/press/utils/keyboard.mjs","../../node_modules/motion-dom/dist/es/gestures/press/index.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/keys-position.mjs","../../node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","../../node_modules/framer-motion/dist/es/utils/array.mjs","../../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../../node_modules/framer-motion/dist/es/value/index.mjs","../../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../../node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","../../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../../node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","../../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../../node_modules/framer-motion/dist/es/easing/back.mjs","../../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../../node_modules/framer-motion/dist/es/easing/circ.mjs","../../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../../node_modules/framer-motion/dist/es/value/types/utils/sanitize.mjs","../../node_modules/framer-motion/dist/es/value/types/utils/float-regex.mjs","../../node_modules/framer-motion/dist/es/value/types/utils/single-color-regex.mjs","../../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../../node_modules/framer-motion/dist/es/value/types/utils/is-nullish.mjs","../../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../../node_modules/framer-motion/dist/es/value/types/utils/color-regex.mjs","../../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../../node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","../../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../../node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","../../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../../node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","../../node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","../../node_modules/framer-motion/dist/es/utils/mix/number.mjs","../../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../../node_modules/framer-motion/dist/es/utils/mix/immediate.mjs","../../node_modules/framer-motion/dist/es/utils/mix/color.mjs","../../node_modules/framer-motion/dist/es/utils/pipe.mjs","../../node_modules/framer-motion/dist/es/utils/mix/visibility.mjs","../../node_modules/framer-motion/dist/es/utils/mix/complex.mjs","../../node_modules/framer-motion/dist/es/utils/mix/index.mjs","../../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../../node_modules/framer-motion/dist/es/animation/generators/spring/defaults.mjs","../../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../../node_modules/framer-motion/dist/es/easing/ease.mjs","../../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../../node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","../../node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","../../node_modules/framer-motion/dist/es/animation/animators/utils/accelerated-values.mjs","../../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-waapi.mjs","../../node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","../../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../../node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../../node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs","../../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../../node_modules/framer-motion/dist/es/events/event-info.mjs","../../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../../node_modules/framer-motion/dist/es/utils/distance.mjs","../../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../../node_modules/motion-dom/dist/es/gestures/drag/state/set-active.mjs","../../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../../node_modules/framer-motion/dist/es/projection/node/state.mjs","../../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../../node_modules/framer-motion/dist/es/utils/delay.mjs","../../node_modules/framer-motion/dist/es/animation/animate/single-value.mjs","../../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../../node_modules/framer-motion/dist/es/gestures/hover.mjs","../../node_modules/framer-motion/dist/es/gestures/press.mjs","../../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../../node_modules/framer-motion/dist/es/gestures/focus.mjs","../../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../../node_modules/framer-motion/dist/es/render/store.mjs","../../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../../node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs","../../node_modules/framer-motion/dist/es/render/components/motion/create.mjs","../../node_modules/lucide-react/dist/esm/defaultAttributes.js","../../node_modules/lucide-react/dist/esm/createLucideIcon.js","../../node_modules/lucide-react/dist/esm/icons/book-open.js","../../node_modules/lucide-react/dist/esm/icons/briefcase.js","../../node_modules/lucide-react/dist/esm/icons/code.js","../../node_modules/lucide-react/dist/esm/icons/disc.js","../../node_modules/lucide-react/dist/esm/icons/external-link.js","../../node_modules/lucide-react/dist/esm/icons/github.js","../../node_modules/lucide-react/dist/esm/icons/graduation-cap.js","../../node_modules/lucide-react/dist/esm/icons/linkedin.js","../../node_modules/lucide-react/dist/esm/icons/mail.js","../../node_modules/lucide-react/dist/esm/icons/message-square.js","../../node_modules/lucide-react/dist/esm/icons/moon.js","../../node_modules/lucide-react/dist/esm/icons/phone.js","../../node_modules/lucide-react/dist/esm/icons/send.js","../../node_modules/lucide-react/dist/esm/icons/sun.js","../../node_modules/lucide-react/dist/esm/icons/user.js","../../node_modules/lucide-react/dist/esm/icons/youtube.js","../../src/pages/About.tsx","../../src/pages/Education.tsx","../../src/pages/Skills.tsx","../../src/pages/Experience.tsx","../../src/pages/Projects.tsx","../../src/App.tsx","../../src/main.tsx"],"sourcesContent":["/**\r\n * @license React\r\n * react-jsx-runtime.production.min.js\r\n *\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\r\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\r\n","'use strict';\r\n\r\nif (process.env.NODE_ENV === 'production') {\r\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\r\n} else {\r\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\r\n}\r\n","/**\r\n * @remix-run/router v1.23.0\r\n *\r\n * Copyright (c) Remix Software Inc.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE.md file in the root directory of this source tree.\r\n *\r\n * @license MIT\r\n */\r\nfunction _extends() {\r\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\r\n    for (var i = 1; i < arguments.length; i++) {\r\n      var source = arguments[i];\r\n      for (var key in source) {\r\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\r\n          target[key] = source[key];\r\n        }\r\n      }\r\n    }\r\n    return target;\r\n  };\r\n  return _extends.apply(this, arguments);\r\n}\r\n\r\n////////////////////////////////////////////////////////////////////////////////\r\n//#region Types and Constants\r\n////////////////////////////////////////////////////////////////////////////////\r\n/**\r\n * Actions represent the type of change to a location value.\r\n */\r\nvar Action;\r\n(function (Action) {\r\n  /**\r\n   * A POP indicates a change to an arbitrary index in the history stack, such\r\n   * as a back or forward navigation. It does not describe the direction of the\r\n   * navigation, only that the current index changed.\r\n   *\r\n   * Note: This is the default action for newly created history objects.\r\n   */\r\n  Action[\"Pop\"] = \"POP\";\r\n  /**\r\n   * A PUSH indicates a new entry being added to the history stack, such as when\r\n   * a link is clicked and a new page loads. When this happens, all subsequent\r\n   * entries in the stack are lost.\r\n   */\r\n  Action[\"Push\"] = \"PUSH\";\r\n  /**\r\n   * A REPLACE indicates the entry at the current index in the history stack\r\n   * being replaced by a new one.\r\n   */\r\n  Action[\"Replace\"] = \"REPLACE\";\r\n})(Action || (Action = {}));\r\nconst PopStateEventType = \"popstate\";\r\n/**\r\n * Memory history stores the current location in memory. It is designed for use\r\n * in stateful non-browser environments like tests and React Native.\r\n */\r\nfunction createMemoryHistory(options) {\r\n  if (options === void 0) {\r\n    options = {};\r\n  }\r\n  let {\r\n    initialEntries = [\"/\"],\r\n    initialIndex,\r\n    v5Compat = false\r\n  } = options;\r\n  let entries; // Declare so we can access from createMemoryLocation\r\n  entries = initialEntries.map((entry, index) => createMemoryLocation(entry, typeof entry === \"string\" ? null : entry.state, index === 0 ? \"default\" : undefined));\r\n  let index = clampIndex(initialIndex == null ? entries.length - 1 : initialIndex);\r\n  let action = Action.Pop;\r\n  let listener = null;\r\n  function clampIndex(n) {\r\n    return Math.min(Math.max(n, 0), entries.length - 1);\r\n  }\r\n  function getCurrentLocation() {\r\n    return entries[index];\r\n  }\r\n  function createMemoryLocation(to, state, key) {\r\n    if (state === void 0) {\r\n      state = null;\r\n    }\r\n    let location = createLocation(entries ? getCurrentLocation().pathname : \"/\", to, state, key);\r\n    warning(location.pathname.charAt(0) === \"/\", \"relative pathnames are not supported in memory history: \" + JSON.stringify(to));\r\n    return location;\r\n  }\r\n  function createHref(to) {\r\n    return typeof to === \"string\" ? to : createPath(to);\r\n  }\r\n  let history = {\r\n    get index() {\r\n      return index;\r\n    },\r\n    get action() {\r\n      return action;\r\n    },\r\n    get location() {\r\n      return getCurrentLocation();\r\n    },\r\n    createHref,\r\n    createURL(to) {\r\n      return new URL(createHref(to), \"http://localhost\");\r\n    },\r\n    encodeLocation(to) {\r\n      let path = typeof to === \"string\" ? parsePath(to) : to;\r\n      return {\r\n        pathname: path.pathname || \"\",\r\n        search: path.search || \"\",\r\n        hash: path.hash || \"\"\r\n      };\r\n    },\r\n    push(to, state) {\r\n      action = Action.Push;\r\n      let nextLocation = createMemoryLocation(to, state);\r\n      index += 1;\r\n      entries.splice(index, entries.length, nextLocation);\r\n      if (v5Compat && listener) {\r\n        listener({\r\n          action,\r\n          location: nextLocation,\r\n          delta: 1\r\n        });\r\n      }\r\n    },\r\n    replace(to, state) {\r\n      action = Action.Replace;\r\n      let nextLocation = createMemoryLocation(to, state);\r\n      entries[index] = nextLocation;\r\n      if (v5Compat && listener) {\r\n        listener({\r\n          action,\r\n          location: nextLocation,\r\n          delta: 0\r\n        });\r\n      }\r\n    },\r\n    go(delta) {\r\n      action = Action.Pop;\r\n      let nextIndex = clampIndex(index + delta);\r\n      let nextLocation = entries[nextIndex];\r\n      index = nextIndex;\r\n      if (listener) {\r\n        listener({\r\n          action,\r\n          location: nextLocation,\r\n          delta\r\n        });\r\n      }\r\n    },\r\n    listen(fn) {\r\n      listener = fn;\r\n      return () => {\r\n        listener = null;\r\n      };\r\n    }\r\n  };\r\n  return history;\r\n}\r\n/**\r\n * Browser history stores the location in regular URLs. This is the standard for\r\n * most web apps, but it requires some configuration on the server to ensure you\r\n * serve the same app at multiple URLs.\r\n *\r\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createbrowserhistory\r\n */\r\nfunction createBrowserHistory(options) {\r\n  if (options === void 0) {\r\n    options = {};\r\n  }\r\n  function createBrowserLocation(window, globalHistory) {\r\n    let {\r\n      pathname,\r\n      search,\r\n      hash\r\n    } = window.location;\r\n    return createLocation(\"\", {\r\n      pathname,\r\n      search,\r\n      hash\r\n    },\r\n    // state defaults to `null` because `window.history.state` does\r\n    globalHistory.state && globalHistory.state.usr || null, globalHistory.state && globalHistory.state.key || \"default\");\r\n  }\r\n  function createBrowserHref(window, to) {\r\n    return typeof to === \"string\" ? to : createPath(to);\r\n  }\r\n  return getUrlBasedHistory(createBrowserLocation, createBrowserHref, null, options);\r\n}\r\n/**\r\n * Hash history stores the location in window.location.hash. This makes it ideal\r\n * for situations where you don't want to send the location to the server for\r\n * some reason, either because you do cannot configure it or the URL space is\r\n * reserved for something else.\r\n *\r\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createhashhistory\r\n */\r\nfunction createHashHistory(options) {\r\n  if (options === void 0) {\r\n    options = {};\r\n  }\r\n  function createHashLocation(window, globalHistory) {\r\n    let {\r\n      pathname = \"/\",\r\n      search = \"\",\r\n      hash = \"\"\r\n    } = parsePath(window.location.hash.substr(1));\r\n    // Hash URL should always have a leading / just like window.location.pathname\r\n    // does, so if an app ends up at a route like /#something then we add a\r\n    // leading slash so all of our path-matching behaves the same as if it would\r\n    // in a browser router.  This is particularly important when there exists a\r\n    // root splat route (<Route path=\"*\">) since that matches internally against\r\n    // \"/*\" and we'd expect /#something to 404 in a hash router app.\r\n    if (!pathname.startsWith(\"/\") && !pathname.startsWith(\".\")) {\r\n      pathname = \"/\" + pathname;\r\n    }\r\n    return createLocation(\"\", {\r\n      pathname,\r\n      search,\r\n      hash\r\n    },\r\n    // state defaults to `null` because `window.history.state` does\r\n    globalHistory.state && globalHistory.state.usr || null, globalHistory.state && globalHistory.state.key || \"default\");\r\n  }\r\n  function createHashHref(window, to) {\r\n    let base = window.document.querySelector(\"base\");\r\n    let href = \"\";\r\n    if (base && base.getAttribute(\"href\")) {\r\n      let url = window.location.href;\r\n      let hashIndex = url.indexOf(\"#\");\r\n      href = hashIndex === -1 ? url : url.slice(0, hashIndex);\r\n    }\r\n    return href + \"#\" + (typeof to === \"string\" ? to : createPath(to));\r\n  }\r\n  function validateHashLocation(location, to) {\r\n    warning(location.pathname.charAt(0) === \"/\", \"relative pathnames are not supported in hash history.push(\" + JSON.stringify(to) + \")\");\r\n  }\r\n  return getUrlBasedHistory(createHashLocation, createHashHref, validateHashLocation, options);\r\n}\r\nfunction invariant(value, message) {\r\n  if (value === false || value === null || typeof value === \"undefined\") {\r\n    throw new Error(message);\r\n  }\r\n}\r\nfunction warning(cond, message) {\r\n  if (!cond) {\r\n    // eslint-disable-next-line no-console\r\n    if (typeof console !== \"undefined\") console.warn(message);\r\n    try {\r\n      // Welcome to debugging history!\r\n      //\r\n      // This error is thrown as a convenience, so you can more easily\r\n      // find the source for a warning that appears in the console by\r\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\r\n      throw new Error(message);\r\n      // eslint-disable-next-line no-empty\r\n    } catch (e) {}\r\n  }\r\n}\r\nfunction createKey() {\r\n  return Math.random().toString(36).substr(2, 8);\r\n}\r\n/**\r\n * For browser-based histories, we combine the state and key into an object\r\n */\r\nfunction getHistoryState(location, index) {\r\n  return {\r\n    usr: location.state,\r\n    key: location.key,\r\n    idx: index\r\n  };\r\n}\r\n/**\r\n * Creates a Location object with a unique key from the given Path\r\n */\r\nfunction createLocation(current, to, state, key) {\r\n  if (state === void 0) {\r\n    state = null;\r\n  }\r\n  let location = _extends({\r\n    pathname: typeof current === \"string\" ? current : current.pathname,\r\n    search: \"\",\r\n    hash: \"\"\r\n  }, typeof to === \"string\" ? parsePath(to) : to, {\r\n    state,\r\n    // TODO: This could be cleaned up.  push/replace should probably just take\r\n    // full Locations now and avoid the need to run through this flow at all\r\n    // But that's a pretty big refactor to the current test suite so going to\r\n    // keep as is for the time being and just let any incoming keys take precedence\r\n    key: to && to.key || key || createKey()\r\n  });\r\n  return location;\r\n}\r\n/**\r\n * Creates a string URL path from the given pathname, search, and hash components.\r\n */\r\nfunction createPath(_ref) {\r\n  let {\r\n    pathname = \"/\",\r\n    search = \"\",\r\n    hash = \"\"\r\n  } = _ref;\r\n  if (search && search !== \"?\") pathname += search.charAt(0) === \"?\" ? search : \"?\" + search;\r\n  if (hash && hash !== \"#\") pathname += hash.charAt(0) === \"#\" ? hash : \"#\" + hash;\r\n  return pathname;\r\n}\r\n/**\r\n * Parses a string URL path into its separate pathname, search, and hash components.\r\n */\r\nfunction parsePath(path) {\r\n  let parsedPath = {};\r\n  if (path) {\r\n    let hashIndex = path.indexOf(\"#\");\r\n    if (hashIndex >= 0) {\r\n      parsedPath.hash = path.substr(hashIndex);\r\n      path = path.substr(0, hashIndex);\r\n    }\r\n    let searchIndex = path.indexOf(\"?\");\r\n    if (searchIndex >= 0) {\r\n      parsedPath.search = path.substr(searchIndex);\r\n      path = path.substr(0, searchIndex);\r\n    }\r\n    if (path) {\r\n      parsedPath.pathname = path;\r\n    }\r\n  }\r\n  return parsedPath;\r\n}\r\nfunction getUrlBasedHistory(getLocation, createHref, validateLocation, options) {\r\n  if (options === void 0) {\r\n    options = {};\r\n  }\r\n  let {\r\n    window = document.defaultView,\r\n    v5Compat = false\r\n  } = options;\r\n  let globalHistory = window.history;\r\n  let action = Action.Pop;\r\n  let listener = null;\r\n  let index = getIndex();\r\n  // Index should only be null when we initialize. If not, it's because the\r\n  // user called history.pushState or history.replaceState directly, in which\r\n  // case we should log a warning as it will result in bugs.\r\n  if (index == null) {\r\n    index = 0;\r\n    globalHistory.replaceState(_extends({}, globalHistory.state, {\r\n      idx: index\r\n    }), \"\");\r\n  }\r\n  function getIndex() {\r\n    let state = globalHistory.state || {\r\n      idx: null\r\n    };\r\n    return state.idx;\r\n  }\r\n  function handlePop() {\r\n    action = Action.Pop;\r\n    let nextIndex = getIndex();\r\n    let delta = nextIndex == null ? null : nextIndex - index;\r\n    index = nextIndex;\r\n    if (listener) {\r\n      listener({\r\n        action,\r\n        location: history.location,\r\n        delta\r\n      });\r\n    }\r\n  }\r\n  function push(to, state) {\r\n    action = Action.Push;\r\n    let location = createLocation(history.location, to, state);\r\n    if (validateLocation) validateLocation(location, to);\r\n    index = getIndex() + 1;\r\n    let historyState = getHistoryState(location, index);\r\n    let url = history.createHref(location);\r\n    // try...catch because iOS limits us to 100 pushState calls :/\r\n    try {\r\n      globalHistory.pushState(historyState, \"\", url);\r\n    } catch (error) {\r\n      // If the exception is because `state` can't be serialized, let that throw\r\n      // outwards just like a replace call would so the dev knows the cause\r\n      // https://html.spec.whatwg.org/multipage/nav-history-apis.html#shared-history-push/replace-state-steps\r\n      // https://html.spec.whatwg.org/multipage/structured-data.html#structuredserializeinternal\r\n      if (error instanceof DOMException && error.name === \"DataCloneError\") {\r\n        throw error;\r\n      }\r\n      // They are going to lose state here, but there is no real\r\n      // way to warn them about it since the page will refresh...\r\n      window.location.assign(url);\r\n    }\r\n    if (v5Compat && listener) {\r\n      listener({\r\n        action,\r\n        location: history.location,\r\n        delta: 1\r\n      });\r\n    }\r\n  }\r\n  function replace(to, state) {\r\n    action = Action.Replace;\r\n    let location = createLocation(history.location, to, state);\r\n    if (validateLocation) validateLocation(location, to);\r\n    index = getIndex();\r\n    let historyState = getHistoryState(location, index);\r\n    let url = history.createHref(location);\r\n    globalHistory.replaceState(historyState, \"\", url);\r\n    if (v5Compat && listener) {\r\n      listener({\r\n        action,\r\n        location: history.location,\r\n        delta: 0\r\n      });\r\n    }\r\n  }\r\n  function createURL(to) {\r\n    // window.location.origin is \"null\" (the literal string value) in Firefox\r\n    // under certain conditions, notably when serving from a local HTML file\r\n    // See https://bugzilla.mozilla.org/show_bug.cgi?id=878297\r\n    let base = window.location.origin !== \"null\" ? window.location.origin : window.location.href;\r\n    let href = typeof to === \"string\" ? to : createPath(to);\r\n    // Treating this as a full URL will strip any trailing spaces so we need to\r\n    // pre-encode them since they might be part of a matching splat param from\r\n    // an ancestor route\r\n    href = href.replace(/ $/, \"%20\");\r\n    invariant(base, \"No window.location.(origin|href) available to create URL for href: \" + href);\r\n    return new URL(href, base);\r\n  }\r\n  let history = {\r\n    get action() {\r\n      return action;\r\n    },\r\n    get location() {\r\n      return getLocation(window, globalHistory);\r\n    },\r\n    listen(fn) {\r\n      if (listener) {\r\n        throw new Error(\"A history only accepts one active listener\");\r\n      }\r\n      window.addEventListener(PopStateEventType, handlePop);\r\n      listener = fn;\r\n      return () => {\r\n        window.removeEventListener(PopStateEventType, handlePop);\r\n        listener = null;\r\n      };\r\n    },\r\n    createHref(to) {\r\n      return createHref(window, to);\r\n    },\r\n    createURL,\r\n    encodeLocation(to) {\r\n      // Encode a Location the same way window.location would\r\n      let url = createURL(to);\r\n      return {\r\n        pathname: url.pathname,\r\n        search: url.search,\r\n        hash: url.hash\r\n      };\r\n    },\r\n    push,\r\n    replace,\r\n    go(n) {\r\n      return globalHistory.go(n);\r\n    }\r\n  };\r\n  return history;\r\n}\r\n//#endregion\r\n\r\nvar ResultType;\r\n(function (ResultType) {\r\n  ResultType[\"data\"] = \"data\";\r\n  ResultType[\"deferred\"] = \"deferred\";\r\n  ResultType[\"redirect\"] = \"redirect\";\r\n  ResultType[\"error\"] = \"error\";\r\n})(ResultType || (ResultType = {}));\r\nconst immutableRouteKeys = new Set([\"lazy\", \"caseSensitive\", \"path\", \"id\", \"index\", \"children\"]);\r\nfunction isIndexRoute(route) {\r\n  return route.index === true;\r\n}\r\n// Walk the route tree generating unique IDs where necessary, so we are working\r\n// solely with AgnosticDataRouteObject's within the Router\r\nfunction convertRoutesToDataRoutes(routes, mapRouteProperties, parentPath, manifest) {\r\n  if (parentPath === void 0) {\r\n    parentPath = [];\r\n  }\r\n  if (manifest === void 0) {\r\n    manifest = {};\r\n  }\r\n  return routes.map((route, index) => {\r\n    let treePath = [...parentPath, String(index)];\r\n    let id = typeof route.id === \"string\" ? route.id : treePath.join(\"-\");\r\n    invariant(route.index !== true || !route.children, \"Cannot specify children on an index route\");\r\n    invariant(!manifest[id], \"Found a route id collision on id \\\"\" + id + \"\\\".  Route \" + \"id's must be globally unique within Data Router usages\");\r\n    if (isIndexRoute(route)) {\r\n      let indexRoute = _extends({}, route, mapRouteProperties(route), {\r\n        id\r\n      });\r\n      manifest[id] = indexRoute;\r\n      return indexRoute;\r\n    } else {\r\n      let pathOrLayoutRoute = _extends({}, route, mapRouteProperties(route), {\r\n        id,\r\n        children: undefined\r\n      });\r\n      manifest[id] = pathOrLayoutRoute;\r\n      if (route.children) {\r\n        pathOrLayoutRoute.children = convertRoutesToDataRoutes(route.children, mapRouteProperties, treePath, manifest);\r\n      }\r\n      return pathOrLayoutRoute;\r\n    }\r\n  });\r\n}\r\n/**\r\n * Matches the given routes to a location and returns the match data.\r\n *\r\n * @see https://reactrouter.com/v6/utils/match-routes\r\n */\r\nfunction matchRoutes(routes, locationArg, basename) {\r\n  if (basename === void 0) {\r\n    basename = \"/\";\r\n  }\r\n  return matchRoutesImpl(routes, locationArg, basename, false);\r\n}\r\nfunction matchRoutesImpl(routes, locationArg, basename, allowPartial) {\r\n  let location = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\r\n  let pathname = stripBasename(location.pathname || \"/\", basename);\r\n  if (pathname == null) {\r\n    return null;\r\n  }\r\n  let branches = flattenRoutes(routes);\r\n  rankRouteBranches(branches);\r\n  let matches = null;\r\n  for (let i = 0; matches == null && i < branches.length; ++i) {\r\n    // Incoming pathnames are generally encoded from either window.location\r\n    // or from router.navigate, but we want to match against the unencoded\r\n    // paths in the route definitions.  Memory router locations won't be\r\n    // encoded here but there also shouldn't be anything to decode so this\r\n    // should be a safe operation.  This avoids needing matchRoutes to be\r\n    // history-aware.\r\n    let decoded = decodePath(pathname);\r\n    matches = matchRouteBranch(branches[i], decoded, allowPartial);\r\n  }\r\n  return matches;\r\n}\r\nfunction convertRouteMatchToUiMatch(match, loaderData) {\r\n  let {\r\n    route,\r\n    pathname,\r\n    params\r\n  } = match;\r\n  return {\r\n    id: route.id,\r\n    pathname,\r\n    params,\r\n    data: loaderData[route.id],\r\n    handle: route.handle\r\n  };\r\n}\r\nfunction flattenRoutes(routes, branches, parentsMeta, parentPath) {\r\n  if (branches === void 0) {\r\n    branches = [];\r\n  }\r\n  if (parentsMeta === void 0) {\r\n    parentsMeta = [];\r\n  }\r\n  if (parentPath === void 0) {\r\n    parentPath = \"\";\r\n  }\r\n  let flattenRoute = (route, index, relativePath) => {\r\n    let meta = {\r\n      relativePath: relativePath === undefined ? route.path || \"\" : relativePath,\r\n      caseSensitive: route.caseSensitive === true,\r\n      childrenIndex: index,\r\n      route\r\n    };\r\n    if (meta.relativePath.startsWith(\"/\")) {\r\n      invariant(meta.relativePath.startsWith(parentPath), \"Absolute route path \\\"\" + meta.relativePath + \"\\\" nested under path \" + (\"\\\"\" + parentPath + \"\\\" is not valid. An absolute child route path \") + \"must start with the combined path of all its parent routes.\");\r\n      meta.relativePath = meta.relativePath.slice(parentPath.length);\r\n    }\r\n    let path = joinPaths([parentPath, meta.relativePath]);\r\n    let routesMeta = parentsMeta.concat(meta);\r\n    // Add the children before adding this route to the array, so we traverse the\r\n    // route tree depth-first and child routes appear before their parents in\r\n    // the \"flattened\" version.\r\n    if (route.children && route.children.length > 0) {\r\n      invariant(\r\n      // Our types know better, but runtime JS may not!\r\n      // @ts-expect-error\r\n      route.index !== true, \"Index routes must not have child routes. Please remove \" + (\"all child routes from route path \\\"\" + path + \"\\\".\"));\r\n      flattenRoutes(route.children, branches, routesMeta, path);\r\n    }\r\n    // Routes without a path shouldn't ever match by themselves unless they are\r\n    // index routes, so don't add them to the list of possible branches.\r\n    if (route.path == null && !route.index) {\r\n      return;\r\n    }\r\n    branches.push({\r\n      path,\r\n      score: computeScore(path, route.index),\r\n      routesMeta\r\n    });\r\n  };\r\n  routes.forEach((route, index) => {\r\n    var _route$path;\r\n    // coarse-grain check for optional params\r\n    if (route.path === \"\" || !((_route$path = route.path) != null && _route$path.includes(\"?\"))) {\r\n      flattenRoute(route, index);\r\n    } else {\r\n      for (let exploded of explodeOptionalSegments(route.path)) {\r\n        flattenRoute(route, index, exploded);\r\n      }\r\n    }\r\n  });\r\n  return branches;\r\n}\r\n/**\r\n * Computes all combinations of optional path segments for a given path,\r\n * excluding combinations that are ambiguous and of lower priority.\r\n *\r\n * For example, `/one/:two?/three/:four?/:five?` explodes to:\r\n * - `/one/three`\r\n * - `/one/:two/three`\r\n * - `/one/three/:four`\r\n * - `/one/three/:five`\r\n * - `/one/:two/three/:four`\r\n * - `/one/:two/three/:five`\r\n * - `/one/three/:four/:five`\r\n * - `/one/:two/three/:four/:five`\r\n */\r\nfunction explodeOptionalSegments(path) {\r\n  let segments = path.split(\"/\");\r\n  if (segments.length === 0) return [];\r\n  let [first, ...rest] = segments;\r\n  // Optional path segments are denoted by a trailing `?`\r\n  let isOptional = first.endsWith(\"?\");\r\n  // Compute the corresponding required segment: `foo?` -> `foo`\r\n  let required = first.replace(/\\?$/, \"\");\r\n  if (rest.length === 0) {\r\n    // Intepret empty string as omitting an optional segment\r\n    // `[\"one\", \"\", \"three\"]` corresponds to omitting `:two` from `/one/:two?/three` -> `/one/three`\r\n    return isOptional ? [required, \"\"] : [required];\r\n  }\r\n  let restExploded = explodeOptionalSegments(rest.join(\"/\"));\r\n  let result = [];\r\n  // All child paths with the prefix.  Do this for all children before the\r\n  // optional version for all children, so we get consistent ordering where the\r\n  // parent optional aspect is preferred as required.  Otherwise, we can get\r\n  // child sections interspersed where deeper optional segments are higher than\r\n  // parent optional segments, where for example, /:two would explode _earlier_\r\n  // then /:one.  By always including the parent as required _for all children_\r\n  // first, we avoid this issue\r\n  result.push(...restExploded.map(subpath => subpath === \"\" ? required : [required, subpath].join(\"/\")));\r\n  // Then, if this is an optional value, add all child versions without\r\n  if (isOptional) {\r\n    result.push(...restExploded);\r\n  }\r\n  // for absolute paths, ensure `/` instead of empty segment\r\n  return result.map(exploded => path.startsWith(\"/\") && exploded === \"\" ? \"/\" : exploded);\r\n}\r\nfunction rankRouteBranches(branches) {\r\n  branches.sort((a, b) => a.score !== b.score ? b.score - a.score // Higher score first\r\n  : compareIndexes(a.routesMeta.map(meta => meta.childrenIndex), b.routesMeta.map(meta => meta.childrenIndex)));\r\n}\r\nconst paramRe = /^:[\\w-]+$/;\r\nconst dynamicSegmentValue = 3;\r\nconst indexRouteValue = 2;\r\nconst emptySegmentValue = 1;\r\nconst staticSegmentValue = 10;\r\nconst splatPenalty = -2;\r\nconst isSplat = s => s === \"*\";\r\nfunction computeScore(path, index) {\r\n  let segments = path.split(\"/\");\r\n  let initialScore = segments.length;\r\n  if (segments.some(isSplat)) {\r\n    initialScore += splatPenalty;\r\n  }\r\n  if (index) {\r\n    initialScore += indexRouteValue;\r\n  }\r\n  return segments.filter(s => !isSplat(s)).reduce((score, segment) => score + (paramRe.test(segment) ? dynamicSegmentValue : segment === \"\" ? emptySegmentValue : staticSegmentValue), initialScore);\r\n}\r\nfunction compareIndexes(a, b) {\r\n  let siblings = a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);\r\n  return siblings ?\r\n  // If two routes are siblings, we should try to match the earlier sibling\r\n  // first. This allows people to have fine-grained control over the matching\r\n  // behavior by simply putting routes with identical paths in the order they\r\n  // want them tried.\r\n  a[a.length - 1] - b[b.length - 1] :\r\n  // Otherwise, it doesn't really make sense to rank non-siblings by index,\r\n  // so they sort equally.\r\n  0;\r\n}\r\nfunction matchRouteBranch(branch, pathname, allowPartial) {\r\n  if (allowPartial === void 0) {\r\n    allowPartial = false;\r\n  }\r\n  let {\r\n    routesMeta\r\n  } = branch;\r\n  let matchedParams = {};\r\n  let matchedPathname = \"/\";\r\n  let matches = [];\r\n  for (let i = 0; i < routesMeta.length; ++i) {\r\n    let meta = routesMeta[i];\r\n    let end = i === routesMeta.length - 1;\r\n    let remainingPathname = matchedPathname === \"/\" ? pathname : pathname.slice(matchedPathname.length) || \"/\";\r\n    let match = matchPath({\r\n      path: meta.relativePath,\r\n      caseSensitive: meta.caseSensitive,\r\n      end\r\n    }, remainingPathname);\r\n    let route = meta.route;\r\n    if (!match && end && allowPartial && !routesMeta[routesMeta.length - 1].route.index) {\r\n      match = matchPath({\r\n        path: meta.relativePath,\r\n        caseSensitive: meta.caseSensitive,\r\n        end: false\r\n      }, remainingPathname);\r\n    }\r\n    if (!match) {\r\n      return null;\r\n    }\r\n    Object.assign(matchedParams, match.params);\r\n    matches.push({\r\n      // TODO: Can this as be avoided?\r\n      params: matchedParams,\r\n      pathname: joinPaths([matchedPathname, match.pathname]),\r\n      pathnameBase: normalizePathname(joinPaths([matchedPathname, match.pathnameBase])),\r\n      route\r\n    });\r\n    if (match.pathnameBase !== \"/\") {\r\n      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);\r\n    }\r\n  }\r\n  return matches;\r\n}\r\n/**\r\n * Returns a path with params interpolated.\r\n *\r\n * @see https://reactrouter.com/v6/utils/generate-path\r\n */\r\nfunction generatePath(originalPath, params) {\r\n  if (params === void 0) {\r\n    params = {};\r\n  }\r\n  let path = originalPath;\r\n  if (path.endsWith(\"*\") && path !== \"*\" && !path.endsWith(\"/*\")) {\r\n    warning(false, \"Route path \\\"\" + path + \"\\\" will be treated as if it were \" + (\"\\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\" because the `*` character must \") + \"always follow a `/` in the pattern. To get rid of this warning, \" + (\"please change the route path to \\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\".\"));\r\n    path = path.replace(/\\*$/, \"/*\");\r\n  }\r\n  // ensure `/` is added at the beginning if the path is absolute\r\n  const prefix = path.startsWith(\"/\") ? \"/\" : \"\";\r\n  const stringify = p => p == null ? \"\" : typeof p === \"string\" ? p : String(p);\r\n  const segments = path.split(/\\/+/).map((segment, index, array) => {\r\n    const isLastSegment = index === array.length - 1;\r\n    // only apply the splat if it's the last segment\r\n    if (isLastSegment && segment === \"*\") {\r\n      const star = \"*\";\r\n      // Apply the splat\r\n      return stringify(params[star]);\r\n    }\r\n    const keyMatch = segment.match(/^:([\\w-]+)(\\??)$/);\r\n    if (keyMatch) {\r\n      const [, key, optional] = keyMatch;\r\n      let param = params[key];\r\n      invariant(optional === \"?\" || param != null, \"Missing \\\":\" + key + \"\\\" param\");\r\n      return stringify(param);\r\n    }\r\n    // Remove any optional markers from optional static segments\r\n    return segment.replace(/\\?$/g, \"\");\r\n  })\r\n  // Remove empty segments\r\n  .filter(segment => !!segment);\r\n  return prefix + segments.join(\"/\");\r\n}\r\n/**\r\n * Performs pattern matching on a URL pathname and returns information about\r\n * the match.\r\n *\r\n * @see https://reactrouter.com/v6/utils/match-path\r\n */\r\nfunction matchPath(pattern, pathname) {\r\n  if (typeof pattern === \"string\") {\r\n    pattern = {\r\n      path: pattern,\r\n      caseSensitive: false,\r\n      end: true\r\n    };\r\n  }\r\n  let [matcher, compiledParams] = compilePath(pattern.path, pattern.caseSensitive, pattern.end);\r\n  let match = pathname.match(matcher);\r\n  if (!match) return null;\r\n  let matchedPathname = match[0];\r\n  let pathnameBase = matchedPathname.replace(/(.)\\/+$/, \"$1\");\r\n  let captureGroups = match.slice(1);\r\n  let params = compiledParams.reduce((memo, _ref, index) => {\r\n    let {\r\n      paramName,\r\n      isOptional\r\n    } = _ref;\r\n    // We need to compute the pathnameBase here using the raw splat value\r\n    // instead of using params[\"*\"] later because it will be decoded then\r\n    if (paramName === \"*\") {\r\n      let splatValue = captureGroups[index] || \"\";\r\n      pathnameBase = matchedPathname.slice(0, matchedPathname.length - splatValue.length).replace(/(.)\\/+$/, \"$1\");\r\n    }\r\n    const value = captureGroups[index];\r\n    if (isOptional && !value) {\r\n      memo[paramName] = undefined;\r\n    } else {\r\n      memo[paramName] = (value || \"\").replace(/%2F/g, \"/\");\r\n    }\r\n    return memo;\r\n  }, {});\r\n  return {\r\n    params,\r\n    pathname: matchedPathname,\r\n    pathnameBase,\r\n    pattern\r\n  };\r\n}\r\nfunction compilePath(path, caseSensitive, end) {\r\n  if (caseSensitive === void 0) {\r\n    caseSensitive = false;\r\n  }\r\n  if (end === void 0) {\r\n    end = true;\r\n  }\r\n  warning(path === \"*\" || !path.endsWith(\"*\") || path.endsWith(\"/*\"), \"Route path \\\"\" + path + \"\\\" will be treated as if it were \" + (\"\\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\" because the `*` character must \") + \"always follow a `/` in the pattern. To get rid of this warning, \" + (\"please change the route path to \\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\".\"));\r\n  let params = [];\r\n  let regexpSource = \"^\" + path.replace(/\\/*\\*?$/, \"\") // Ignore trailing / and /*, we'll handle it below\r\n  .replace(/^\\/*/, \"/\") // Make sure it has a leading /\r\n  .replace(/[\\\\.*+^${}|()[\\]]/g, \"\\\\$&\") // Escape special regex chars\r\n  .replace(/\\/:([\\w-]+)(\\?)?/g, (_, paramName, isOptional) => {\r\n    params.push({\r\n      paramName,\r\n      isOptional: isOptional != null\r\n    });\r\n    return isOptional ? \"/?([^\\\\/]+)?\" : \"/([^\\\\/]+)\";\r\n  });\r\n  if (path.endsWith(\"*\")) {\r\n    params.push({\r\n      paramName: \"*\"\r\n    });\r\n    regexpSource += path === \"*\" || path === \"/*\" ? \"(.*)$\" // Already matched the initial /, just match the rest\r\n    : \"(?:\\\\/(.+)|\\\\/*)$\"; // Don't include the / in params[\"*\"]\r\n  } else if (end) {\r\n    // When matching to the end, ignore trailing slashes\r\n    regexpSource += \"\\\\/*$\";\r\n  } else if (path !== \"\" && path !== \"/\") {\r\n    // If our path is non-empty and contains anything beyond an initial slash,\r\n    // then we have _some_ form of path in our regex, so we should expect to\r\n    // match only if we find the end of this path segment.  Look for an optional\r\n    // non-captured trailing slash (to match a portion of the URL) or the end\r\n    // of the path (if we've matched to the end).  We used to do this with a\r\n    // word boundary but that gives false positives on routes like\r\n    // /user-preferences since `-` counts as a word boundary.\r\n    regexpSource += \"(?:(?=\\\\/|$))\";\r\n  } else ;\r\n  let matcher = new RegExp(regexpSource, caseSensitive ? undefined : \"i\");\r\n  return [matcher, params];\r\n}\r\nfunction decodePath(value) {\r\n  try {\r\n    return value.split(\"/\").map(v => decodeURIComponent(v).replace(/\\//g, \"%2F\")).join(\"/\");\r\n  } catch (error) {\r\n    warning(false, \"The URL path \\\"\" + value + \"\\\" could not be decoded because it is is a \" + \"malformed URL segment. This is probably due to a bad percent \" + (\"encoding (\" + error + \").\"));\r\n    return value;\r\n  }\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction stripBasename(pathname, basename) {\r\n  if (basename === \"/\") return pathname;\r\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\r\n    return null;\r\n  }\r\n  // We want to leave trailing slash behavior in the user's control, so if they\r\n  // specify a basename with a trailing slash, we should support it\r\n  let startIndex = basename.endsWith(\"/\") ? basename.length - 1 : basename.length;\r\n  let nextChar = pathname.charAt(startIndex);\r\n  if (nextChar && nextChar !== \"/\") {\r\n    // pathname does not start with basename/\r\n    return null;\r\n  }\r\n  return pathname.slice(startIndex) || \"/\";\r\n}\r\n/**\r\n * Returns a resolved path object relative to the given pathname.\r\n *\r\n * @see https://reactrouter.com/v6/utils/resolve-path\r\n */\r\nfunction resolvePath(to, fromPathname) {\r\n  if (fromPathname === void 0) {\r\n    fromPathname = \"/\";\r\n  }\r\n  let {\r\n    pathname: toPathname,\r\n    search = \"\",\r\n    hash = \"\"\r\n  } = typeof to === \"string\" ? parsePath(to) : to;\r\n  let pathname = toPathname ? toPathname.startsWith(\"/\") ? toPathname : resolvePathname(toPathname, fromPathname) : fromPathname;\r\n  return {\r\n    pathname,\r\n    search: normalizeSearch(search),\r\n    hash: normalizeHash(hash)\r\n  };\r\n}\r\nfunction resolvePathname(relativePath, fromPathname) {\r\n  let segments = fromPathname.replace(/\\/+$/, \"\").split(\"/\");\r\n  let relativeSegments = relativePath.split(\"/\");\r\n  relativeSegments.forEach(segment => {\r\n    if (segment === \"..\") {\r\n      // Keep the root \"\" segment so the pathname starts at /\r\n      if (segments.length > 1) segments.pop();\r\n    } else if (segment !== \".\") {\r\n      segments.push(segment);\r\n    }\r\n  });\r\n  return segments.length > 1 ? segments.join(\"/\") : \"/\";\r\n}\r\nfunction getInvalidPathError(char, field, dest, path) {\r\n  return \"Cannot include a '\" + char + \"' character in a manually specified \" + (\"`to.\" + field + \"` field [\" + JSON.stringify(path) + \"].  Please separate it out to the \") + (\"`to.\" + dest + \"` field. Alternatively you may provide the full path as \") + \"a string in <Link to=\\\"...\\\"> and the router will parse it for you.\";\r\n}\r\n/**\r\n * @private\r\n *\r\n * When processing relative navigation we want to ignore ancestor routes that\r\n * do not contribute to the path, such that index/pathless layout routes don't\r\n * interfere.\r\n *\r\n * For example, when moving a route element into an index route and/or a\r\n * pathless layout route, relative link behavior contained within should stay\r\n * the same.  Both of the following examples should link back to the root:\r\n *\r\n *   <Route path=\"/\">\r\n *     <Route path=\"accounts\" element={<Link to=\"..\"}>\r\n *   </Route>\r\n *\r\n *   <Route path=\"/\">\r\n *     <Route path=\"accounts\">\r\n *       <Route element={<AccountsLayout />}>       // <-- Does not contribute\r\n *         <Route index element={<Link to=\"..\"} />  // <-- Does not contribute\r\n *       </Route\r\n *     </Route>\r\n *   </Route>\r\n */\r\nfunction getPathContributingMatches(matches) {\r\n  return matches.filter((match, index) => index === 0 || match.route.path && match.route.path.length > 0);\r\n}\r\n// Return the array of pathnames for the current route matches - used to\r\n// generate the routePathnames input for resolveTo()\r\nfunction getResolveToMatches(matches, v7_relativeSplatPath) {\r\n  let pathMatches = getPathContributingMatches(matches);\r\n  // When v7_relativeSplatPath is enabled, use the full pathname for the leaf\r\n  // match so we include splat values for \".\" links.  See:\r\n  // https://github.com/remix-run/react-router/issues/11052#issuecomment-1836589329\r\n  if (v7_relativeSplatPath) {\r\n    return pathMatches.map((match, idx) => idx === pathMatches.length - 1 ? match.pathname : match.pathnameBase);\r\n  }\r\n  return pathMatches.map(match => match.pathnameBase);\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction resolveTo(toArg, routePathnames, locationPathname, isPathRelative) {\r\n  if (isPathRelative === void 0) {\r\n    isPathRelative = false;\r\n  }\r\n  let to;\r\n  if (typeof toArg === \"string\") {\r\n    to = parsePath(toArg);\r\n  } else {\r\n    to = _extends({}, toArg);\r\n    invariant(!to.pathname || !to.pathname.includes(\"?\"), getInvalidPathError(\"?\", \"pathname\", \"search\", to));\r\n    invariant(!to.pathname || !to.pathname.includes(\"#\"), getInvalidPathError(\"#\", \"pathname\", \"hash\", to));\r\n    invariant(!to.search || !to.search.includes(\"#\"), getInvalidPathError(\"#\", \"search\", \"hash\", to));\r\n  }\r\n  let isEmptyPath = toArg === \"\" || to.pathname === \"\";\r\n  let toPathname = isEmptyPath ? \"/\" : to.pathname;\r\n  let from;\r\n  // Routing is relative to the current pathname if explicitly requested.\r\n  //\r\n  // If a pathname is explicitly provided in `to`, it should be relative to the\r\n  // route context. This is explained in `Note on `<Link to>` values` in our\r\n  // migration guide from v5 as a means of disambiguation between `to` values\r\n  // that begin with `/` and those that do not. However, this is problematic for\r\n  // `to` values that do not provide a pathname. `to` can simply be a search or\r\n  // hash string, in which case we should assume that the navigation is relative\r\n  // to the current location's pathname and *not* the route pathname.\r\n  if (toPathname == null) {\r\n    from = locationPathname;\r\n  } else {\r\n    let routePathnameIndex = routePathnames.length - 1;\r\n    // With relative=\"route\" (the default), each leading .. segment means\r\n    // \"go up one route\" instead of \"go up one URL segment\".  This is a key\r\n    // difference from how <a href> works and a major reason we call this a\r\n    // \"to\" value instead of a \"href\".\r\n    if (!isPathRelative && toPathname.startsWith(\"..\")) {\r\n      let toSegments = toPathname.split(\"/\");\r\n      while (toSegments[0] === \"..\") {\r\n        toSegments.shift();\r\n        routePathnameIndex -= 1;\r\n      }\r\n      to.pathname = toSegments.join(\"/\");\r\n    }\r\n    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : \"/\";\r\n  }\r\n  let path = resolvePath(to, from);\r\n  // Ensure the pathname has a trailing slash if the original \"to\" had one\r\n  let hasExplicitTrailingSlash = toPathname && toPathname !== \"/\" && toPathname.endsWith(\"/\");\r\n  // Or if this was a link to the current path which has a trailing slash\r\n  let hasCurrentTrailingSlash = (isEmptyPath || toPathname === \".\") && locationPathname.endsWith(\"/\");\r\n  if (!path.pathname.endsWith(\"/\") && (hasExplicitTrailingSlash || hasCurrentTrailingSlash)) {\r\n    path.pathname += \"/\";\r\n  }\r\n  return path;\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction getToPathname(to) {\r\n  // Empty strings should be treated the same as / paths\r\n  return to === \"\" || to.pathname === \"\" ? \"/\" : typeof to === \"string\" ? parsePath(to).pathname : to.pathname;\r\n}\r\n/**\r\n * @private\r\n */\r\nconst joinPaths = paths => paths.join(\"/\").replace(/\\/\\/+/g, \"/\");\r\n/**\r\n * @private\r\n */\r\nconst normalizePathname = pathname => pathname.replace(/\\/+$/, \"\").replace(/^\\/*/, \"/\");\r\n/**\r\n * @private\r\n */\r\nconst normalizeSearch = search => !search || search === \"?\" ? \"\" : search.startsWith(\"?\") ? search : \"?\" + search;\r\n/**\r\n * @private\r\n */\r\nconst normalizeHash = hash => !hash || hash === \"#\" ? \"\" : hash.startsWith(\"#\") ? hash : \"#\" + hash;\r\n/**\r\n * This is a shortcut for creating `application/json` responses. Converts `data`\r\n * to JSON and sets the `Content-Type` header.\r\n *\r\n * @deprecated The `json` method is deprecated in favor of returning raw objects.\r\n * This method will be removed in v7.\r\n */\r\nconst json = function json(data, init) {\r\n  if (init === void 0) {\r\n    init = {};\r\n  }\r\n  let responseInit = typeof init === \"number\" ? {\r\n    status: init\r\n  } : init;\r\n  let headers = new Headers(responseInit.headers);\r\n  if (!headers.has(\"Content-Type\")) {\r\n    headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\r\n  }\r\n  return new Response(JSON.stringify(data), _extends({}, responseInit, {\r\n    headers\r\n  }));\r\n};\r\nclass DataWithResponseInit {\r\n  constructor(data, init) {\r\n    this.type = \"DataWithResponseInit\";\r\n    this.data = data;\r\n    this.init = init || null;\r\n  }\r\n}\r\n/**\r\n * Create \"responses\" that contain `status`/`headers` without forcing\r\n * serialization into an actual `Response` - used by Remix single fetch\r\n */\r\nfunction data(data, init) {\r\n  return new DataWithResponseInit(data, typeof init === \"number\" ? {\r\n    status: init\r\n  } : init);\r\n}\r\nclass AbortedDeferredError extends Error {}\r\nclass DeferredData {\r\n  constructor(data, responseInit) {\r\n    this.pendingKeysSet = new Set();\r\n    this.subscribers = new Set();\r\n    this.deferredKeys = [];\r\n    invariant(data && typeof data === \"object\" && !Array.isArray(data), \"defer() only accepts plain objects\");\r\n    // Set up an AbortController + Promise we can race against to exit early\r\n    // cancellation\r\n    let reject;\r\n    this.abortPromise = new Promise((_, r) => reject = r);\r\n    this.controller = new AbortController();\r\n    let onAbort = () => reject(new AbortedDeferredError(\"Deferred data aborted\"));\r\n    this.unlistenAbortSignal = () => this.controller.signal.removeEventListener(\"abort\", onAbort);\r\n    this.controller.signal.addEventListener(\"abort\", onAbort);\r\n    this.data = Object.entries(data).reduce((acc, _ref2) => {\r\n      let [key, value] = _ref2;\r\n      return Object.assign(acc, {\r\n        [key]: this.trackPromise(key, value)\r\n      });\r\n    }, {});\r\n    if (this.done) {\r\n      // All incoming values were resolved\r\n      this.unlistenAbortSignal();\r\n    }\r\n    this.init = responseInit;\r\n  }\r\n  trackPromise(key, value) {\r\n    if (!(value instanceof Promise)) {\r\n      return value;\r\n    }\r\n    this.deferredKeys.push(key);\r\n    this.pendingKeysSet.add(key);\r\n    // We store a little wrapper promise that will be extended with\r\n    // _data/_error props upon resolve/reject\r\n    let promise = Promise.race([value, this.abortPromise]).then(data => this.onSettle(promise, key, undefined, data), error => this.onSettle(promise, key, error));\r\n    // Register rejection listeners to avoid uncaught promise rejections on\r\n    // errors or aborted deferred values\r\n    promise.catch(() => {});\r\n    Object.defineProperty(promise, \"_tracked\", {\r\n      get: () => true\r\n    });\r\n    return promise;\r\n  }\r\n  onSettle(promise, key, error, data) {\r\n    if (this.controller.signal.aborted && error instanceof AbortedDeferredError) {\r\n      this.unlistenAbortSignal();\r\n      Object.defineProperty(promise, \"_error\", {\r\n        get: () => error\r\n      });\r\n      return Promise.reject(error);\r\n    }\r\n    this.pendingKeysSet.delete(key);\r\n    if (this.done) {\r\n      // Nothing left to abort!\r\n      this.unlistenAbortSignal();\r\n    }\r\n    // If the promise was resolved/rejected with undefined, we'll throw an error as you\r\n    // should always resolve with a value or null\r\n    if (error === undefined && data === undefined) {\r\n      let undefinedError = new Error(\"Deferred data for key \\\"\" + key + \"\\\" resolved/rejected with `undefined`, \" + \"you must resolve/reject with a value or `null`.\");\r\n      Object.defineProperty(promise, \"_error\", {\r\n        get: () => undefinedError\r\n      });\r\n      this.emit(false, key);\r\n      return Promise.reject(undefinedError);\r\n    }\r\n    if (data === undefined) {\r\n      Object.defineProperty(promise, \"_error\", {\r\n        get: () => error\r\n      });\r\n      this.emit(false, key);\r\n      return Promise.reject(error);\r\n    }\r\n    Object.defineProperty(promise, \"_data\", {\r\n      get: () => data\r\n    });\r\n    this.emit(false, key);\r\n    return data;\r\n  }\r\n  emit(aborted, settledKey) {\r\n    this.subscribers.forEach(subscriber => subscriber(aborted, settledKey));\r\n  }\r\n  subscribe(fn) {\r\n    this.subscribers.add(fn);\r\n    return () => this.subscribers.delete(fn);\r\n  }\r\n  cancel() {\r\n    this.controller.abort();\r\n    this.pendingKeysSet.forEach((v, k) => this.pendingKeysSet.delete(k));\r\n    this.emit(true);\r\n  }\r\n  async resolveData(signal) {\r\n    let aborted = false;\r\n    if (!this.done) {\r\n      let onAbort = () => this.cancel();\r\n      signal.addEventListener(\"abort\", onAbort);\r\n      aborted = await new Promise(resolve => {\r\n        this.subscribe(aborted => {\r\n          signal.removeEventListener(\"abort\", onAbort);\r\n          if (aborted || this.done) {\r\n            resolve(aborted);\r\n          }\r\n        });\r\n      });\r\n    }\r\n    return aborted;\r\n  }\r\n  get done() {\r\n    return this.pendingKeysSet.size === 0;\r\n  }\r\n  get unwrappedData() {\r\n    invariant(this.data !== null && this.done, \"Can only unwrap data on initialized and settled deferreds\");\r\n    return Object.entries(this.data).reduce((acc, _ref3) => {\r\n      let [key, value] = _ref3;\r\n      return Object.assign(acc, {\r\n        [key]: unwrapTrackedPromise(value)\r\n      });\r\n    }, {});\r\n  }\r\n  get pendingKeys() {\r\n    return Array.from(this.pendingKeysSet);\r\n  }\r\n}\r\nfunction isTrackedPromise(value) {\r\n  return value instanceof Promise && value._tracked === true;\r\n}\r\nfunction unwrapTrackedPromise(value) {\r\n  if (!isTrackedPromise(value)) {\r\n    return value;\r\n  }\r\n  if (value._error) {\r\n    throw value._error;\r\n  }\r\n  return value._data;\r\n}\r\n/**\r\n * @deprecated The `defer` method is deprecated in favor of returning raw\r\n * objects. This method will be removed in v7.\r\n */\r\nconst defer = function defer(data, init) {\r\n  if (init === void 0) {\r\n    init = {};\r\n  }\r\n  let responseInit = typeof init === \"number\" ? {\r\n    status: init\r\n  } : init;\r\n  return new DeferredData(data, responseInit);\r\n};\r\n/**\r\n * A redirect response. Sets the status code and the `Location` header.\r\n * Defaults to \"302 Found\".\r\n */\r\nconst redirect = function redirect(url, init) {\r\n  if (init === void 0) {\r\n    init = 302;\r\n  }\r\n  let responseInit = init;\r\n  if (typeof responseInit === \"number\") {\r\n    responseInit = {\r\n      status: responseInit\r\n    };\r\n  } else if (typeof responseInit.status === \"undefined\") {\r\n    responseInit.status = 302;\r\n  }\r\n  let headers = new Headers(responseInit.headers);\r\n  headers.set(\"Location\", url);\r\n  return new Response(null, _extends({}, responseInit, {\r\n    headers\r\n  }));\r\n};\r\n/**\r\n * A redirect response that will force a document reload to the new location.\r\n * Sets the status code and the `Location` header.\r\n * Defaults to \"302 Found\".\r\n */\r\nconst redirectDocument = (url, init) => {\r\n  let response = redirect(url, init);\r\n  response.headers.set(\"X-Remix-Reload-Document\", \"true\");\r\n  return response;\r\n};\r\n/**\r\n * A redirect response that will perform a `history.replaceState` instead of a\r\n * `history.pushState` for client-side navigation redirects.\r\n * Sets the status code and the `Location` header.\r\n * Defaults to \"302 Found\".\r\n */\r\nconst replace = (url, init) => {\r\n  let response = redirect(url, init);\r\n  response.headers.set(\"X-Remix-Replace\", \"true\");\r\n  return response;\r\n};\r\n/**\r\n * @private\r\n * Utility class we use to hold auto-unwrapped 4xx/5xx Response bodies\r\n *\r\n * We don't export the class for public use since it's an implementation\r\n * detail, but we export the interface above so folks can build their own\r\n * abstractions around instances via isRouteErrorResponse()\r\n */\r\nclass ErrorResponseImpl {\r\n  constructor(status, statusText, data, internal) {\r\n    if (internal === void 0) {\r\n      internal = false;\r\n    }\r\n    this.status = status;\r\n    this.statusText = statusText || \"\";\r\n    this.internal = internal;\r\n    if (data instanceof Error) {\r\n      this.data = data.toString();\r\n      this.error = data;\r\n    } else {\r\n      this.data = data;\r\n    }\r\n  }\r\n}\r\n/**\r\n * Check if the given error is an ErrorResponse generated from a 4xx/5xx\r\n * Response thrown from an action/loader\r\n */\r\nfunction isRouteErrorResponse(error) {\r\n  return error != null && typeof error.status === \"number\" && typeof error.statusText === \"string\" && typeof error.internal === \"boolean\" && \"data\" in error;\r\n}\r\n\r\nconst validMutationMethodsArr = [\"post\", \"put\", \"patch\", \"delete\"];\r\nconst validMutationMethods = new Set(validMutationMethodsArr);\r\nconst validRequestMethodsArr = [\"get\", ...validMutationMethodsArr];\r\nconst validRequestMethods = new Set(validRequestMethodsArr);\r\nconst redirectStatusCodes = new Set([301, 302, 303, 307, 308]);\r\nconst redirectPreserveMethodStatusCodes = new Set([307, 308]);\r\nconst IDLE_NAVIGATION = {\r\n  state: \"idle\",\r\n  location: undefined,\r\n  formMethod: undefined,\r\n  formAction: undefined,\r\n  formEncType: undefined,\r\n  formData: undefined,\r\n  json: undefined,\r\n  text: undefined\r\n};\r\nconst IDLE_FETCHER = {\r\n  state: \"idle\",\r\n  data: undefined,\r\n  formMethod: undefined,\r\n  formAction: undefined,\r\n  formEncType: undefined,\r\n  formData: undefined,\r\n  json: undefined,\r\n  text: undefined\r\n};\r\nconst IDLE_BLOCKER = {\r\n  state: \"unblocked\",\r\n  proceed: undefined,\r\n  reset: undefined,\r\n  location: undefined\r\n};\r\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\r\nconst defaultMapRouteProperties = route => ({\r\n  hasErrorBoundary: Boolean(route.hasErrorBoundary)\r\n});\r\nconst TRANSITIONS_STORAGE_KEY = \"remix-router-transitions\";\r\n//#endregion\r\n////////////////////////////////////////////////////////////////////////////////\r\n//#region createRouter\r\n////////////////////////////////////////////////////////////////////////////////\r\n/**\r\n * Create a router and listen to history POP navigations\r\n */\r\nfunction createRouter(init) {\r\n  const routerWindow = init.window ? init.window : typeof window !== \"undefined\" ? window : undefined;\r\n  const isBrowser = typeof routerWindow !== \"undefined\" && typeof routerWindow.document !== \"undefined\" && typeof routerWindow.document.createElement !== \"undefined\";\r\n  const isServer = !isBrowser;\r\n  invariant(init.routes.length > 0, \"You must provide a non-empty routes array to createRouter\");\r\n  let mapRouteProperties;\r\n  if (init.mapRouteProperties) {\r\n    mapRouteProperties = init.mapRouteProperties;\r\n  } else if (init.detectErrorBoundary) {\r\n    // If they are still using the deprecated version, wrap it with the new API\r\n    let detectErrorBoundary = init.detectErrorBoundary;\r\n    mapRouteProperties = route => ({\r\n      hasErrorBoundary: detectErrorBoundary(route)\r\n    });\r\n  } else {\r\n    mapRouteProperties = defaultMapRouteProperties;\r\n  }\r\n  // Routes keyed by ID\r\n  let manifest = {};\r\n  // Routes in tree format for matching\r\n  let dataRoutes = convertRoutesToDataRoutes(init.routes, mapRouteProperties, undefined, manifest);\r\n  let inFlightDataRoutes;\r\n  let basename = init.basename || \"/\";\r\n  let dataStrategyImpl = init.dataStrategy || defaultDataStrategy;\r\n  let patchRoutesOnNavigationImpl = init.patchRoutesOnNavigation;\r\n  // Config driven behavior flags\r\n  let future = _extends({\r\n    v7_fetcherPersist: false,\r\n    v7_normalizeFormMethod: false,\r\n    v7_partialHydration: false,\r\n    v7_prependBasename: false,\r\n    v7_relativeSplatPath: false,\r\n    v7_skipActionErrorRevalidation: false\r\n  }, init.future);\r\n  // Cleanup function for history\r\n  let unlistenHistory = null;\r\n  // Externally-provided functions to call on all state changes\r\n  let subscribers = new Set();\r\n  // Externally-provided object to hold scroll restoration locations during routing\r\n  let savedScrollPositions = null;\r\n  // Externally-provided function to get scroll restoration keys\r\n  let getScrollRestorationKey = null;\r\n  // Externally-provided function to get current scroll position\r\n  let getScrollPosition = null;\r\n  // One-time flag to control the initial hydration scroll restoration.  Because\r\n  // we don't get the saved positions from <ScrollRestoration /> until _after_\r\n  // the initial render, we need to manually trigger a separate updateState to\r\n  // send along the restoreScrollPosition\r\n  // Set to true if we have `hydrationData` since we assume we were SSR'd and that\r\n  // SSR did the initial scroll restoration.\r\n  let initialScrollRestored = init.hydrationData != null;\r\n  let initialMatches = matchRoutes(dataRoutes, init.history.location, basename);\r\n  let initialMatchesIsFOW = false;\r\n  let initialErrors = null;\r\n  if (initialMatches == null && !patchRoutesOnNavigationImpl) {\r\n    // If we do not match a user-provided-route, fall back to the root\r\n    // to allow the error boundary to take over\r\n    let error = getInternalRouterError(404, {\r\n      pathname: init.history.location.pathname\r\n    });\r\n    let {\r\n      matches,\r\n      route\r\n    } = getShortCircuitMatches(dataRoutes);\r\n    initialMatches = matches;\r\n    initialErrors = {\r\n      [route.id]: error\r\n    };\r\n  }\r\n  // In SPA apps, if the user provided a patchRoutesOnNavigation implementation and\r\n  // our initial match is a splat route, clear them out so we run through lazy\r\n  // discovery on hydration in case there's a more accurate lazy route match.\r\n  // In SSR apps (with `hydrationData`), we expect that the server will send\r\n  // up the proper matched routes so we don't want to run lazy discovery on\r\n  // initial hydration and want to hydrate into the splat route.\r\n  if (initialMatches && !init.hydrationData) {\r\n    let fogOfWar = checkFogOfWar(initialMatches, dataRoutes, init.history.location.pathname);\r\n    if (fogOfWar.active) {\r\n      initialMatches = null;\r\n    }\r\n  }\r\n  let initialized;\r\n  if (!initialMatches) {\r\n    initialized = false;\r\n    initialMatches = [];\r\n    // If partial hydration and fog of war is enabled, we will be running\r\n    // `patchRoutesOnNavigation` during hydration so include any partial matches as\r\n    // the initial matches so we can properly render `HydrateFallback`'s\r\n    if (future.v7_partialHydration) {\r\n      let fogOfWar = checkFogOfWar(null, dataRoutes, init.history.location.pathname);\r\n      if (fogOfWar.active && fogOfWar.matches) {\r\n        initialMatchesIsFOW = true;\r\n        initialMatches = fogOfWar.matches;\r\n      }\r\n    }\r\n  } else if (initialMatches.some(m => m.route.lazy)) {\r\n    // All initialMatches need to be loaded before we're ready.  If we have lazy\r\n    // functions around still then we'll need to run them in initialize()\r\n    initialized = false;\r\n  } else if (!initialMatches.some(m => m.route.loader)) {\r\n    // If we've got no loaders to run, then we're good to go\r\n    initialized = true;\r\n  } else if (future.v7_partialHydration) {\r\n    // If partial hydration is enabled, we're initialized so long as we were\r\n    // provided with hydrationData for every route with a loader, and no loaders\r\n    // were marked for explicit hydration\r\n    let loaderData = init.hydrationData ? init.hydrationData.loaderData : null;\r\n    let errors = init.hydrationData ? init.hydrationData.errors : null;\r\n    // If errors exist, don't consider routes below the boundary\r\n    if (errors) {\r\n      let idx = initialMatches.findIndex(m => errors[m.route.id] !== undefined);\r\n      initialized = initialMatches.slice(0, idx + 1).every(m => !shouldLoadRouteOnHydration(m.route, loaderData, errors));\r\n    } else {\r\n      initialized = initialMatches.every(m => !shouldLoadRouteOnHydration(m.route, loaderData, errors));\r\n    }\r\n  } else {\r\n    // Without partial hydration - we're initialized if we were provided any\r\n    // hydrationData - which is expected to be complete\r\n    initialized = init.hydrationData != null;\r\n  }\r\n  let router;\r\n  let state = {\r\n    historyAction: init.history.action,\r\n    location: init.history.location,\r\n    matches: initialMatches,\r\n    initialized,\r\n    navigation: IDLE_NAVIGATION,\r\n    // Don't restore on initial updateState() if we were SSR'd\r\n    restoreScrollPosition: init.hydrationData != null ? false : null,\r\n    preventScrollReset: false,\r\n    revalidation: \"idle\",\r\n    loaderData: init.hydrationData && init.hydrationData.loaderData || {},\r\n    actionData: init.hydrationData && init.hydrationData.actionData || null,\r\n    errors: init.hydrationData && init.hydrationData.errors || initialErrors,\r\n    fetchers: new Map(),\r\n    blockers: new Map()\r\n  };\r\n  // -- Stateful internal variables to manage navigations --\r\n  // Current navigation in progress (to be committed in completeNavigation)\r\n  let pendingAction = Action.Pop;\r\n  // Should the current navigation prevent the scroll reset if scroll cannot\r\n  // be restored?\r\n  let pendingPreventScrollReset = false;\r\n  // AbortController for the active navigation\r\n  let pendingNavigationController;\r\n  // Should the current navigation enable document.startViewTransition?\r\n  let pendingViewTransitionEnabled = false;\r\n  // Store applied view transitions so we can apply them on POP\r\n  let appliedViewTransitions = new Map();\r\n  // Cleanup function for persisting applied transitions to sessionStorage\r\n  let removePageHideEventListener = null;\r\n  // We use this to avoid touching history in completeNavigation if a\r\n  // revalidation is entirely uninterrupted\r\n  let isUninterruptedRevalidation = false;\r\n  // Use this internal flag to force revalidation of all loaders:\r\n  //  - submissions (completed or interrupted)\r\n  //  - useRevalidator()\r\n  //  - X-Remix-Revalidate (from redirect)\r\n  let isRevalidationRequired = false;\r\n  // Use this internal array to capture routes that require revalidation due\r\n  // to a cancelled deferred on action submission\r\n  let cancelledDeferredRoutes = [];\r\n  // Use this internal array to capture fetcher loads that were cancelled by an\r\n  // action navigation and require revalidation\r\n  let cancelledFetcherLoads = new Set();\r\n  // AbortControllers for any in-flight fetchers\r\n  let fetchControllers = new Map();\r\n  // Track loads based on the order in which they started\r\n  let incrementingLoadId = 0;\r\n  // Track the outstanding pending navigation data load to be compared against\r\n  // the globally incrementing load when a fetcher load lands after a completed\r\n  // navigation\r\n  let pendingNavigationLoadId = -1;\r\n  // Fetchers that triggered data reloads as a result of their actions\r\n  let fetchReloadIds = new Map();\r\n  // Fetchers that triggered redirect navigations\r\n  let fetchRedirectIds = new Set();\r\n  // Most recent href/match for fetcher.load calls for fetchers\r\n  let fetchLoadMatches = new Map();\r\n  // Ref-count mounted fetchers so we know when it's ok to clean them up\r\n  let activeFetchers = new Map();\r\n  // Fetchers that have requested a delete when using v7_fetcherPersist,\r\n  // they'll be officially removed after they return to idle\r\n  let deletedFetchers = new Set();\r\n  // Store DeferredData instances for active route matches.  When a\r\n  // route loader returns defer() we stick one in here.  Then, when a nested\r\n  // promise resolves we update loaderData.  If a new navigation starts we\r\n  // cancel active deferreds for eliminated routes.\r\n  let activeDeferreds = new Map();\r\n  // Store blocker functions in a separate Map outside of router state since\r\n  // we don't need to update UI state if they change\r\n  let blockerFunctions = new Map();\r\n  // Flag to ignore the next history update, so we can revert the URL change on\r\n  // a POP navigation that was blocked by the user without touching router state\r\n  let unblockBlockerHistoryUpdate = undefined;\r\n  // Initialize the router, all side effects should be kicked off from here.\r\n  // Implemented as a Fluent API for ease of:\r\n  //   let router = createRouter(init).initialize();\r\n  function initialize() {\r\n    // If history informs us of a POP navigation, start the navigation but do not update\r\n    // state.  We'll update our own state once the navigation completes\r\n    unlistenHistory = init.history.listen(_ref => {\r\n      let {\r\n        action: historyAction,\r\n        location,\r\n        delta\r\n      } = _ref;\r\n      // Ignore this event if it was just us resetting the URL from a\r\n      // blocked POP navigation\r\n      if (unblockBlockerHistoryUpdate) {\r\n        unblockBlockerHistoryUpdate();\r\n        unblockBlockerHistoryUpdate = undefined;\r\n        return;\r\n      }\r\n      warning(blockerFunctions.size === 0 || delta != null, \"You are trying to use a blocker on a POP navigation to a location \" + \"that was not created by @remix-run/router. This will fail silently in \" + \"production. This can happen if you are navigating outside the router \" + \"via `window.history.pushState`/`window.location.hash` instead of using \" + \"router navigation APIs.  This can also happen if you are using \" + \"createHashRouter and the user manually changes the URL.\");\r\n      let blockerKey = shouldBlockNavigation({\r\n        currentLocation: state.location,\r\n        nextLocation: location,\r\n        historyAction\r\n      });\r\n      if (blockerKey && delta != null) {\r\n        // Restore the URL to match the current UI, but don't update router state\r\n        let nextHistoryUpdatePromise = new Promise(resolve => {\r\n          unblockBlockerHistoryUpdate = resolve;\r\n        });\r\n        init.history.go(delta * -1);\r\n        // Put the blocker into a blocked state\r\n        updateBlocker(blockerKey, {\r\n          state: \"blocked\",\r\n          location,\r\n          proceed() {\r\n            updateBlocker(blockerKey, {\r\n              state: \"proceeding\",\r\n              proceed: undefined,\r\n              reset: undefined,\r\n              location\r\n            });\r\n            // Re-do the same POP navigation we just blocked, after the url\r\n            // restoration is also complete.  See:\r\n            // https://github.com/remix-run/react-router/issues/11613\r\n            nextHistoryUpdatePromise.then(() => init.history.go(delta));\r\n          },\r\n          reset() {\r\n            let blockers = new Map(state.blockers);\r\n            blockers.set(blockerKey, IDLE_BLOCKER);\r\n            updateState({\r\n              blockers\r\n            });\r\n          }\r\n        });\r\n        return;\r\n      }\r\n      return startNavigation(historyAction, location);\r\n    });\r\n    if (isBrowser) {\r\n      // FIXME: This feels gross.  How can we cleanup the lines between\r\n      // scrollRestoration/appliedTransitions persistance?\r\n      restoreAppliedTransitions(routerWindow, appliedViewTransitions);\r\n      let _saveAppliedTransitions = () => persistAppliedTransitions(routerWindow, appliedViewTransitions);\r\n      routerWindow.addEventListener(\"pagehide\", _saveAppliedTransitions);\r\n      removePageHideEventListener = () => routerWindow.removeEventListener(\"pagehide\", _saveAppliedTransitions);\r\n    }\r\n    // Kick off initial data load if needed.  Use Pop to avoid modifying history\r\n    // Note we don't do any handling of lazy here.  For SPA's it'll get handled\r\n    // in the normal navigation flow.  For SSR it's expected that lazy modules are\r\n    // resolved prior to router creation since we can't go into a fallbackElement\r\n    // UI for SSR'd apps\r\n    if (!state.initialized) {\r\n      startNavigation(Action.Pop, state.location, {\r\n        initialHydration: true\r\n      });\r\n    }\r\n    return router;\r\n  }\r\n  // Clean up a router and it's side effects\r\n  function dispose() {\r\n    if (unlistenHistory) {\r\n      unlistenHistory();\r\n    }\r\n    if (removePageHideEventListener) {\r\n      removePageHideEventListener();\r\n    }\r\n    subscribers.clear();\r\n    pendingNavigationController && pendingNavigationController.abort();\r\n    state.fetchers.forEach((_, key) => deleteFetcher(key));\r\n    state.blockers.forEach((_, key) => deleteBlocker(key));\r\n  }\r\n  // Subscribe to state updates for the router\r\n  function subscribe(fn) {\r\n    subscribers.add(fn);\r\n    return () => subscribers.delete(fn);\r\n  }\r\n  // Update our state and notify the calling context of the change\r\n  function updateState(newState, opts) {\r\n    if (opts === void 0) {\r\n      opts = {};\r\n    }\r\n    state = _extends({}, state, newState);\r\n    // Prep fetcher cleanup so we can tell the UI which fetcher data entries\r\n    // can be removed\r\n    let completedFetchers = [];\r\n    let deletedFetchersKeys = [];\r\n    if (future.v7_fetcherPersist) {\r\n      state.fetchers.forEach((fetcher, key) => {\r\n        if (fetcher.state === \"idle\") {\r\n          if (deletedFetchers.has(key)) {\r\n            // Unmounted from the UI and can be totally removed\r\n            deletedFetchersKeys.push(key);\r\n          } else {\r\n            // Returned to idle but still mounted in the UI, so semi-remains for\r\n            // revalidations and such\r\n            completedFetchers.push(key);\r\n          }\r\n        }\r\n      });\r\n    }\r\n    // Remove any lingering deleted fetchers that have already been removed\r\n    // from state.fetchers\r\n    deletedFetchers.forEach(key => {\r\n      if (!state.fetchers.has(key) && !fetchControllers.has(key)) {\r\n        deletedFetchersKeys.push(key);\r\n      }\r\n    });\r\n    // Iterate over a local copy so that if flushSync is used and we end up\r\n    // removing and adding a new subscriber due to the useCallback dependencies,\r\n    // we don't get ourselves into a loop calling the new subscriber immediately\r\n    [...subscribers].forEach(subscriber => subscriber(state, {\r\n      deletedFetchers: deletedFetchersKeys,\r\n      viewTransitionOpts: opts.viewTransitionOpts,\r\n      flushSync: opts.flushSync === true\r\n    }));\r\n    // Remove idle fetchers from state since we only care about in-flight fetchers.\r\n    if (future.v7_fetcherPersist) {\r\n      completedFetchers.forEach(key => state.fetchers.delete(key));\r\n      deletedFetchersKeys.forEach(key => deleteFetcher(key));\r\n    } else {\r\n      // We already called deleteFetcher() on these, can remove them from this\r\n      // Set now that we've handed the keys off to the data layer\r\n      deletedFetchersKeys.forEach(key => deletedFetchers.delete(key));\r\n    }\r\n  }\r\n  // Complete a navigation returning the state.navigation back to the IDLE_NAVIGATION\r\n  // and setting state.[historyAction/location/matches] to the new route.\r\n  // - Location is a required param\r\n  // - Navigation will always be set to IDLE_NAVIGATION\r\n  // - Can pass any other state in newState\r\n  function completeNavigation(location, newState, _temp) {\r\n    var _location$state, _location$state2;\r\n    let {\r\n      flushSync\r\n    } = _temp === void 0 ? {} : _temp;\r\n    // Deduce if we're in a loading/actionReload state:\r\n    // - We have committed actionData in the store\r\n    // - The current navigation was a mutation submission\r\n    // - We're past the submitting state and into the loading state\r\n    // - The location being loaded is not the result of a redirect\r\n    let isActionReload = state.actionData != null && state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && state.navigation.state === \"loading\" && ((_location$state = location.state) == null ? void 0 : _location$state._isRedirect) !== true;\r\n    let actionData;\r\n    if (newState.actionData) {\r\n      if (Object.keys(newState.actionData).length > 0) {\r\n        actionData = newState.actionData;\r\n      } else {\r\n        // Empty actionData -> clear prior actionData due to an action error\r\n        actionData = null;\r\n      }\r\n    } else if (isActionReload) {\r\n      // Keep the current data if we're wrapping up the action reload\r\n      actionData = state.actionData;\r\n    } else {\r\n      // Clear actionData on any other completed navigations\r\n      actionData = null;\r\n    }\r\n    // Always preserve any existing loaderData from re-used routes\r\n    let loaderData = newState.loaderData ? mergeLoaderData(state.loaderData, newState.loaderData, newState.matches || [], newState.errors) : state.loaderData;\r\n    // On a successful navigation we can assume we got through all blockers\r\n    // so we can start fresh\r\n    let blockers = state.blockers;\r\n    if (blockers.size > 0) {\r\n      blockers = new Map(blockers);\r\n      blockers.forEach((_, k) => blockers.set(k, IDLE_BLOCKER));\r\n    }\r\n    // Always respect the user flag.  Otherwise don't reset on mutation\r\n    // submission navigations unless they redirect\r\n    let preventScrollReset = pendingPreventScrollReset === true || state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && ((_location$state2 = location.state) == null ? void 0 : _location$state2._isRedirect) !== true;\r\n    // Commit any in-flight routes at the end of the HMR revalidation \"navigation\"\r\n    if (inFlightDataRoutes) {\r\n      dataRoutes = inFlightDataRoutes;\r\n      inFlightDataRoutes = undefined;\r\n    }\r\n    if (isUninterruptedRevalidation) ; else if (pendingAction === Action.Pop) ; else if (pendingAction === Action.Push) {\r\n      init.history.push(location, location.state);\r\n    } else if (pendingAction === Action.Replace) {\r\n      init.history.replace(location, location.state);\r\n    }\r\n    let viewTransitionOpts;\r\n    // On POP, enable transitions if they were enabled on the original navigation\r\n    if (pendingAction === Action.Pop) {\r\n      // Forward takes precedence so they behave like the original navigation\r\n      let priorPaths = appliedViewTransitions.get(state.location.pathname);\r\n      if (priorPaths && priorPaths.has(location.pathname)) {\r\n        viewTransitionOpts = {\r\n          currentLocation: state.location,\r\n          nextLocation: location\r\n        };\r\n      } else if (appliedViewTransitions.has(location.pathname)) {\r\n        // If we don't have a previous forward nav, assume we're popping back to\r\n        // the new location and enable if that location previously enabled\r\n        viewTransitionOpts = {\r\n          currentLocation: location,\r\n          nextLocation: state.location\r\n        };\r\n      }\r\n    } else if (pendingViewTransitionEnabled) {\r\n      // Store the applied transition on PUSH/REPLACE\r\n      let toPaths = appliedViewTransitions.get(state.location.pathname);\r\n      if (toPaths) {\r\n        toPaths.add(location.pathname);\r\n      } else {\r\n        toPaths = new Set([location.pathname]);\r\n        appliedViewTransitions.set(state.location.pathname, toPaths);\r\n      }\r\n      viewTransitionOpts = {\r\n        currentLocation: state.location,\r\n        nextLocation: location\r\n      };\r\n    }\r\n    updateState(_extends({}, newState, {\r\n      actionData,\r\n      loaderData,\r\n      historyAction: pendingAction,\r\n      location,\r\n      initialized: true,\r\n      navigation: IDLE_NAVIGATION,\r\n      revalidation: \"idle\",\r\n      restoreScrollPosition: getSavedScrollPosition(location, newState.matches || state.matches),\r\n      preventScrollReset,\r\n      blockers\r\n    }), {\r\n      viewTransitionOpts,\r\n      flushSync: flushSync === true\r\n    });\r\n    // Reset stateful navigation vars\r\n    pendingAction = Action.Pop;\r\n    pendingPreventScrollReset = false;\r\n    pendingViewTransitionEnabled = false;\r\n    isUninterruptedRevalidation = false;\r\n    isRevalidationRequired = false;\r\n    cancelledDeferredRoutes = [];\r\n  }\r\n  // Trigger a navigation event, which can either be a numerical POP or a PUSH\r\n  // replace with an optional submission\r\n  async function navigate(to, opts) {\r\n    if (typeof to === \"number\") {\r\n      init.history.go(to);\r\n      return;\r\n    }\r\n    let normalizedPath = normalizeTo(state.location, state.matches, basename, future.v7_prependBasename, to, future.v7_relativeSplatPath, opts == null ? void 0 : opts.fromRouteId, opts == null ? void 0 : opts.relative);\r\n    let {\r\n      path,\r\n      submission,\r\n      error\r\n    } = normalizeNavigateOptions(future.v7_normalizeFormMethod, false, normalizedPath, opts);\r\n    let currentLocation = state.location;\r\n    let nextLocation = createLocation(state.location, path, opts && opts.state);\r\n    // When using navigate as a PUSH/REPLACE we aren't reading an already-encoded\r\n    // URL from window.location, so we need to encode it here so the behavior\r\n    // remains the same as POP and non-data-router usages.  new URL() does all\r\n    // the same encoding we'd get from a history.pushState/window.location read\r\n    // without having to touch history\r\n    nextLocation = _extends({}, nextLocation, init.history.encodeLocation(nextLocation));\r\n    let userReplace = opts && opts.replace != null ? opts.replace : undefined;\r\n    let historyAction = Action.Push;\r\n    if (userReplace === true) {\r\n      historyAction = Action.Replace;\r\n    } else if (userReplace === false) ; else if (submission != null && isMutationMethod(submission.formMethod) && submission.formAction === state.location.pathname + state.location.search) {\r\n      // By default on submissions to the current location we REPLACE so that\r\n      // users don't have to double-click the back button to get to the prior\r\n      // location.  If the user redirects to a different location from the\r\n      // action/loader this will be ignored and the redirect will be a PUSH\r\n      historyAction = Action.Replace;\r\n    }\r\n    let preventScrollReset = opts && \"preventScrollReset\" in opts ? opts.preventScrollReset === true : undefined;\r\n    let flushSync = (opts && opts.flushSync) === true;\r\n    let blockerKey = shouldBlockNavigation({\r\n      currentLocation,\r\n      nextLocation,\r\n      historyAction\r\n    });\r\n    if (blockerKey) {\r\n      // Put the blocker into a blocked state\r\n      updateBlocker(blockerKey, {\r\n        state: \"blocked\",\r\n        location: nextLocation,\r\n        proceed() {\r\n          updateBlocker(blockerKey, {\r\n            state: \"proceeding\",\r\n            proceed: undefined,\r\n            reset: undefined,\r\n            location: nextLocation\r\n          });\r\n          // Send the same navigation through\r\n          navigate(to, opts);\r\n        },\r\n        reset() {\r\n          let blockers = new Map(state.blockers);\r\n          blockers.set(blockerKey, IDLE_BLOCKER);\r\n          updateState({\r\n            blockers\r\n          });\r\n        }\r\n      });\r\n      return;\r\n    }\r\n    return await startNavigation(historyAction, nextLocation, {\r\n      submission,\r\n      // Send through the formData serialization error if we have one so we can\r\n      // render at the right error boundary after we match routes\r\n      pendingError: error,\r\n      preventScrollReset,\r\n      replace: opts && opts.replace,\r\n      enableViewTransition: opts && opts.viewTransition,\r\n      flushSync\r\n    });\r\n  }\r\n  // Revalidate all current loaders.  If a navigation is in progress or if this\r\n  // is interrupted by a navigation, allow this to \"succeed\" by calling all\r\n  // loaders during the next loader round\r\n  function revalidate() {\r\n    interruptActiveLoads();\r\n    updateState({\r\n      revalidation: \"loading\"\r\n    });\r\n    // If we're currently submitting an action, we don't need to start a new\r\n    // navigation, we'll just let the follow up loader execution call all loaders\r\n    if (state.navigation.state === \"submitting\") {\r\n      return;\r\n    }\r\n    // If we're currently in an idle state, start a new navigation for the current\r\n    // action/location and mark it as uninterrupted, which will skip the history\r\n    // update in completeNavigation\r\n    if (state.navigation.state === \"idle\") {\r\n      startNavigation(state.historyAction, state.location, {\r\n        startUninterruptedRevalidation: true\r\n      });\r\n      return;\r\n    }\r\n    // Otherwise, if we're currently in a loading state, just start a new\r\n    // navigation to the navigation.location but do not trigger an uninterrupted\r\n    // revalidation so that history correctly updates once the navigation completes\r\n    startNavigation(pendingAction || state.historyAction, state.navigation.location, {\r\n      overrideNavigation: state.navigation,\r\n      // Proxy through any rending view transition\r\n      enableViewTransition: pendingViewTransitionEnabled === true\r\n    });\r\n  }\r\n  // Start a navigation to the given action/location.  Can optionally provide a\r\n  // overrideNavigation which will override the normalLoad in the case of a redirect\r\n  // navigation\r\n  async function startNavigation(historyAction, location, opts) {\r\n    // Abort any in-progress navigations and start a new one. Unset any ongoing\r\n    // uninterrupted revalidations unless told otherwise, since we want this\r\n    // new navigation to update history normally\r\n    pendingNavigationController && pendingNavigationController.abort();\r\n    pendingNavigationController = null;\r\n    pendingAction = historyAction;\r\n    isUninterruptedRevalidation = (opts && opts.startUninterruptedRevalidation) === true;\r\n    // Save the current scroll position every time we start a new navigation,\r\n    // and track whether we should reset scroll on completion\r\n    saveScrollPosition(state.location, state.matches);\r\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\r\n    pendingViewTransitionEnabled = (opts && opts.enableViewTransition) === true;\r\n    let routesToUse = inFlightDataRoutes || dataRoutes;\r\n    let loadingNavigation = opts && opts.overrideNavigation;\r\n    let matches = opts != null && opts.initialHydration && state.matches && state.matches.length > 0 && !initialMatchesIsFOW ?\r\n    // `matchRoutes()` has already been called if we're in here via `router.initialize()`\r\n    state.matches : matchRoutes(routesToUse, location, basename);\r\n    let flushSync = (opts && opts.flushSync) === true;\r\n    // Short circuit if it's only a hash change and not a revalidation or\r\n    // mutation submission.\r\n    //\r\n    // Ignore on initial page loads because since the initial hydration will always\r\n    // be \"same hash\".  For example, on /page#hash and submit a <Form method=\"post\">\r\n    // which will default to a navigation to /page\r\n    if (matches && state.initialized && !isRevalidationRequired && isHashChangeOnly(state.location, location) && !(opts && opts.submission && isMutationMethod(opts.submission.formMethod))) {\r\n      completeNavigation(location, {\r\n        matches\r\n      }, {\r\n        flushSync\r\n      });\r\n      return;\r\n    }\r\n    let fogOfWar = checkFogOfWar(matches, routesToUse, location.pathname);\r\n    if (fogOfWar.active && fogOfWar.matches) {\r\n      matches = fogOfWar.matches;\r\n    }\r\n    // Short circuit with a 404 on the root error boundary if we match nothing\r\n    if (!matches) {\r\n      let {\r\n        error,\r\n        notFoundMatches,\r\n        route\r\n      } = handleNavigational404(location.pathname);\r\n      completeNavigation(location, {\r\n        matches: notFoundMatches,\r\n        loaderData: {},\r\n        errors: {\r\n          [route.id]: error\r\n        }\r\n      }, {\r\n        flushSync\r\n      });\r\n      return;\r\n    }\r\n    // Create a controller/Request for this navigation\r\n    pendingNavigationController = new AbortController();\r\n    let request = createClientSideRequest(init.history, location, pendingNavigationController.signal, opts && opts.submission);\r\n    let pendingActionResult;\r\n    if (opts && opts.pendingError) {\r\n      // If we have a pendingError, it means the user attempted a GET submission\r\n      // with binary FormData so assign here and skip to handleLoaders.  That\r\n      // way we handle calling loaders above the boundary etc.  It's not really\r\n      // different from an actionError in that sense.\r\n      pendingActionResult = [findNearestBoundary(matches).route.id, {\r\n        type: ResultType.error,\r\n        error: opts.pendingError\r\n      }];\r\n    } else if (opts && opts.submission && isMutationMethod(opts.submission.formMethod)) {\r\n      // Call action if we received an action submission\r\n      let actionResult = await handleAction(request, location, opts.submission, matches, fogOfWar.active, {\r\n        replace: opts.replace,\r\n        flushSync\r\n      });\r\n      if (actionResult.shortCircuited) {\r\n        return;\r\n      }\r\n      // If we received a 404 from handleAction, it's because we couldn't lazily\r\n      // discover the destination route so we don't want to call loaders\r\n      if (actionResult.pendingActionResult) {\r\n        let [routeId, result] = actionResult.pendingActionResult;\r\n        if (isErrorResult(result) && isRouteErrorResponse(result.error) && result.error.status === 404) {\r\n          pendingNavigationController = null;\r\n          completeNavigation(location, {\r\n            matches: actionResult.matches,\r\n            loaderData: {},\r\n            errors: {\r\n              [routeId]: result.error\r\n            }\r\n          });\r\n          return;\r\n        }\r\n      }\r\n      matches = actionResult.matches || matches;\r\n      pendingActionResult = actionResult.pendingActionResult;\r\n      loadingNavigation = getLoadingNavigation(location, opts.submission);\r\n      flushSync = false;\r\n      // No need to do fog of war matching again on loader execution\r\n      fogOfWar.active = false;\r\n      // Create a GET request for the loaders\r\n      request = createClientSideRequest(init.history, request.url, request.signal);\r\n    }\r\n    // Call loaders\r\n    let {\r\n      shortCircuited,\r\n      matches: updatedMatches,\r\n      loaderData,\r\n      errors\r\n    } = await handleLoaders(request, location, matches, fogOfWar.active, loadingNavigation, opts && opts.submission, opts && opts.fetcherSubmission, opts && opts.replace, opts && opts.initialHydration === true, flushSync, pendingActionResult);\r\n    if (shortCircuited) {\r\n      return;\r\n    }\r\n    // Clean up now that the action/loaders have completed.  Don't clean up if\r\n    // we short circuited because pendingNavigationController will have already\r\n    // been assigned to a new controller for the next navigation\r\n    pendingNavigationController = null;\r\n    completeNavigation(location, _extends({\r\n      matches: updatedMatches || matches\r\n    }, getActionDataForCommit(pendingActionResult), {\r\n      loaderData,\r\n      errors\r\n    }));\r\n  }\r\n  // Call the action matched by the leaf route for this navigation and handle\r\n  // redirects/errors\r\n  async function handleAction(request, location, submission, matches, isFogOfWar, opts) {\r\n    if (opts === void 0) {\r\n      opts = {};\r\n    }\r\n    interruptActiveLoads();\r\n    // Put us in a submitting state\r\n    let navigation = getSubmittingNavigation(location, submission);\r\n    updateState({\r\n      navigation\r\n    }, {\r\n      flushSync: opts.flushSync === true\r\n    });\r\n    if (isFogOfWar) {\r\n      let discoverResult = await discoverRoutes(matches, location.pathname, request.signal);\r\n      if (discoverResult.type === \"aborted\") {\r\n        return {\r\n          shortCircuited: true\r\n        };\r\n      } else if (discoverResult.type === \"error\") {\r\n        let boundaryId = findNearestBoundary(discoverResult.partialMatches).route.id;\r\n        return {\r\n          matches: discoverResult.partialMatches,\r\n          pendingActionResult: [boundaryId, {\r\n            type: ResultType.error,\r\n            error: discoverResult.error\r\n          }]\r\n        };\r\n      } else if (!discoverResult.matches) {\r\n        let {\r\n          notFoundMatches,\r\n          error,\r\n          route\r\n        } = handleNavigational404(location.pathname);\r\n        return {\r\n          matches: notFoundMatches,\r\n          pendingActionResult: [route.id, {\r\n            type: ResultType.error,\r\n            error\r\n          }]\r\n        };\r\n      } else {\r\n        matches = discoverResult.matches;\r\n      }\r\n    }\r\n    // Call our action and get the result\r\n    let result;\r\n    let actionMatch = getTargetMatch(matches, location);\r\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\r\n      result = {\r\n        type: ResultType.error,\r\n        error: getInternalRouterError(405, {\r\n          method: request.method,\r\n          pathname: location.pathname,\r\n          routeId: actionMatch.route.id\r\n        })\r\n      };\r\n    } else {\r\n      let results = await callDataStrategy(\"action\", state, request, [actionMatch], matches, null);\r\n      result = results[actionMatch.route.id];\r\n      if (request.signal.aborted) {\r\n        return {\r\n          shortCircuited: true\r\n        };\r\n      }\r\n    }\r\n    if (isRedirectResult(result)) {\r\n      let replace;\r\n      if (opts && opts.replace != null) {\r\n        replace = opts.replace;\r\n      } else {\r\n        // If the user didn't explicity indicate replace behavior, replace if\r\n        // we redirected to the exact same location we're currently at to avoid\r\n        // double back-buttons\r\n        let location = normalizeRedirectLocation(result.response.headers.get(\"Location\"), new URL(request.url), basename);\r\n        replace = location === state.location.pathname + state.location.search;\r\n      }\r\n      await startRedirectNavigation(request, result, true, {\r\n        submission,\r\n        replace\r\n      });\r\n      return {\r\n        shortCircuited: true\r\n      };\r\n    }\r\n    if (isDeferredResult(result)) {\r\n      throw getInternalRouterError(400, {\r\n        type: \"defer-action\"\r\n      });\r\n    }\r\n    if (isErrorResult(result)) {\r\n      // Store off the pending error - we use it to determine which loaders\r\n      // to call and will commit it when we complete the navigation\r\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\r\n      // By default, all submissions to the current location are REPLACE\r\n      // navigations, but if the action threw an error that'll be rendered in\r\n      // an errorElement, we fall back to PUSH so that the user can use the\r\n      // back button to get back to the pre-submission form location to try\r\n      // again\r\n      if ((opts && opts.replace) !== true) {\r\n        pendingAction = Action.Push;\r\n      }\r\n      return {\r\n        matches,\r\n        pendingActionResult: [boundaryMatch.route.id, result]\r\n      };\r\n    }\r\n    return {\r\n      matches,\r\n      pendingActionResult: [actionMatch.route.id, result]\r\n    };\r\n  }\r\n  // Call all applicable loaders for the given matches, handling redirects,\r\n  // errors, etc.\r\n  async function handleLoaders(request, location, matches, isFogOfWar, overrideNavigation, submission, fetcherSubmission, replace, initialHydration, flushSync, pendingActionResult) {\r\n    // Figure out the right navigation we want to use for data loading\r\n    let loadingNavigation = overrideNavigation || getLoadingNavigation(location, submission);\r\n    // If this was a redirect from an action we don't have a \"submission\" but\r\n    // we have it on the loading navigation so use that if available\r\n    let activeSubmission = submission || fetcherSubmission || getSubmissionFromNavigation(loadingNavigation);\r\n    // If this is an uninterrupted revalidation, we remain in our current idle\r\n    // state.  If not, we need to switch to our loading state and load data,\r\n    // preserving any new action data or existing action data (in the case of\r\n    // a revalidation interrupting an actionReload)\r\n    // If we have partialHydration enabled, then don't update the state for the\r\n    // initial data load since it's not a \"navigation\"\r\n    let shouldUpdateNavigationState = !isUninterruptedRevalidation && (!future.v7_partialHydration || !initialHydration);\r\n    // When fog of war is enabled, we enter our `loading` state earlier so we\r\n    // can discover new routes during the `loading` state.  We skip this if\r\n    // we've already run actions since we would have done our matching already.\r\n    // If the children() function threw then, we want to proceed with the\r\n    // partial matches it discovered.\r\n    if (isFogOfWar) {\r\n      if (shouldUpdateNavigationState) {\r\n        let actionData = getUpdatedActionData(pendingActionResult);\r\n        updateState(_extends({\r\n          navigation: loadingNavigation\r\n        }, actionData !== undefined ? {\r\n          actionData\r\n        } : {}), {\r\n          flushSync\r\n        });\r\n      }\r\n      let discoverResult = await discoverRoutes(matches, location.pathname, request.signal);\r\n      if (discoverResult.type === \"aborted\") {\r\n        return {\r\n          shortCircuited: true\r\n        };\r\n      } else if (discoverResult.type === \"error\") {\r\n        let boundaryId = findNearestBoundary(discoverResult.partialMatches).route.id;\r\n        return {\r\n          matches: discoverResult.partialMatches,\r\n          loaderData: {},\r\n          errors: {\r\n            [boundaryId]: discoverResult.error\r\n          }\r\n        };\r\n      } else if (!discoverResult.matches) {\r\n        let {\r\n          error,\r\n          notFoundMatches,\r\n          route\r\n        } = handleNavigational404(location.pathname);\r\n        return {\r\n          matches: notFoundMatches,\r\n          loaderData: {},\r\n          errors: {\r\n            [route.id]: error\r\n          }\r\n        };\r\n      } else {\r\n        matches = discoverResult.matches;\r\n      }\r\n    }\r\n    let routesToUse = inFlightDataRoutes || dataRoutes;\r\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(init.history, state, matches, activeSubmission, location, future.v7_partialHydration && initialHydration === true, future.v7_skipActionErrorRevalidation, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, deletedFetchers, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, pendingActionResult);\r\n    // Cancel pending deferreds for no-longer-matched routes or routes we're\r\n    // about to reload.  Note that if this is an action reload we would have\r\n    // already cancelled all pending deferreds so this would be a no-op\r\n    cancelActiveDeferreds(routeId => !(matches && matches.some(m => m.route.id === routeId)) || matchesToLoad && matchesToLoad.some(m => m.route.id === routeId));\r\n    pendingNavigationLoadId = ++incrementingLoadId;\r\n    // Short circuit if we have no loaders to run\r\n    if (matchesToLoad.length === 0 && revalidatingFetchers.length === 0) {\r\n      let updatedFetchers = markFetchRedirectsDone();\r\n      completeNavigation(location, _extends({\r\n        matches,\r\n        loaderData: {},\r\n        // Commit pending error if we're short circuiting\r\n        errors: pendingActionResult && isErrorResult(pendingActionResult[1]) ? {\r\n          [pendingActionResult[0]]: pendingActionResult[1].error\r\n        } : null\r\n      }, getActionDataForCommit(pendingActionResult), updatedFetchers ? {\r\n        fetchers: new Map(state.fetchers)\r\n      } : {}), {\r\n        flushSync\r\n      });\r\n      return {\r\n        shortCircuited: true\r\n      };\r\n    }\r\n    if (shouldUpdateNavigationState) {\r\n      let updates = {};\r\n      if (!isFogOfWar) {\r\n        // Only update navigation/actionNData if we didn't already do it above\r\n        updates.navigation = loadingNavigation;\r\n        let actionData = getUpdatedActionData(pendingActionResult);\r\n        if (actionData !== undefined) {\r\n          updates.actionData = actionData;\r\n        }\r\n      }\r\n      if (revalidatingFetchers.length > 0) {\r\n        updates.fetchers = getUpdatedRevalidatingFetchers(revalidatingFetchers);\r\n      }\r\n      updateState(updates, {\r\n        flushSync\r\n      });\r\n    }\r\n    revalidatingFetchers.forEach(rf => {\r\n      abortFetcher(rf.key);\r\n      if (rf.controller) {\r\n        // Fetchers use an independent AbortController so that aborting a fetcher\r\n        // (via deleteFetcher) does not abort the triggering navigation that\r\n        // triggered the revalidation\r\n        fetchControllers.set(rf.key, rf.controller);\r\n      }\r\n    });\r\n    // Proxy navigation abort through to revalidation fetchers\r\n    let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach(f => abortFetcher(f.key));\r\n    if (pendingNavigationController) {\r\n      pendingNavigationController.signal.addEventListener(\"abort\", abortPendingFetchRevalidations);\r\n    }\r\n    let {\r\n      loaderResults,\r\n      fetcherResults\r\n    } = await callLoadersAndMaybeResolveData(state, matches, matchesToLoad, revalidatingFetchers, request);\r\n    if (request.signal.aborted) {\r\n      return {\r\n        shortCircuited: true\r\n      };\r\n    }\r\n    // Clean up _after_ loaders have completed.  Don't clean up if we short\r\n    // circuited because fetchControllers would have been aborted and\r\n    // reassigned to new controllers for the next navigation\r\n    if (pendingNavigationController) {\r\n      pendingNavigationController.signal.removeEventListener(\"abort\", abortPendingFetchRevalidations);\r\n    }\r\n    revalidatingFetchers.forEach(rf => fetchControllers.delete(rf.key));\r\n    // If any loaders returned a redirect Response, start a new REPLACE navigation\r\n    let redirect = findRedirect(loaderResults);\r\n    if (redirect) {\r\n      await startRedirectNavigation(request, redirect.result, true, {\r\n        replace\r\n      });\r\n      return {\r\n        shortCircuited: true\r\n      };\r\n    }\r\n    redirect = findRedirect(fetcherResults);\r\n    if (redirect) {\r\n      // If this redirect came from a fetcher make sure we mark it in\r\n      // fetchRedirectIds so it doesn't get revalidated on the next set of\r\n      // loader executions\r\n      fetchRedirectIds.add(redirect.key);\r\n      await startRedirectNavigation(request, redirect.result, true, {\r\n        replace\r\n      });\r\n      return {\r\n        shortCircuited: true\r\n      };\r\n    }\r\n    // Process and commit output from loaders\r\n    let {\r\n      loaderData,\r\n      errors\r\n    } = processLoaderData(state, matches, loaderResults, pendingActionResult, revalidatingFetchers, fetcherResults, activeDeferreds);\r\n    // Wire up subscribers to update loaderData as promises settle\r\n    activeDeferreds.forEach((deferredData, routeId) => {\r\n      deferredData.subscribe(aborted => {\r\n        // Note: No need to updateState here since the TrackedPromise on\r\n        // loaderData is stable across resolve/reject\r\n        // Remove this instance if we were aborted or if promises have settled\r\n        if (aborted || deferredData.done) {\r\n          activeDeferreds.delete(routeId);\r\n        }\r\n      });\r\n    });\r\n    // Preserve SSR errors during partial hydration\r\n    if (future.v7_partialHydration && initialHydration && state.errors) {\r\n      errors = _extends({}, state.errors, errors);\r\n    }\r\n    let updatedFetchers = markFetchRedirectsDone();\r\n    let didAbortFetchLoads = abortStaleFetchLoads(pendingNavigationLoadId);\r\n    let shouldUpdateFetchers = updatedFetchers || didAbortFetchLoads || revalidatingFetchers.length > 0;\r\n    return _extends({\r\n      matches,\r\n      loaderData,\r\n      errors\r\n    }, shouldUpdateFetchers ? {\r\n      fetchers: new Map(state.fetchers)\r\n    } : {});\r\n  }\r\n  function getUpdatedActionData(pendingActionResult) {\r\n    if (pendingActionResult && !isErrorResult(pendingActionResult[1])) {\r\n      // This is cast to `any` currently because `RouteData`uses any and it\r\n      // would be a breaking change to use any.\r\n      // TODO: v7 - change `RouteData` to use `unknown` instead of `any`\r\n      return {\r\n        [pendingActionResult[0]]: pendingActionResult[1].data\r\n      };\r\n    } else if (state.actionData) {\r\n      if (Object.keys(state.actionData).length === 0) {\r\n        return null;\r\n      } else {\r\n        return state.actionData;\r\n      }\r\n    }\r\n  }\r\n  function getUpdatedRevalidatingFetchers(revalidatingFetchers) {\r\n    revalidatingFetchers.forEach(rf => {\r\n      let fetcher = state.fetchers.get(rf.key);\r\n      let revalidatingFetcher = getLoadingFetcher(undefined, fetcher ? fetcher.data : undefined);\r\n      state.fetchers.set(rf.key, revalidatingFetcher);\r\n    });\r\n    return new Map(state.fetchers);\r\n  }\r\n  // Trigger a fetcher load/submit for the given fetcher key\r\n  function fetch(key, routeId, href, opts) {\r\n    if (isServer) {\r\n      throw new Error(\"router.fetch() was called during the server render, but it shouldn't be. \" + \"You are likely calling a useFetcher() method in the body of your component. \" + \"Try moving it to a useEffect or a callback.\");\r\n    }\r\n    abortFetcher(key);\r\n    let flushSync = (opts && opts.flushSync) === true;\r\n    let routesToUse = inFlightDataRoutes || dataRoutes;\r\n    let normalizedPath = normalizeTo(state.location, state.matches, basename, future.v7_prependBasename, href, future.v7_relativeSplatPath, routeId, opts == null ? void 0 : opts.relative);\r\n    let matches = matchRoutes(routesToUse, normalizedPath, basename);\r\n    let fogOfWar = checkFogOfWar(matches, routesToUse, normalizedPath);\r\n    if (fogOfWar.active && fogOfWar.matches) {\r\n      matches = fogOfWar.matches;\r\n    }\r\n    if (!matches) {\r\n      setFetcherError(key, routeId, getInternalRouterError(404, {\r\n        pathname: normalizedPath\r\n      }), {\r\n        flushSync\r\n      });\r\n      return;\r\n    }\r\n    let {\r\n      path,\r\n      submission,\r\n      error\r\n    } = normalizeNavigateOptions(future.v7_normalizeFormMethod, true, normalizedPath, opts);\r\n    if (error) {\r\n      setFetcherError(key, routeId, error, {\r\n        flushSync\r\n      });\r\n      return;\r\n    }\r\n    let match = getTargetMatch(matches, path);\r\n    let preventScrollReset = (opts && opts.preventScrollReset) === true;\r\n    if (submission && isMutationMethod(submission.formMethod)) {\r\n      handleFetcherAction(key, routeId, path, match, matches, fogOfWar.active, flushSync, preventScrollReset, submission);\r\n      return;\r\n    }\r\n    // Store off the match so we can call it's shouldRevalidate on subsequent\r\n    // revalidations\r\n    fetchLoadMatches.set(key, {\r\n      routeId,\r\n      path\r\n    });\r\n    handleFetcherLoader(key, routeId, path, match, matches, fogOfWar.active, flushSync, preventScrollReset, submission);\r\n  }\r\n  // Call the action for the matched fetcher.submit(), and then handle redirects,\r\n  // errors, and revalidation\r\n  async function handleFetcherAction(key, routeId, path, match, requestMatches, isFogOfWar, flushSync, preventScrollReset, submission) {\r\n    interruptActiveLoads();\r\n    fetchLoadMatches.delete(key);\r\n    function detectAndHandle405Error(m) {\r\n      if (!m.route.action && !m.route.lazy) {\r\n        let error = getInternalRouterError(405, {\r\n          method: submission.formMethod,\r\n          pathname: path,\r\n          routeId: routeId\r\n        });\r\n        setFetcherError(key, routeId, error, {\r\n          flushSync\r\n        });\r\n        return true;\r\n      }\r\n      return false;\r\n    }\r\n    if (!isFogOfWar && detectAndHandle405Error(match)) {\r\n      return;\r\n    }\r\n    // Put this fetcher into it's submitting state\r\n    let existingFetcher = state.fetchers.get(key);\r\n    updateFetcherState(key, getSubmittingFetcher(submission, existingFetcher), {\r\n      flushSync\r\n    });\r\n    let abortController = new AbortController();\r\n    let fetchRequest = createClientSideRequest(init.history, path, abortController.signal, submission);\r\n    if (isFogOfWar) {\r\n      let discoverResult = await discoverRoutes(requestMatches, new URL(fetchRequest.url).pathname, fetchRequest.signal, key);\r\n      if (discoverResult.type === \"aborted\") {\r\n        return;\r\n      } else if (discoverResult.type === \"error\") {\r\n        setFetcherError(key, routeId, discoverResult.error, {\r\n          flushSync\r\n        });\r\n        return;\r\n      } else if (!discoverResult.matches) {\r\n        setFetcherError(key, routeId, getInternalRouterError(404, {\r\n          pathname: path\r\n        }), {\r\n          flushSync\r\n        });\r\n        return;\r\n      } else {\r\n        requestMatches = discoverResult.matches;\r\n        match = getTargetMatch(requestMatches, path);\r\n        if (detectAndHandle405Error(match)) {\r\n          return;\r\n        }\r\n      }\r\n    }\r\n    // Call the action for the fetcher\r\n    fetchControllers.set(key, abortController);\r\n    let originatingLoadId = incrementingLoadId;\r\n    let actionResults = await callDataStrategy(\"action\", state, fetchRequest, [match], requestMatches, key);\r\n    let actionResult = actionResults[match.route.id];\r\n    if (fetchRequest.signal.aborted) {\r\n      // We can delete this so long as we weren't aborted by our own fetcher\r\n      // re-submit which would have put _new_ controller is in fetchControllers\r\n      if (fetchControllers.get(key) === abortController) {\r\n        fetchControllers.delete(key);\r\n      }\r\n      return;\r\n    }\r\n    // When using v7_fetcherPersist, we don't want errors bubbling up to the UI\r\n    // or redirects processed for unmounted fetchers so we just revert them to\r\n    // idle\r\n    if (future.v7_fetcherPersist && deletedFetchers.has(key)) {\r\n      if (isRedirectResult(actionResult) || isErrorResult(actionResult)) {\r\n        updateFetcherState(key, getDoneFetcher(undefined));\r\n        return;\r\n      }\r\n      // Let SuccessResult's fall through for revalidation\r\n    } else {\r\n      if (isRedirectResult(actionResult)) {\r\n        fetchControllers.delete(key);\r\n        if (pendingNavigationLoadId > originatingLoadId) {\r\n          // A new navigation was kicked off after our action started, so that\r\n          // should take precedence over this redirect navigation.  We already\r\n          // set isRevalidationRequired so all loaders for the new route should\r\n          // fire unless opted out via shouldRevalidate\r\n          updateFetcherState(key, getDoneFetcher(undefined));\r\n          return;\r\n        } else {\r\n          fetchRedirectIds.add(key);\r\n          updateFetcherState(key, getLoadingFetcher(submission));\r\n          return startRedirectNavigation(fetchRequest, actionResult, false, {\r\n            fetcherSubmission: submission,\r\n            preventScrollReset\r\n          });\r\n        }\r\n      }\r\n      // Process any non-redirect errors thrown\r\n      if (isErrorResult(actionResult)) {\r\n        setFetcherError(key, routeId, actionResult.error);\r\n        return;\r\n      }\r\n    }\r\n    if (isDeferredResult(actionResult)) {\r\n      throw getInternalRouterError(400, {\r\n        type: \"defer-action\"\r\n      });\r\n    }\r\n    // Start the data load for current matches, or the next location if we're\r\n    // in the middle of a navigation\r\n    let nextLocation = state.navigation.location || state.location;\r\n    let revalidationRequest = createClientSideRequest(init.history, nextLocation, abortController.signal);\r\n    let routesToUse = inFlightDataRoutes || dataRoutes;\r\n    let matches = state.navigation.state !== \"idle\" ? matchRoutes(routesToUse, state.navigation.location, basename) : state.matches;\r\n    invariant(matches, \"Didn't find any matches after fetcher action\");\r\n    let loadId = ++incrementingLoadId;\r\n    fetchReloadIds.set(key, loadId);\r\n    let loadFetcher = getLoadingFetcher(submission, actionResult.data);\r\n    state.fetchers.set(key, loadFetcher);\r\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(init.history, state, matches, submission, nextLocation, false, future.v7_skipActionErrorRevalidation, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, deletedFetchers, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, [match.route.id, actionResult]);\r\n    // Put all revalidating fetchers into the loading state, except for the\r\n    // current fetcher which we want to keep in it's current loading state which\r\n    // contains it's action submission info + action data\r\n    revalidatingFetchers.filter(rf => rf.key !== key).forEach(rf => {\r\n      let staleKey = rf.key;\r\n      let existingFetcher = state.fetchers.get(staleKey);\r\n      let revalidatingFetcher = getLoadingFetcher(undefined, existingFetcher ? existingFetcher.data : undefined);\r\n      state.fetchers.set(staleKey, revalidatingFetcher);\r\n      abortFetcher(staleKey);\r\n      if (rf.controller) {\r\n        fetchControllers.set(staleKey, rf.controller);\r\n      }\r\n    });\r\n    updateState({\r\n      fetchers: new Map(state.fetchers)\r\n    });\r\n    let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach(rf => abortFetcher(rf.key));\r\n    abortController.signal.addEventListener(\"abort\", abortPendingFetchRevalidations);\r\n    let {\r\n      loaderResults,\r\n      fetcherResults\r\n    } = await callLoadersAndMaybeResolveData(state, matches, matchesToLoad, revalidatingFetchers, revalidationRequest);\r\n    if (abortController.signal.aborted) {\r\n      return;\r\n    }\r\n    abortController.signal.removeEventListener(\"abort\", abortPendingFetchRevalidations);\r\n    fetchReloadIds.delete(key);\r\n    fetchControllers.delete(key);\r\n    revalidatingFetchers.forEach(r => fetchControllers.delete(r.key));\r\n    let redirect = findRedirect(loaderResults);\r\n    if (redirect) {\r\n      return startRedirectNavigation(revalidationRequest, redirect.result, false, {\r\n        preventScrollReset\r\n      });\r\n    }\r\n    redirect = findRedirect(fetcherResults);\r\n    if (redirect) {\r\n      // If this redirect came from a fetcher make sure we mark it in\r\n      // fetchRedirectIds so it doesn't get revalidated on the next set of\r\n      // loader executions\r\n      fetchRedirectIds.add(redirect.key);\r\n      return startRedirectNavigation(revalidationRequest, redirect.result, false, {\r\n        preventScrollReset\r\n      });\r\n    }\r\n    // Process and commit output from loaders\r\n    let {\r\n      loaderData,\r\n      errors\r\n    } = processLoaderData(state, matches, loaderResults, undefined, revalidatingFetchers, fetcherResults, activeDeferreds);\r\n    // Since we let revalidations complete even if the submitting fetcher was\r\n    // deleted, only put it back to idle if it hasn't been deleted\r\n    if (state.fetchers.has(key)) {\r\n      let doneFetcher = getDoneFetcher(actionResult.data);\r\n      state.fetchers.set(key, doneFetcher);\r\n    }\r\n    abortStaleFetchLoads(loadId);\r\n    // If we are currently in a navigation loading state and this fetcher is\r\n    // more recent than the navigation, we want the newer data so abort the\r\n    // navigation and complete it with the fetcher data\r\n    if (state.navigation.state === \"loading\" && loadId > pendingNavigationLoadId) {\r\n      invariant(pendingAction, \"Expected pending action\");\r\n      pendingNavigationController && pendingNavigationController.abort();\r\n      completeNavigation(state.navigation.location, {\r\n        matches,\r\n        loaderData,\r\n        errors,\r\n        fetchers: new Map(state.fetchers)\r\n      });\r\n    } else {\r\n      // otherwise just update with the fetcher data, preserving any existing\r\n      // loaderData for loaders that did not need to reload.  We have to\r\n      // manually merge here since we aren't going through completeNavigation\r\n      updateState({\r\n        errors,\r\n        loaderData: mergeLoaderData(state.loaderData, loaderData, matches, errors),\r\n        fetchers: new Map(state.fetchers)\r\n      });\r\n      isRevalidationRequired = false;\r\n    }\r\n  }\r\n  // Call the matched loader for fetcher.load(), handling redirects, errors, etc.\r\n  async function handleFetcherLoader(key, routeId, path, match, matches, isFogOfWar, flushSync, preventScrollReset, submission) {\r\n    let existingFetcher = state.fetchers.get(key);\r\n    updateFetcherState(key, getLoadingFetcher(submission, existingFetcher ? existingFetcher.data : undefined), {\r\n      flushSync\r\n    });\r\n    let abortController = new AbortController();\r\n    let fetchRequest = createClientSideRequest(init.history, path, abortController.signal);\r\n    if (isFogOfWar) {\r\n      let discoverResult = await discoverRoutes(matches, new URL(fetchRequest.url).pathname, fetchRequest.signal, key);\r\n      if (discoverResult.type === \"aborted\") {\r\n        return;\r\n      } else if (discoverResult.type === \"error\") {\r\n        setFetcherError(key, routeId, discoverResult.error, {\r\n          flushSync\r\n        });\r\n        return;\r\n      } else if (!discoverResult.matches) {\r\n        setFetcherError(key, routeId, getInternalRouterError(404, {\r\n          pathname: path\r\n        }), {\r\n          flushSync\r\n        });\r\n        return;\r\n      } else {\r\n        matches = discoverResult.matches;\r\n        match = getTargetMatch(matches, path);\r\n      }\r\n    }\r\n    // Call the loader for this fetcher route match\r\n    fetchControllers.set(key, abortController);\r\n    let originatingLoadId = incrementingLoadId;\r\n    let results = await callDataStrategy(\"loader\", state, fetchRequest, [match], matches, key);\r\n    let result = results[match.route.id];\r\n    // Deferred isn't supported for fetcher loads, await everything and treat it\r\n    // as a normal load.  resolveDeferredData will return undefined if this\r\n    // fetcher gets aborted, so we just leave result untouched and short circuit\r\n    // below if that happens\r\n    if (isDeferredResult(result)) {\r\n      result = (await resolveDeferredData(result, fetchRequest.signal, true)) || result;\r\n    }\r\n    // We can delete this so long as we weren't aborted by our our own fetcher\r\n    // re-load which would have put _new_ controller is in fetchControllers\r\n    if (fetchControllers.get(key) === abortController) {\r\n      fetchControllers.delete(key);\r\n    }\r\n    if (fetchRequest.signal.aborted) {\r\n      return;\r\n    }\r\n    // We don't want errors bubbling up or redirects followed for unmounted\r\n    // fetchers, so short circuit here if it was removed from the UI\r\n    if (deletedFetchers.has(key)) {\r\n      updateFetcherState(key, getDoneFetcher(undefined));\r\n      return;\r\n    }\r\n    // If the loader threw a redirect Response, start a new REPLACE navigation\r\n    if (isRedirectResult(result)) {\r\n      if (pendingNavigationLoadId > originatingLoadId) {\r\n        // A new navigation was kicked off after our loader started, so that\r\n        // should take precedence over this redirect navigation\r\n        updateFetcherState(key, getDoneFetcher(undefined));\r\n        return;\r\n      } else {\r\n        fetchRedirectIds.add(key);\r\n        await startRedirectNavigation(fetchRequest, result, false, {\r\n          preventScrollReset\r\n        });\r\n        return;\r\n      }\r\n    }\r\n    // Process any non-redirect errors thrown\r\n    if (isErrorResult(result)) {\r\n      setFetcherError(key, routeId, result.error);\r\n      return;\r\n    }\r\n    invariant(!isDeferredResult(result), \"Unhandled fetcher deferred data\");\r\n    // Put the fetcher back into an idle state\r\n    updateFetcherState(key, getDoneFetcher(result.data));\r\n  }\r\n  /**\r\n   * Utility function to handle redirects returned from an action or loader.\r\n   * Normally, a redirect \"replaces\" the navigation that triggered it.  So, for\r\n   * example:\r\n   *\r\n   *  - user is on /a\r\n   *  - user clicks a link to /b\r\n   *  - loader for /b redirects to /c\r\n   *\r\n   * In a non-JS app the browser would track the in-flight navigation to /b and\r\n   * then replace it with /c when it encountered the redirect response.  In\r\n   * the end it would only ever update the URL bar with /c.\r\n   *\r\n   * In client-side routing using pushState/replaceState, we aim to emulate\r\n   * this behavior and we also do not update history until the end of the\r\n   * navigation (including processed redirects).  This means that we never\r\n   * actually touch history until we've processed redirects, so we just use\r\n   * the history action from the original navigation (PUSH or REPLACE).\r\n   */\r\n  async function startRedirectNavigation(request, redirect, isNavigation, _temp2) {\r\n    let {\r\n      submission,\r\n      fetcherSubmission,\r\n      preventScrollReset,\r\n      replace\r\n    } = _temp2 === void 0 ? {} : _temp2;\r\n    if (redirect.response.headers.has(\"X-Remix-Revalidate\")) {\r\n      isRevalidationRequired = true;\r\n    }\r\n    let location = redirect.response.headers.get(\"Location\");\r\n    invariant(location, \"Expected a Location header on the redirect Response\");\r\n    location = normalizeRedirectLocation(location, new URL(request.url), basename);\r\n    let redirectLocation = createLocation(state.location, location, {\r\n      _isRedirect: true\r\n    });\r\n    if (isBrowser) {\r\n      let isDocumentReload = false;\r\n      if (redirect.response.headers.has(\"X-Remix-Reload-Document\")) {\r\n        // Hard reload if the response contained X-Remix-Reload-Document\r\n        isDocumentReload = true;\r\n      } else if (ABSOLUTE_URL_REGEX.test(location)) {\r\n        const url = init.history.createURL(location);\r\n        isDocumentReload =\r\n        // Hard reload if it's an absolute URL to a new origin\r\n        url.origin !== routerWindow.location.origin ||\r\n        // Hard reload if it's an absolute URL that does not match our basename\r\n        stripBasename(url.pathname, basename) == null;\r\n      }\r\n      if (isDocumentReload) {\r\n        if (replace) {\r\n          routerWindow.location.replace(location);\r\n        } else {\r\n          routerWindow.location.assign(location);\r\n        }\r\n        return;\r\n      }\r\n    }\r\n    // There's no need to abort on redirects, since we don't detect the\r\n    // redirect until the action/loaders have settled\r\n    pendingNavigationController = null;\r\n    let redirectHistoryAction = replace === true || redirect.response.headers.has(\"X-Remix-Replace\") ? Action.Replace : Action.Push;\r\n    // Use the incoming submission if provided, fallback on the active one in\r\n    // state.navigation\r\n    let {\r\n      formMethod,\r\n      formAction,\r\n      formEncType\r\n    } = state.navigation;\r\n    if (!submission && !fetcherSubmission && formMethod && formAction && formEncType) {\r\n      submission = getSubmissionFromNavigation(state.navigation);\r\n    }\r\n    // If this was a 307/308 submission we want to preserve the HTTP method and\r\n    // re-submit the GET/POST/PUT/PATCH/DELETE as a submission navigation to the\r\n    // redirected location\r\n    let activeSubmission = submission || fetcherSubmission;\r\n    if (redirectPreserveMethodStatusCodes.has(redirect.response.status) && activeSubmission && isMutationMethod(activeSubmission.formMethod)) {\r\n      await startNavigation(redirectHistoryAction, redirectLocation, {\r\n        submission: _extends({}, activeSubmission, {\r\n          formAction: location\r\n        }),\r\n        // Preserve these flags across redirects\r\n        preventScrollReset: preventScrollReset || pendingPreventScrollReset,\r\n        enableViewTransition: isNavigation ? pendingViewTransitionEnabled : undefined\r\n      });\r\n    } else {\r\n      // If we have a navigation submission, we will preserve it through the\r\n      // redirect navigation\r\n      let overrideNavigation = getLoadingNavigation(redirectLocation, submission);\r\n      await startNavigation(redirectHistoryAction, redirectLocation, {\r\n        overrideNavigation,\r\n        // Send fetcher submissions through for shouldRevalidate\r\n        fetcherSubmission,\r\n        // Preserve these flags across redirects\r\n        preventScrollReset: preventScrollReset || pendingPreventScrollReset,\r\n        enableViewTransition: isNavigation ? pendingViewTransitionEnabled : undefined\r\n      });\r\n    }\r\n  }\r\n  // Utility wrapper for calling dataStrategy client-side without having to\r\n  // pass around the manifest, mapRouteProperties, etc.\r\n  async function callDataStrategy(type, state, request, matchesToLoad, matches, fetcherKey) {\r\n    let results;\r\n    let dataResults = {};\r\n    try {\r\n      results = await callDataStrategyImpl(dataStrategyImpl, type, state, request, matchesToLoad, matches, fetcherKey, manifest, mapRouteProperties);\r\n    } catch (e) {\r\n      // If the outer dataStrategy method throws, just return the error for all\r\n      // matches - and it'll naturally bubble to the root\r\n      matchesToLoad.forEach(m => {\r\n        dataResults[m.route.id] = {\r\n          type: ResultType.error,\r\n          error: e\r\n        };\r\n      });\r\n      return dataResults;\r\n    }\r\n    for (let [routeId, result] of Object.entries(results)) {\r\n      if (isRedirectDataStrategyResultResult(result)) {\r\n        let response = result.result;\r\n        dataResults[routeId] = {\r\n          type: ResultType.redirect,\r\n          response: normalizeRelativeRoutingRedirectResponse(response, request, routeId, matches, basename, future.v7_relativeSplatPath)\r\n        };\r\n      } else {\r\n        dataResults[routeId] = await convertDataStrategyResultToDataResult(result);\r\n      }\r\n    }\r\n    return dataResults;\r\n  }\r\n  async function callLoadersAndMaybeResolveData(state, matches, matchesToLoad, fetchersToLoad, request) {\r\n    let currentMatches = state.matches;\r\n    // Kick off loaders and fetchers in parallel\r\n    let loaderResultsPromise = callDataStrategy(\"loader\", state, request, matchesToLoad, matches, null);\r\n    let fetcherResultsPromise = Promise.all(fetchersToLoad.map(async f => {\r\n      if (f.matches && f.match && f.controller) {\r\n        let results = await callDataStrategy(\"loader\", state, createClientSideRequest(init.history, f.path, f.controller.signal), [f.match], f.matches, f.key);\r\n        let result = results[f.match.route.id];\r\n        // Fetcher results are keyed by fetcher key from here on out, not routeId\r\n        return {\r\n          [f.key]: result\r\n        };\r\n      } else {\r\n        return Promise.resolve({\r\n          [f.key]: {\r\n            type: ResultType.error,\r\n            error: getInternalRouterError(404, {\r\n              pathname: f.path\r\n            })\r\n          }\r\n        });\r\n      }\r\n    }));\r\n    let loaderResults = await loaderResultsPromise;\r\n    let fetcherResults = (await fetcherResultsPromise).reduce((acc, r) => Object.assign(acc, r), {});\r\n    await Promise.all([resolveNavigationDeferredResults(matches, loaderResults, request.signal, currentMatches, state.loaderData), resolveFetcherDeferredResults(matches, fetcherResults, fetchersToLoad)]);\r\n    return {\r\n      loaderResults,\r\n      fetcherResults\r\n    };\r\n  }\r\n  function interruptActiveLoads() {\r\n    // Every interruption triggers a revalidation\r\n    isRevalidationRequired = true;\r\n    // Cancel pending route-level deferreds and mark cancelled routes for\r\n    // revalidation\r\n    cancelledDeferredRoutes.push(...cancelActiveDeferreds());\r\n    // Abort in-flight fetcher loads\r\n    fetchLoadMatches.forEach((_, key) => {\r\n      if (fetchControllers.has(key)) {\r\n        cancelledFetcherLoads.add(key);\r\n      }\r\n      abortFetcher(key);\r\n    });\r\n  }\r\n  function updateFetcherState(key, fetcher, opts) {\r\n    if (opts === void 0) {\r\n      opts = {};\r\n    }\r\n    state.fetchers.set(key, fetcher);\r\n    updateState({\r\n      fetchers: new Map(state.fetchers)\r\n    }, {\r\n      flushSync: (opts && opts.flushSync) === true\r\n    });\r\n  }\r\n  function setFetcherError(key, routeId, error, opts) {\r\n    if (opts === void 0) {\r\n      opts = {};\r\n    }\r\n    let boundaryMatch = findNearestBoundary(state.matches, routeId);\r\n    deleteFetcher(key);\r\n    updateState({\r\n      errors: {\r\n        [boundaryMatch.route.id]: error\r\n      },\r\n      fetchers: new Map(state.fetchers)\r\n    }, {\r\n      flushSync: (opts && opts.flushSync) === true\r\n    });\r\n  }\r\n  function getFetcher(key) {\r\n    activeFetchers.set(key, (activeFetchers.get(key) || 0) + 1);\r\n    // If this fetcher was previously marked for deletion, unmark it since we\r\n    // have a new instance\r\n    if (deletedFetchers.has(key)) {\r\n      deletedFetchers.delete(key);\r\n    }\r\n    return state.fetchers.get(key) || IDLE_FETCHER;\r\n  }\r\n  function deleteFetcher(key) {\r\n    let fetcher = state.fetchers.get(key);\r\n    // Don't abort the controller if this is a deletion of a fetcher.submit()\r\n    // in it's loading phase since - we don't want to abort the corresponding\r\n    // revalidation and want them to complete and land\r\n    if (fetchControllers.has(key) && !(fetcher && fetcher.state === \"loading\" && fetchReloadIds.has(key))) {\r\n      abortFetcher(key);\r\n    }\r\n    fetchLoadMatches.delete(key);\r\n    fetchReloadIds.delete(key);\r\n    fetchRedirectIds.delete(key);\r\n    // If we opted into the flag we can clear this now since we're calling\r\n    // deleteFetcher() at the end of updateState() and we've already handed the\r\n    // deleted fetcher keys off to the data layer.\r\n    // If not, we're eagerly calling deleteFetcher() and we need to keep this\r\n    // Set populated until the next updateState call, and we'll clear\r\n    // `deletedFetchers` then\r\n    if (future.v7_fetcherPersist) {\r\n      deletedFetchers.delete(key);\r\n    }\r\n    cancelledFetcherLoads.delete(key);\r\n    state.fetchers.delete(key);\r\n  }\r\n  function deleteFetcherAndUpdateState(key) {\r\n    let count = (activeFetchers.get(key) || 0) - 1;\r\n    if (count <= 0) {\r\n      activeFetchers.delete(key);\r\n      deletedFetchers.add(key);\r\n      if (!future.v7_fetcherPersist) {\r\n        deleteFetcher(key);\r\n      }\r\n    } else {\r\n      activeFetchers.set(key, count);\r\n    }\r\n    updateState({\r\n      fetchers: new Map(state.fetchers)\r\n    });\r\n  }\r\n  function abortFetcher(key) {\r\n    let controller = fetchControllers.get(key);\r\n    if (controller) {\r\n      controller.abort();\r\n      fetchControllers.delete(key);\r\n    }\r\n  }\r\n  function markFetchersDone(keys) {\r\n    for (let key of keys) {\r\n      let fetcher = getFetcher(key);\r\n      let doneFetcher = getDoneFetcher(fetcher.data);\r\n      state.fetchers.set(key, doneFetcher);\r\n    }\r\n  }\r\n  function markFetchRedirectsDone() {\r\n    let doneKeys = [];\r\n    let updatedFetchers = false;\r\n    for (let key of fetchRedirectIds) {\r\n      let fetcher = state.fetchers.get(key);\r\n      invariant(fetcher, \"Expected fetcher: \" + key);\r\n      if (fetcher.state === \"loading\") {\r\n        fetchRedirectIds.delete(key);\r\n        doneKeys.push(key);\r\n        updatedFetchers = true;\r\n      }\r\n    }\r\n    markFetchersDone(doneKeys);\r\n    return updatedFetchers;\r\n  }\r\n  function abortStaleFetchLoads(landedId) {\r\n    let yeetedKeys = [];\r\n    for (let [key, id] of fetchReloadIds) {\r\n      if (id < landedId) {\r\n        let fetcher = state.fetchers.get(key);\r\n        invariant(fetcher, \"Expected fetcher: \" + key);\r\n        if (fetcher.state === \"loading\") {\r\n          abortFetcher(key);\r\n          fetchReloadIds.delete(key);\r\n          yeetedKeys.push(key);\r\n        }\r\n      }\r\n    }\r\n    markFetchersDone(yeetedKeys);\r\n    return yeetedKeys.length > 0;\r\n  }\r\n  function getBlocker(key, fn) {\r\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\r\n    if (blockerFunctions.get(key) !== fn) {\r\n      blockerFunctions.set(key, fn);\r\n    }\r\n    return blocker;\r\n  }\r\n  function deleteBlocker(key) {\r\n    state.blockers.delete(key);\r\n    blockerFunctions.delete(key);\r\n  }\r\n  // Utility function to update blockers, ensuring valid state transitions\r\n  function updateBlocker(key, newBlocker) {\r\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\r\n    // Poor mans state machine :)\r\n    // https://mermaid.live/edit#pako:eNqVkc9OwzAMxl8l8nnjAYrEtDIOHEBIgwvKJTReGy3_lDpIqO27k6awMG0XcrLlnz87nwdonESogKXXBuE79rq75XZO3-yHds0RJVuv70YrPlUrCEe2HfrORS3rubqZfuhtpg5C9wk5tZ4VKcRUq88q9Z8RS0-48cE1iHJkL0ugbHuFLus9L6spZy8nX9MP2CNdomVaposqu3fGayT8T8-jJQwhepo_UtpgBQaDEUom04dZhAN1aJBDlUKJBxE1ceB2Smj0Mln-IBW5AFU2dwUiktt_2Qaq2dBfaKdEup85UV7Yd-dKjlnkabl2Pvr0DTkTreM\r\n    invariant(blocker.state === \"unblocked\" && newBlocker.state === \"blocked\" || blocker.state === \"blocked\" && newBlocker.state === \"blocked\" || blocker.state === \"blocked\" && newBlocker.state === \"proceeding\" || blocker.state === \"blocked\" && newBlocker.state === \"unblocked\" || blocker.state === \"proceeding\" && newBlocker.state === \"unblocked\", \"Invalid blocker state transition: \" + blocker.state + \" -> \" + newBlocker.state);\r\n    let blockers = new Map(state.blockers);\r\n    blockers.set(key, newBlocker);\r\n    updateState({\r\n      blockers\r\n    });\r\n  }\r\n  function shouldBlockNavigation(_ref2) {\r\n    let {\r\n      currentLocation,\r\n      nextLocation,\r\n      historyAction\r\n    } = _ref2;\r\n    if (blockerFunctions.size === 0) {\r\n      return;\r\n    }\r\n    // We ony support a single active blocker at the moment since we don't have\r\n    // any compelling use cases for multi-blocker yet\r\n    if (blockerFunctions.size > 1) {\r\n      warning(false, \"A router only supports one blocker at a time\");\r\n    }\r\n    let entries = Array.from(blockerFunctions.entries());\r\n    let [blockerKey, blockerFunction] = entries[entries.length - 1];\r\n    let blocker = state.blockers.get(blockerKey);\r\n    if (blocker && blocker.state === \"proceeding\") {\r\n      // If the blocker is currently proceeding, we don't need to re-check\r\n      // it and can let this navigation continue\r\n      return;\r\n    }\r\n    // At this point, we know we're unblocked/blocked so we need to check the\r\n    // user-provided blocker function\r\n    if (blockerFunction({\r\n      currentLocation,\r\n      nextLocation,\r\n      historyAction\r\n    })) {\r\n      return blockerKey;\r\n    }\r\n  }\r\n  function handleNavigational404(pathname) {\r\n    let error = getInternalRouterError(404, {\r\n      pathname\r\n    });\r\n    let routesToUse = inFlightDataRoutes || dataRoutes;\r\n    let {\r\n      matches,\r\n      route\r\n    } = getShortCircuitMatches(routesToUse);\r\n    // Cancel all pending deferred on 404s since we don't keep any routes\r\n    cancelActiveDeferreds();\r\n    return {\r\n      notFoundMatches: matches,\r\n      route,\r\n      error\r\n    };\r\n  }\r\n  function cancelActiveDeferreds(predicate) {\r\n    let cancelledRouteIds = [];\r\n    activeDeferreds.forEach((dfd, routeId) => {\r\n      if (!predicate || predicate(routeId)) {\r\n        // Cancel the deferred - but do not remove from activeDeferreds here -\r\n        // we rely on the subscribers to do that so our tests can assert proper\r\n        // cleanup via _internalActiveDeferreds\r\n        dfd.cancel();\r\n        cancelledRouteIds.push(routeId);\r\n        activeDeferreds.delete(routeId);\r\n      }\r\n    });\r\n    return cancelledRouteIds;\r\n  }\r\n  // Opt in to capturing and reporting scroll positions during navigations,\r\n  // used by the <ScrollRestoration> component\r\n  function enableScrollRestoration(positions, getPosition, getKey) {\r\n    savedScrollPositions = positions;\r\n    getScrollPosition = getPosition;\r\n    getScrollRestorationKey = getKey || null;\r\n    // Perform initial hydration scroll restoration, since we miss the boat on\r\n    // the initial updateState() because we've not yet rendered <ScrollRestoration/>\r\n    // and therefore have no savedScrollPositions available\r\n    if (!initialScrollRestored && state.navigation === IDLE_NAVIGATION) {\r\n      initialScrollRestored = true;\r\n      let y = getSavedScrollPosition(state.location, state.matches);\r\n      if (y != null) {\r\n        updateState({\r\n          restoreScrollPosition: y\r\n        });\r\n      }\r\n    }\r\n    return () => {\r\n      savedScrollPositions = null;\r\n      getScrollPosition = null;\r\n      getScrollRestorationKey = null;\r\n    };\r\n  }\r\n  function getScrollKey(location, matches) {\r\n    if (getScrollRestorationKey) {\r\n      let key = getScrollRestorationKey(location, matches.map(m => convertRouteMatchToUiMatch(m, state.loaderData)));\r\n      return key || location.key;\r\n    }\r\n    return location.key;\r\n  }\r\n  function saveScrollPosition(location, matches) {\r\n    if (savedScrollPositions && getScrollPosition) {\r\n      let key = getScrollKey(location, matches);\r\n      savedScrollPositions[key] = getScrollPosition();\r\n    }\r\n  }\r\n  function getSavedScrollPosition(location, matches) {\r\n    if (savedScrollPositions) {\r\n      let key = getScrollKey(location, matches);\r\n      let y = savedScrollPositions[key];\r\n      if (typeof y === \"number\") {\r\n        return y;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n  function checkFogOfWar(matches, routesToUse, pathname) {\r\n    if (patchRoutesOnNavigationImpl) {\r\n      if (!matches) {\r\n        let fogMatches = matchRoutesImpl(routesToUse, pathname, basename, true);\r\n        return {\r\n          active: true,\r\n          matches: fogMatches || []\r\n        };\r\n      } else {\r\n        if (Object.keys(matches[0].params).length > 0) {\r\n          // If we matched a dynamic param or a splat, it might only be because\r\n          // we haven't yet discovered other routes that would match with a\r\n          // higher score.  Call patchRoutesOnNavigation just to be sure\r\n          let partialMatches = matchRoutesImpl(routesToUse, pathname, basename, true);\r\n          return {\r\n            active: true,\r\n            matches: partialMatches\r\n          };\r\n        }\r\n      }\r\n    }\r\n    return {\r\n      active: false,\r\n      matches: null\r\n    };\r\n  }\r\n  async function discoverRoutes(matches, pathname, signal, fetcherKey) {\r\n    if (!patchRoutesOnNavigationImpl) {\r\n      return {\r\n        type: \"success\",\r\n        matches\r\n      };\r\n    }\r\n    let partialMatches = matches;\r\n    while (true) {\r\n      let isNonHMR = inFlightDataRoutes == null;\r\n      let routesToUse = inFlightDataRoutes || dataRoutes;\r\n      let localManifest = manifest;\r\n      try {\r\n        await patchRoutesOnNavigationImpl({\r\n          signal,\r\n          path: pathname,\r\n          matches: partialMatches,\r\n          fetcherKey,\r\n          patch: (routeId, children) => {\r\n            if (signal.aborted) return;\r\n            patchRoutesImpl(routeId, children, routesToUse, localManifest, mapRouteProperties);\r\n          }\r\n        });\r\n      } catch (e) {\r\n        return {\r\n          type: \"error\",\r\n          error: e,\r\n          partialMatches\r\n        };\r\n      } finally {\r\n        // If we are not in the middle of an HMR revalidation and we changed the\r\n        // routes, provide a new identity so when we `updateState` at the end of\r\n        // this navigation/fetch `router.routes` will be a new identity and\r\n        // trigger a re-run of memoized `router.routes` dependencies.\r\n        // HMR will already update the identity and reflow when it lands\r\n        // `inFlightDataRoutes` in `completeNavigation`\r\n        if (isNonHMR && !signal.aborted) {\r\n          dataRoutes = [...dataRoutes];\r\n        }\r\n      }\r\n      if (signal.aborted) {\r\n        return {\r\n          type: \"aborted\"\r\n        };\r\n      }\r\n      let newMatches = matchRoutes(routesToUse, pathname, basename);\r\n      if (newMatches) {\r\n        return {\r\n          type: \"success\",\r\n          matches: newMatches\r\n        };\r\n      }\r\n      let newPartialMatches = matchRoutesImpl(routesToUse, pathname, basename, true);\r\n      // Avoid loops if the second pass results in the same partial matches\r\n      if (!newPartialMatches || partialMatches.length === newPartialMatches.length && partialMatches.every((m, i) => m.route.id === newPartialMatches[i].route.id)) {\r\n        return {\r\n          type: \"success\",\r\n          matches: null\r\n        };\r\n      }\r\n      partialMatches = newPartialMatches;\r\n    }\r\n  }\r\n  function _internalSetRoutes(newRoutes) {\r\n    manifest = {};\r\n    inFlightDataRoutes = convertRoutesToDataRoutes(newRoutes, mapRouteProperties, undefined, manifest);\r\n  }\r\n  function patchRoutes(routeId, children) {\r\n    let isNonHMR = inFlightDataRoutes == null;\r\n    let routesToUse = inFlightDataRoutes || dataRoutes;\r\n    patchRoutesImpl(routeId, children, routesToUse, manifest, mapRouteProperties);\r\n    // If we are not in the middle of an HMR revalidation and we changed the\r\n    // routes, provide a new identity and trigger a reflow via `updateState`\r\n    // to re-run memoized `router.routes` dependencies.\r\n    // HMR will already update the identity and reflow when it lands\r\n    // `inFlightDataRoutes` in `completeNavigation`\r\n    if (isNonHMR) {\r\n      dataRoutes = [...dataRoutes];\r\n      updateState({});\r\n    }\r\n  }\r\n  router = {\r\n    get basename() {\r\n      return basename;\r\n    },\r\n    get future() {\r\n      return future;\r\n    },\r\n    get state() {\r\n      return state;\r\n    },\r\n    get routes() {\r\n      return dataRoutes;\r\n    },\r\n    get window() {\r\n      return routerWindow;\r\n    },\r\n    initialize,\r\n    subscribe,\r\n    enableScrollRestoration,\r\n    navigate,\r\n    fetch,\r\n    revalidate,\r\n    // Passthrough to history-aware createHref used by useHref so we get proper\r\n    // hash-aware URLs in DOM paths\r\n    createHref: to => init.history.createHref(to),\r\n    encodeLocation: to => init.history.encodeLocation(to),\r\n    getFetcher,\r\n    deleteFetcher: deleteFetcherAndUpdateState,\r\n    dispose,\r\n    getBlocker,\r\n    deleteBlocker,\r\n    patchRoutes,\r\n    _internalFetchControllers: fetchControllers,\r\n    _internalActiveDeferreds: activeDeferreds,\r\n    // TODO: Remove setRoutes, it's temporary to avoid dealing with\r\n    // updating the tree while validating the update algorithm.\r\n    _internalSetRoutes\r\n  };\r\n  return router;\r\n}\r\n//#endregion\r\n////////////////////////////////////////////////////////////////////////////////\r\n//#region createStaticHandler\r\n////////////////////////////////////////////////////////////////////////////////\r\nconst UNSAFE_DEFERRED_SYMBOL = Symbol(\"deferred\");\r\nfunction createStaticHandler(routes, opts) {\r\n  invariant(routes.length > 0, \"You must provide a non-empty routes array to createStaticHandler\");\r\n  let manifest = {};\r\n  let basename = (opts ? opts.basename : null) || \"/\";\r\n  let mapRouteProperties;\r\n  if (opts != null && opts.mapRouteProperties) {\r\n    mapRouteProperties = opts.mapRouteProperties;\r\n  } else if (opts != null && opts.detectErrorBoundary) {\r\n    // If they are still using the deprecated version, wrap it with the new API\r\n    let detectErrorBoundary = opts.detectErrorBoundary;\r\n    mapRouteProperties = route => ({\r\n      hasErrorBoundary: detectErrorBoundary(route)\r\n    });\r\n  } else {\r\n    mapRouteProperties = defaultMapRouteProperties;\r\n  }\r\n  // Config driven behavior flags\r\n  let future = _extends({\r\n    v7_relativeSplatPath: false,\r\n    v7_throwAbortReason: false\r\n  }, opts ? opts.future : null);\r\n  let dataRoutes = convertRoutesToDataRoutes(routes, mapRouteProperties, undefined, manifest);\r\n  /**\r\n   * The query() method is intended for document requests, in which we want to\r\n   * call an optional action and potentially multiple loaders for all nested\r\n   * routes.  It returns a StaticHandlerContext object, which is very similar\r\n   * to the router state (location, loaderData, actionData, errors, etc.) and\r\n   * also adds SSR-specific information such as the statusCode and headers\r\n   * from action/loaders Responses.\r\n   *\r\n   * It _should_ never throw and should report all errors through the\r\n   * returned context.errors object, properly associating errors to their error\r\n   * boundary.  Additionally, it tracks _deepestRenderedBoundaryId which can be\r\n   * used to emulate React error boundaries during SSr by performing a second\r\n   * pass only down to the boundaryId.\r\n   *\r\n   * The one exception where we do not return a StaticHandlerContext is when a\r\n   * redirect response is returned or thrown from any action/loader.  We\r\n   * propagate that out and return the raw Response so the HTTP server can\r\n   * return it directly.\r\n   *\r\n   * - `opts.requestContext` is an optional server context that will be passed\r\n   *   to actions/loaders in the `context` parameter\r\n   * - `opts.skipLoaderErrorBubbling` is an optional parameter that will prevent\r\n   *   the bubbling of errors which allows single-fetch-type implementations\r\n   *   where the client will handle the bubbling and we may need to return data\r\n   *   for the handling route\r\n   */\r\n  async function query(request, _temp3) {\r\n    let {\r\n      requestContext,\r\n      skipLoaderErrorBubbling,\r\n      dataStrategy\r\n    } = _temp3 === void 0 ? {} : _temp3;\r\n    let url = new URL(request.url);\r\n    let method = request.method;\r\n    let location = createLocation(\"\", createPath(url), null, \"default\");\r\n    let matches = matchRoutes(dataRoutes, location, basename);\r\n    // SSR supports HEAD requests while SPA doesn't\r\n    if (!isValidMethod(method) && method !== \"HEAD\") {\r\n      let error = getInternalRouterError(405, {\r\n        method\r\n      });\r\n      let {\r\n        matches: methodNotAllowedMatches,\r\n        route\r\n      } = getShortCircuitMatches(dataRoutes);\r\n      return {\r\n        basename,\r\n        location,\r\n        matches: methodNotAllowedMatches,\r\n        loaderData: {},\r\n        actionData: null,\r\n        errors: {\r\n          [route.id]: error\r\n        },\r\n        statusCode: error.status,\r\n        loaderHeaders: {},\r\n        actionHeaders: {},\r\n        activeDeferreds: null\r\n      };\r\n    } else if (!matches) {\r\n      let error = getInternalRouterError(404, {\r\n        pathname: location.pathname\r\n      });\r\n      let {\r\n        matches: notFoundMatches,\r\n        route\r\n      } = getShortCircuitMatches(dataRoutes);\r\n      return {\r\n        basename,\r\n        location,\r\n        matches: notFoundMatches,\r\n        loaderData: {},\r\n        actionData: null,\r\n        errors: {\r\n          [route.id]: error\r\n        },\r\n        statusCode: error.status,\r\n        loaderHeaders: {},\r\n        actionHeaders: {},\r\n        activeDeferreds: null\r\n      };\r\n    }\r\n    let result = await queryImpl(request, location, matches, requestContext, dataStrategy || null, skipLoaderErrorBubbling === true, null);\r\n    if (isResponse(result)) {\r\n      return result;\r\n    }\r\n    // When returning StaticHandlerContext, we patch back in the location here\r\n    // since we need it for React Context.  But this helps keep our submit and\r\n    // loadRouteData operating on a Request instead of a Location\r\n    return _extends({\r\n      location,\r\n      basename\r\n    }, result);\r\n  }\r\n  /**\r\n   * The queryRoute() method is intended for targeted route requests, either\r\n   * for fetch ?_data requests or resource route requests.  In this case, we\r\n   * are only ever calling a single action or loader, and we are returning the\r\n   * returned value directly.  In most cases, this will be a Response returned\r\n   * from the action/loader, but it may be a primitive or other value as well -\r\n   * and in such cases the calling context should handle that accordingly.\r\n   *\r\n   * We do respect the throw/return differentiation, so if an action/loader\r\n   * throws, then this method will throw the value.  This is important so we\r\n   * can do proper boundary identification in Remix where a thrown Response\r\n   * must go to the Catch Boundary but a returned Response is happy-path.\r\n   *\r\n   * One thing to note is that any Router-initiated Errors that make sense\r\n   * to associate with a status code will be thrown as an ErrorResponse\r\n   * instance which include the raw Error, such that the calling context can\r\n   * serialize the error as they see fit while including the proper response\r\n   * code.  Examples here are 404 and 405 errors that occur prior to reaching\r\n   * any user-defined loaders.\r\n   *\r\n   * - `opts.routeId` allows you to specify the specific route handler to call.\r\n   *   If not provided the handler will determine the proper route by matching\r\n   *   against `request.url`\r\n   * - `opts.requestContext` is an optional server context that will be passed\r\n   *    to actions/loaders in the `context` parameter\r\n   */\r\n  async function queryRoute(request, _temp4) {\r\n    let {\r\n      routeId,\r\n      requestContext,\r\n      dataStrategy\r\n    } = _temp4 === void 0 ? {} : _temp4;\r\n    let url = new URL(request.url);\r\n    let method = request.method;\r\n    let location = createLocation(\"\", createPath(url), null, \"default\");\r\n    let matches = matchRoutes(dataRoutes, location, basename);\r\n    // SSR supports HEAD requests while SPA doesn't\r\n    if (!isValidMethod(method) && method !== \"HEAD\" && method !== \"OPTIONS\") {\r\n      throw getInternalRouterError(405, {\r\n        method\r\n      });\r\n    } else if (!matches) {\r\n      throw getInternalRouterError(404, {\r\n        pathname: location.pathname\r\n      });\r\n    }\r\n    let match = routeId ? matches.find(m => m.route.id === routeId) : getTargetMatch(matches, location);\r\n    if (routeId && !match) {\r\n      throw getInternalRouterError(403, {\r\n        pathname: location.pathname,\r\n        routeId\r\n      });\r\n    } else if (!match) {\r\n      // This should never hit I don't think?\r\n      throw getInternalRouterError(404, {\r\n        pathname: location.pathname\r\n      });\r\n    }\r\n    let result = await queryImpl(request, location, matches, requestContext, dataStrategy || null, false, match);\r\n    if (isResponse(result)) {\r\n      return result;\r\n    }\r\n    let error = result.errors ? Object.values(result.errors)[0] : undefined;\r\n    if (error !== undefined) {\r\n      // If we got back result.errors, that means the loader/action threw\r\n      // _something_ that wasn't a Response, but it's not guaranteed/required\r\n      // to be an `instanceof Error` either, so we have to use throw here to\r\n      // preserve the \"error\" state outside of queryImpl.\r\n      throw error;\r\n    }\r\n    // Pick off the right state value to return\r\n    if (result.actionData) {\r\n      return Object.values(result.actionData)[0];\r\n    }\r\n    if (result.loaderData) {\r\n      var _result$activeDeferre;\r\n      let data = Object.values(result.loaderData)[0];\r\n      if ((_result$activeDeferre = result.activeDeferreds) != null && _result$activeDeferre[match.route.id]) {\r\n        data[UNSAFE_DEFERRED_SYMBOL] = result.activeDeferreds[match.route.id];\r\n      }\r\n      return data;\r\n    }\r\n    return undefined;\r\n  }\r\n  async function queryImpl(request, location, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, routeMatch) {\r\n    invariant(request.signal, \"query()/queryRoute() requests must contain an AbortController signal\");\r\n    try {\r\n      if (isMutationMethod(request.method.toLowerCase())) {\r\n        let result = await submit(request, matches, routeMatch || getTargetMatch(matches, location), requestContext, dataStrategy, skipLoaderErrorBubbling, routeMatch != null);\r\n        return result;\r\n      }\r\n      let result = await loadRouteData(request, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, routeMatch);\r\n      return isResponse(result) ? result : _extends({}, result, {\r\n        actionData: null,\r\n        actionHeaders: {}\r\n      });\r\n    } catch (e) {\r\n      // If the user threw/returned a Response in callLoaderOrAction for a\r\n      // `queryRoute` call, we throw the `DataStrategyResult` to bail out early\r\n      // and then return or throw the raw Response here accordingly\r\n      if (isDataStrategyResult(e) && isResponse(e.result)) {\r\n        if (e.type === ResultType.error) {\r\n          throw e.result;\r\n        }\r\n        return e.result;\r\n      }\r\n      // Redirects are always returned since they don't propagate to catch\r\n      // boundaries\r\n      if (isRedirectResponse(e)) {\r\n        return e;\r\n      }\r\n      throw e;\r\n    }\r\n  }\r\n  async function submit(request, matches, actionMatch, requestContext, dataStrategy, skipLoaderErrorBubbling, isRouteRequest) {\r\n    let result;\r\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\r\n      let error = getInternalRouterError(405, {\r\n        method: request.method,\r\n        pathname: new URL(request.url).pathname,\r\n        routeId: actionMatch.route.id\r\n      });\r\n      if (isRouteRequest) {\r\n        throw error;\r\n      }\r\n      result = {\r\n        type: ResultType.error,\r\n        error\r\n      };\r\n    } else {\r\n      let results = await callDataStrategy(\"action\", request, [actionMatch], matches, isRouteRequest, requestContext, dataStrategy);\r\n      result = results[actionMatch.route.id];\r\n      if (request.signal.aborted) {\r\n        throwStaticHandlerAbortedError(request, isRouteRequest, future);\r\n      }\r\n    }\r\n    if (isRedirectResult(result)) {\r\n      // Uhhhh - this should never happen, we should always throw these from\r\n      // callLoaderOrAction, but the type narrowing here keeps TS happy and we\r\n      // can get back on the \"throw all redirect responses\" train here should\r\n      // this ever happen :/\r\n      throw new Response(null, {\r\n        status: result.response.status,\r\n        headers: {\r\n          Location: result.response.headers.get(\"Location\")\r\n        }\r\n      });\r\n    }\r\n    if (isDeferredResult(result)) {\r\n      let error = getInternalRouterError(400, {\r\n        type: \"defer-action\"\r\n      });\r\n      if (isRouteRequest) {\r\n        throw error;\r\n      }\r\n      result = {\r\n        type: ResultType.error,\r\n        error\r\n      };\r\n    }\r\n    if (isRouteRequest) {\r\n      // Note: This should only be non-Response values if we get here, since\r\n      // isRouteRequest should throw any Response received in callLoaderOrAction\r\n      if (isErrorResult(result)) {\r\n        throw result.error;\r\n      }\r\n      return {\r\n        matches: [actionMatch],\r\n        loaderData: {},\r\n        actionData: {\r\n          [actionMatch.route.id]: result.data\r\n        },\r\n        errors: null,\r\n        // Note: statusCode + headers are unused here since queryRoute will\r\n        // return the raw Response or value\r\n        statusCode: 200,\r\n        loaderHeaders: {},\r\n        actionHeaders: {},\r\n        activeDeferreds: null\r\n      };\r\n    }\r\n    // Create a GET request for the loaders\r\n    let loaderRequest = new Request(request.url, {\r\n      headers: request.headers,\r\n      redirect: request.redirect,\r\n      signal: request.signal\r\n    });\r\n    if (isErrorResult(result)) {\r\n      // Store off the pending error - we use it to determine which loaders\r\n      // to call and will commit it when we complete the navigation\r\n      let boundaryMatch = skipLoaderErrorBubbling ? actionMatch : findNearestBoundary(matches, actionMatch.route.id);\r\n      let context = await loadRouteData(loaderRequest, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, null, [boundaryMatch.route.id, result]);\r\n      // action status codes take precedence over loader status codes\r\n      return _extends({}, context, {\r\n        statusCode: isRouteErrorResponse(result.error) ? result.error.status : result.statusCode != null ? result.statusCode : 500,\r\n        actionData: null,\r\n        actionHeaders: _extends({}, result.headers ? {\r\n          [actionMatch.route.id]: result.headers\r\n        } : {})\r\n      });\r\n    }\r\n    let context = await loadRouteData(loaderRequest, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, null);\r\n    return _extends({}, context, {\r\n      actionData: {\r\n        [actionMatch.route.id]: result.data\r\n      }\r\n    }, result.statusCode ? {\r\n      statusCode: result.statusCode\r\n    } : {}, {\r\n      actionHeaders: result.headers ? {\r\n        [actionMatch.route.id]: result.headers\r\n      } : {}\r\n    });\r\n  }\r\n  async function loadRouteData(request, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, routeMatch, pendingActionResult) {\r\n    let isRouteRequest = routeMatch != null;\r\n    // Short circuit if we have no loaders to run (queryRoute())\r\n    if (isRouteRequest && !(routeMatch != null && routeMatch.route.loader) && !(routeMatch != null && routeMatch.route.lazy)) {\r\n      throw getInternalRouterError(400, {\r\n        method: request.method,\r\n        pathname: new URL(request.url).pathname,\r\n        routeId: routeMatch == null ? void 0 : routeMatch.route.id\r\n      });\r\n    }\r\n    let requestMatches = routeMatch ? [routeMatch] : pendingActionResult && isErrorResult(pendingActionResult[1]) ? getLoaderMatchesUntilBoundary(matches, pendingActionResult[0]) : matches;\r\n    let matchesToLoad = requestMatches.filter(m => m.route.loader || m.route.lazy);\r\n    // Short circuit if we have no loaders to run (query())\r\n    if (matchesToLoad.length === 0) {\r\n      return {\r\n        matches,\r\n        // Add a null for all matched routes for proper revalidation on the client\r\n        loaderData: matches.reduce((acc, m) => Object.assign(acc, {\r\n          [m.route.id]: null\r\n        }), {}),\r\n        errors: pendingActionResult && isErrorResult(pendingActionResult[1]) ? {\r\n          [pendingActionResult[0]]: pendingActionResult[1].error\r\n        } : null,\r\n        statusCode: 200,\r\n        loaderHeaders: {},\r\n        activeDeferreds: null\r\n      };\r\n    }\r\n    let results = await callDataStrategy(\"loader\", request, matchesToLoad, matches, isRouteRequest, requestContext, dataStrategy);\r\n    if (request.signal.aborted) {\r\n      throwStaticHandlerAbortedError(request, isRouteRequest, future);\r\n    }\r\n    // Process and commit output from loaders\r\n    let activeDeferreds = new Map();\r\n    let context = processRouteLoaderData(matches, results, pendingActionResult, activeDeferreds, skipLoaderErrorBubbling);\r\n    // Add a null for any non-loader matches for proper revalidation on the client\r\n    let executedLoaders = new Set(matchesToLoad.map(match => match.route.id));\r\n    matches.forEach(match => {\r\n      if (!executedLoaders.has(match.route.id)) {\r\n        context.loaderData[match.route.id] = null;\r\n      }\r\n    });\r\n    return _extends({}, context, {\r\n      matches,\r\n      activeDeferreds: activeDeferreds.size > 0 ? Object.fromEntries(activeDeferreds.entries()) : null\r\n    });\r\n  }\r\n  // Utility wrapper for calling dataStrategy server-side without having to\r\n  // pass around the manifest, mapRouteProperties, etc.\r\n  async function callDataStrategy(type, request, matchesToLoad, matches, isRouteRequest, requestContext, dataStrategy) {\r\n    let results = await callDataStrategyImpl(dataStrategy || defaultDataStrategy, type, null, request, matchesToLoad, matches, null, manifest, mapRouteProperties, requestContext);\r\n    let dataResults = {};\r\n    await Promise.all(matches.map(async match => {\r\n      if (!(match.route.id in results)) {\r\n        return;\r\n      }\r\n      let result = results[match.route.id];\r\n      if (isRedirectDataStrategyResultResult(result)) {\r\n        let response = result.result;\r\n        // Throw redirects and let the server handle them with an HTTP redirect\r\n        throw normalizeRelativeRoutingRedirectResponse(response, request, match.route.id, matches, basename, future.v7_relativeSplatPath);\r\n      }\r\n      if (isResponse(result.result) && isRouteRequest) {\r\n        // For SSR single-route requests, we want to hand Responses back\r\n        // directly without unwrapping\r\n        throw result;\r\n      }\r\n      dataResults[match.route.id] = await convertDataStrategyResultToDataResult(result);\r\n    }));\r\n    return dataResults;\r\n  }\r\n  return {\r\n    dataRoutes,\r\n    query,\r\n    queryRoute\r\n  };\r\n}\r\n//#endregion\r\n////////////////////////////////////////////////////////////////////////////////\r\n//#region Helpers\r\n////////////////////////////////////////////////////////////////////////////////\r\n/**\r\n * Given an existing StaticHandlerContext and an error thrown at render time,\r\n * provide an updated StaticHandlerContext suitable for a second SSR render\r\n */\r\nfunction getStaticContextFromError(routes, context, error) {\r\n  let newContext = _extends({}, context, {\r\n    statusCode: isRouteErrorResponse(error) ? error.status : 500,\r\n    errors: {\r\n      [context._deepestRenderedBoundaryId || routes[0].id]: error\r\n    }\r\n  });\r\n  return newContext;\r\n}\r\nfunction throwStaticHandlerAbortedError(request, isRouteRequest, future) {\r\n  if (future.v7_throwAbortReason && request.signal.reason !== undefined) {\r\n    throw request.signal.reason;\r\n  }\r\n  let method = isRouteRequest ? \"queryRoute\" : \"query\";\r\n  throw new Error(method + \"() call aborted: \" + request.method + \" \" + request.url);\r\n}\r\nfunction isSubmissionNavigation(opts) {\r\n  return opts != null && (\"formData\" in opts && opts.formData != null || \"body\" in opts && opts.body !== undefined);\r\n}\r\nfunction normalizeTo(location, matches, basename, prependBasename, to, v7_relativeSplatPath, fromRouteId, relative) {\r\n  let contextualMatches;\r\n  let activeRouteMatch;\r\n  if (fromRouteId) {\r\n    // Grab matches up to the calling route so our route-relative logic is\r\n    // relative to the correct source route\r\n    contextualMatches = [];\r\n    for (let match of matches) {\r\n      contextualMatches.push(match);\r\n      if (match.route.id === fromRouteId) {\r\n        activeRouteMatch = match;\r\n        break;\r\n      }\r\n    }\r\n  } else {\r\n    contextualMatches = matches;\r\n    activeRouteMatch = matches[matches.length - 1];\r\n  }\r\n  // Resolve the relative path\r\n  let path = resolveTo(to ? to : \".\", getResolveToMatches(contextualMatches, v7_relativeSplatPath), stripBasename(location.pathname, basename) || location.pathname, relative === \"path\");\r\n  // When `to` is not specified we inherit search/hash from the current\r\n  // location, unlike when to=\".\" and we just inherit the path.\r\n  // See https://github.com/remix-run/remix/issues/927\r\n  if (to == null) {\r\n    path.search = location.search;\r\n    path.hash = location.hash;\r\n  }\r\n  // Account for `?index` params when routing to the current location\r\n  if ((to == null || to === \"\" || to === \".\") && activeRouteMatch) {\r\n    let nakedIndex = hasNakedIndexQuery(path.search);\r\n    if (activeRouteMatch.route.index && !nakedIndex) {\r\n      // Add one when we're targeting an index route\r\n      path.search = path.search ? path.search.replace(/^\\?/, \"?index&\") : \"?index\";\r\n    } else if (!activeRouteMatch.route.index && nakedIndex) {\r\n      // Remove existing ones when we're not\r\n      let params = new URLSearchParams(path.search);\r\n      let indexValues = params.getAll(\"index\");\r\n      params.delete(\"index\");\r\n      indexValues.filter(v => v).forEach(v => params.append(\"index\", v));\r\n      let qs = params.toString();\r\n      path.search = qs ? \"?\" + qs : \"\";\r\n    }\r\n  }\r\n  // If we're operating within a basename, prepend it to the pathname.  If\r\n  // this is a root navigation, then just use the raw basename which allows\r\n  // the basename to have full control over the presence of a trailing slash\r\n  // on root actions\r\n  if (prependBasename && basename !== \"/\") {\r\n    path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\r\n  }\r\n  return createPath(path);\r\n}\r\n// Normalize navigation options by converting formMethod=GET formData objects to\r\n// URLSearchParams so they behave identically to links with query params\r\nfunction normalizeNavigateOptions(normalizeFormMethod, isFetcher, path, opts) {\r\n  // Return location verbatim on non-submission navigations\r\n  if (!opts || !isSubmissionNavigation(opts)) {\r\n    return {\r\n      path\r\n    };\r\n  }\r\n  if (opts.formMethod && !isValidMethod(opts.formMethod)) {\r\n    return {\r\n      path,\r\n      error: getInternalRouterError(405, {\r\n        method: opts.formMethod\r\n      })\r\n    };\r\n  }\r\n  let getInvalidBodyError = () => ({\r\n    path,\r\n    error: getInternalRouterError(400, {\r\n      type: \"invalid-body\"\r\n    })\r\n  });\r\n  // Create a Submission on non-GET navigations\r\n  let rawFormMethod = opts.formMethod || \"get\";\r\n  let formMethod = normalizeFormMethod ? rawFormMethod.toUpperCase() : rawFormMethod.toLowerCase();\r\n  let formAction = stripHashFromPath(path);\r\n  if (opts.body !== undefined) {\r\n    if (opts.formEncType === \"text/plain\") {\r\n      // text only support POST/PUT/PATCH/DELETE submissions\r\n      if (!isMutationMethod(formMethod)) {\r\n        return getInvalidBodyError();\r\n      }\r\n      let text = typeof opts.body === \"string\" ? opts.body : opts.body instanceof FormData || opts.body instanceof URLSearchParams ?\r\n      // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#plain-text-form-data\r\n      Array.from(opts.body.entries()).reduce((acc, _ref3) => {\r\n        let [name, value] = _ref3;\r\n        return \"\" + acc + name + \"=\" + value + \"\\n\";\r\n      }, \"\") : String(opts.body);\r\n      return {\r\n        path,\r\n        submission: {\r\n          formMethod,\r\n          formAction,\r\n          formEncType: opts.formEncType,\r\n          formData: undefined,\r\n          json: undefined,\r\n          text\r\n        }\r\n      };\r\n    } else if (opts.formEncType === \"application/json\") {\r\n      // json only supports POST/PUT/PATCH/DELETE submissions\r\n      if (!isMutationMethod(formMethod)) {\r\n        return getInvalidBodyError();\r\n      }\r\n      try {\r\n        let json = typeof opts.body === \"string\" ? JSON.parse(opts.body) : opts.body;\r\n        return {\r\n          path,\r\n          submission: {\r\n            formMethod,\r\n            formAction,\r\n            formEncType: opts.formEncType,\r\n            formData: undefined,\r\n            json,\r\n            text: undefined\r\n          }\r\n        };\r\n      } catch (e) {\r\n        return getInvalidBodyError();\r\n      }\r\n    }\r\n  }\r\n  invariant(typeof FormData === \"function\", \"FormData is not available in this environment\");\r\n  let searchParams;\r\n  let formData;\r\n  if (opts.formData) {\r\n    searchParams = convertFormDataToSearchParams(opts.formData);\r\n    formData = opts.formData;\r\n  } else if (opts.body instanceof FormData) {\r\n    searchParams = convertFormDataToSearchParams(opts.body);\r\n    formData = opts.body;\r\n  } else if (opts.body instanceof URLSearchParams) {\r\n    searchParams = opts.body;\r\n    formData = convertSearchParamsToFormData(searchParams);\r\n  } else if (opts.body == null) {\r\n    searchParams = new URLSearchParams();\r\n    formData = new FormData();\r\n  } else {\r\n    try {\r\n      searchParams = new URLSearchParams(opts.body);\r\n      formData = convertSearchParamsToFormData(searchParams);\r\n    } catch (e) {\r\n      return getInvalidBodyError();\r\n    }\r\n  }\r\n  let submission = {\r\n    formMethod,\r\n    formAction,\r\n    formEncType: opts && opts.formEncType || \"application/x-www-form-urlencoded\",\r\n    formData,\r\n    json: undefined,\r\n    text: undefined\r\n  };\r\n  if (isMutationMethod(submission.formMethod)) {\r\n    return {\r\n      path,\r\n      submission\r\n    };\r\n  }\r\n  // Flatten submission onto URLSearchParams for GET submissions\r\n  let parsedPath = parsePath(path);\r\n  // On GET navigation submissions we can drop the ?index param from the\r\n  // resulting location since all loaders will run.  But fetcher GET submissions\r\n  // only run a single loader so we need to preserve any incoming ?index params\r\n  if (isFetcher && parsedPath.search && hasNakedIndexQuery(parsedPath.search)) {\r\n    searchParams.append(\"index\", \"\");\r\n  }\r\n  parsedPath.search = \"?\" + searchParams;\r\n  return {\r\n    path: createPath(parsedPath),\r\n    submission\r\n  };\r\n}\r\n// Filter out all routes at/below any caught error as they aren't going to\r\n// render so we don't need to load them\r\nfunction getLoaderMatchesUntilBoundary(matches, boundaryId, includeBoundary) {\r\n  if (includeBoundary === void 0) {\r\n    includeBoundary = false;\r\n  }\r\n  let index = matches.findIndex(m => m.route.id === boundaryId);\r\n  if (index >= 0) {\r\n    return matches.slice(0, includeBoundary ? index + 1 : index);\r\n  }\r\n  return matches;\r\n}\r\nfunction getMatchesToLoad(history, state, matches, submission, location, initialHydration, skipActionErrorRevalidation, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, deletedFetchers, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, pendingActionResult) {\r\n  let actionResult = pendingActionResult ? isErrorResult(pendingActionResult[1]) ? pendingActionResult[1].error : pendingActionResult[1].data : undefined;\r\n  let currentUrl = history.createURL(state.location);\r\n  let nextUrl = history.createURL(location);\r\n  // Pick navigation matches that are net-new or qualify for revalidation\r\n  let boundaryMatches = matches;\r\n  if (initialHydration && state.errors) {\r\n    // On initial hydration, only consider matches up to _and including_ the boundary.\r\n    // This is inclusive to handle cases where a server loader ran successfully,\r\n    // a child server loader bubbled up to this route, but this route has\r\n    // `clientLoader.hydrate` so we want to still run the `clientLoader` so that\r\n    // we have a complete version of `loaderData`\r\n    boundaryMatches = getLoaderMatchesUntilBoundary(matches, Object.keys(state.errors)[0], true);\r\n  } else if (pendingActionResult && isErrorResult(pendingActionResult[1])) {\r\n    // If an action threw an error, we call loaders up to, but not including the\r\n    // boundary\r\n    boundaryMatches = getLoaderMatchesUntilBoundary(matches, pendingActionResult[0]);\r\n  }\r\n  // Don't revalidate loaders by default after action 4xx/5xx responses\r\n  // when the flag is enabled.  They can still opt-into revalidation via\r\n  // `shouldRevalidate` via `actionResult`\r\n  let actionStatus = pendingActionResult ? pendingActionResult[1].statusCode : undefined;\r\n  let shouldSkipRevalidation = skipActionErrorRevalidation && actionStatus && actionStatus >= 400;\r\n  let navigationMatches = boundaryMatches.filter((match, index) => {\r\n    let {\r\n      route\r\n    } = match;\r\n    if (route.lazy) {\r\n      // We haven't loaded this route yet so we don't know if it's got a loader!\r\n      return true;\r\n    }\r\n    if (route.loader == null) {\r\n      return false;\r\n    }\r\n    if (initialHydration) {\r\n      return shouldLoadRouteOnHydration(route, state.loaderData, state.errors);\r\n    }\r\n    // Always call the loader on new route instances and pending defer cancellations\r\n    if (isNewLoader(state.loaderData, state.matches[index], match) || cancelledDeferredRoutes.some(id => id === match.route.id)) {\r\n      return true;\r\n    }\r\n    // This is the default implementation for when we revalidate.  If the route\r\n    // provides it's own implementation, then we give them full control but\r\n    // provide this value so they can leverage it if needed after they check\r\n    // their own specific use cases\r\n    let currentRouteMatch = state.matches[index];\r\n    let nextRouteMatch = match;\r\n    return shouldRevalidateLoader(match, _extends({\r\n      currentUrl,\r\n      currentParams: currentRouteMatch.params,\r\n      nextUrl,\r\n      nextParams: nextRouteMatch.params\r\n    }, submission, {\r\n      actionResult,\r\n      actionStatus,\r\n      defaultShouldRevalidate: shouldSkipRevalidation ? false :\r\n      // Forced revalidation due to submission, useRevalidator, or X-Remix-Revalidate\r\n      isRevalidationRequired || currentUrl.pathname + currentUrl.search === nextUrl.pathname + nextUrl.search ||\r\n      // Search params affect all loaders\r\n      currentUrl.search !== nextUrl.search || isNewRouteInstance(currentRouteMatch, nextRouteMatch)\r\n    }));\r\n  });\r\n  // Pick fetcher.loads that need to be revalidated\r\n  let revalidatingFetchers = [];\r\n  fetchLoadMatches.forEach((f, key) => {\r\n    // Don't revalidate:\r\n    //  - on initial hydration (shouldn't be any fetchers then anyway)\r\n    //  - if fetcher won't be present in the subsequent render\r\n    //    - no longer matches the URL (v7_fetcherPersist=false)\r\n    //    - was unmounted but persisted due to v7_fetcherPersist=true\r\n    if (initialHydration || !matches.some(m => m.route.id === f.routeId) || deletedFetchers.has(key)) {\r\n      return;\r\n    }\r\n    let fetcherMatches = matchRoutes(routesToUse, f.path, basename);\r\n    // If the fetcher path no longer matches, push it in with null matches so\r\n    // we can trigger a 404 in callLoadersAndMaybeResolveData.  Note this is\r\n    // currently only a use-case for Remix HMR where the route tree can change\r\n    // at runtime and remove a route previously loaded via a fetcher\r\n    if (!fetcherMatches) {\r\n      revalidatingFetchers.push({\r\n        key,\r\n        routeId: f.routeId,\r\n        path: f.path,\r\n        matches: null,\r\n        match: null,\r\n        controller: null\r\n      });\r\n      return;\r\n    }\r\n    // Revalidating fetchers are decoupled from the route matches since they\r\n    // load from a static href.  They revalidate based on explicit revalidation\r\n    // (submission, useRevalidator, or X-Remix-Revalidate)\r\n    let fetcher = state.fetchers.get(key);\r\n    let fetcherMatch = getTargetMatch(fetcherMatches, f.path);\r\n    let shouldRevalidate = false;\r\n    if (fetchRedirectIds.has(key)) {\r\n      // Never trigger a revalidation of an actively redirecting fetcher\r\n      shouldRevalidate = false;\r\n    } else if (cancelledFetcherLoads.has(key)) {\r\n      // Always mark for revalidation if the fetcher was cancelled\r\n      cancelledFetcherLoads.delete(key);\r\n      shouldRevalidate = true;\r\n    } else if (fetcher && fetcher.state !== \"idle\" && fetcher.data === undefined) {\r\n      // If the fetcher hasn't ever completed loading yet, then this isn't a\r\n      // revalidation, it would just be a brand new load if an explicit\r\n      // revalidation is required\r\n      shouldRevalidate = isRevalidationRequired;\r\n    } else {\r\n      // Otherwise fall back on any user-defined shouldRevalidate, defaulting\r\n      // to explicit revalidations only\r\n      shouldRevalidate = shouldRevalidateLoader(fetcherMatch, _extends({\r\n        currentUrl,\r\n        currentParams: state.matches[state.matches.length - 1].params,\r\n        nextUrl,\r\n        nextParams: matches[matches.length - 1].params\r\n      }, submission, {\r\n        actionResult,\r\n        actionStatus,\r\n        defaultShouldRevalidate: shouldSkipRevalidation ? false : isRevalidationRequired\r\n      }));\r\n    }\r\n    if (shouldRevalidate) {\r\n      revalidatingFetchers.push({\r\n        key,\r\n        routeId: f.routeId,\r\n        path: f.path,\r\n        matches: fetcherMatches,\r\n        match: fetcherMatch,\r\n        controller: new AbortController()\r\n      });\r\n    }\r\n  });\r\n  return [navigationMatches, revalidatingFetchers];\r\n}\r\nfunction shouldLoadRouteOnHydration(route, loaderData, errors) {\r\n  // We dunno if we have a loader - gotta find out!\r\n  if (route.lazy) {\r\n    return true;\r\n  }\r\n  // No loader, nothing to initialize\r\n  if (!route.loader) {\r\n    return false;\r\n  }\r\n  let hasData = loaderData != null && loaderData[route.id] !== undefined;\r\n  let hasError = errors != null && errors[route.id] !== undefined;\r\n  // Don't run if we error'd during SSR\r\n  if (!hasData && hasError) {\r\n    return false;\r\n  }\r\n  // Explicitly opting-in to running on hydration\r\n  if (typeof route.loader === \"function\" && route.loader.hydrate === true) {\r\n    return true;\r\n  }\r\n  // Otherwise, run if we're not yet initialized with anything\r\n  return !hasData && !hasError;\r\n}\r\nfunction isNewLoader(currentLoaderData, currentMatch, match) {\r\n  let isNew =\r\n  // [a] -> [a, b]\r\n  !currentMatch ||\r\n  // [a, b] -> [a, c]\r\n  match.route.id !== currentMatch.route.id;\r\n  // Handle the case that we don't have data for a re-used route, potentially\r\n  // from a prior error or from a cancelled pending deferred\r\n  let isMissingData = currentLoaderData[match.route.id] === undefined;\r\n  // Always load if this is a net-new route or we don't yet have data\r\n  return isNew || isMissingData;\r\n}\r\nfunction isNewRouteInstance(currentMatch, match) {\r\n  let currentPath = currentMatch.route.path;\r\n  return (\r\n    // param change for this match, /users/123 -> /users/456\r\n    currentMatch.pathname !== match.pathname ||\r\n    // splat param changed, which is not present in match.path\r\n    // e.g. /files/images/avatar.jpg -> files/finances.xls\r\n    currentPath != null && currentPath.endsWith(\"*\") && currentMatch.params[\"*\"] !== match.params[\"*\"]\r\n  );\r\n}\r\nfunction shouldRevalidateLoader(loaderMatch, arg) {\r\n  if (loaderMatch.route.shouldRevalidate) {\r\n    let routeChoice = loaderMatch.route.shouldRevalidate(arg);\r\n    if (typeof routeChoice === \"boolean\") {\r\n      return routeChoice;\r\n    }\r\n  }\r\n  return arg.defaultShouldRevalidate;\r\n}\r\nfunction patchRoutesImpl(routeId, children, routesToUse, manifest, mapRouteProperties) {\r\n  var _childrenToPatch;\r\n  let childrenToPatch;\r\n  if (routeId) {\r\n    let route = manifest[routeId];\r\n    invariant(route, \"No route found to patch children into: routeId = \" + routeId);\r\n    if (!route.children) {\r\n      route.children = [];\r\n    }\r\n    childrenToPatch = route.children;\r\n  } else {\r\n    childrenToPatch = routesToUse;\r\n  }\r\n  // Don't patch in routes we already know about so that `patch` is idempotent\r\n  // to simplify user-land code. This is useful because we re-call the\r\n  // `patchRoutesOnNavigation` function for matched routes with params.\r\n  let uniqueChildren = children.filter(newRoute => !childrenToPatch.some(existingRoute => isSameRoute(newRoute, existingRoute)));\r\n  let newRoutes = convertRoutesToDataRoutes(uniqueChildren, mapRouteProperties, [routeId || \"_\", \"patch\", String(((_childrenToPatch = childrenToPatch) == null ? void 0 : _childrenToPatch.length) || \"0\")], manifest);\r\n  childrenToPatch.push(...newRoutes);\r\n}\r\nfunction isSameRoute(newRoute, existingRoute) {\r\n  // Most optimal check is by id\r\n  if (\"id\" in newRoute && \"id\" in existingRoute && newRoute.id === existingRoute.id) {\r\n    return true;\r\n  }\r\n  // Second is by pathing differences\r\n  if (!(newRoute.index === existingRoute.index && newRoute.path === existingRoute.path && newRoute.caseSensitive === existingRoute.caseSensitive)) {\r\n    return false;\r\n  }\r\n  // Pathless layout routes are trickier since we need to check children.\r\n  // If they have no children then they're the same as far as we can tell\r\n  if ((!newRoute.children || newRoute.children.length === 0) && (!existingRoute.children || existingRoute.children.length === 0)) {\r\n    return true;\r\n  }\r\n  // Otherwise, we look to see if every child in the new route is already\r\n  // represented in the existing route's children\r\n  return newRoute.children.every((aChild, i) => {\r\n    var _existingRoute$childr;\r\n    return (_existingRoute$childr = existingRoute.children) == null ? void 0 : _existingRoute$childr.some(bChild => isSameRoute(aChild, bChild));\r\n  });\r\n}\r\n/**\r\n * Execute route.lazy() methods to lazily load route modules (loader, action,\r\n * shouldRevalidate) and update the routeManifest in place which shares objects\r\n * with dataRoutes so those get updated as well.\r\n */\r\nasync function loadLazyRouteModule(route, mapRouteProperties, manifest) {\r\n  if (!route.lazy) {\r\n    return;\r\n  }\r\n  let lazyRoute = await route.lazy();\r\n  // If the lazy route function was executed and removed by another parallel\r\n  // call then we can return - first lazy() to finish wins because the return\r\n  // value of lazy is expected to be static\r\n  if (!route.lazy) {\r\n    return;\r\n  }\r\n  let routeToUpdate = manifest[route.id];\r\n  invariant(routeToUpdate, \"No route found in manifest\");\r\n  // Update the route in place.  This should be safe because there's no way\r\n  // we could yet be sitting on this route as we can't get there without\r\n  // resolving lazy() first.\r\n  //\r\n  // This is different than the HMR \"update\" use-case where we may actively be\r\n  // on the route being updated.  The main concern boils down to \"does this\r\n  // mutation affect any ongoing navigations or any current state.matches\r\n  // values?\".  If not, it should be safe to update in place.\r\n  let routeUpdates = {};\r\n  for (let lazyRouteProperty in lazyRoute) {\r\n    let staticRouteValue = routeToUpdate[lazyRouteProperty];\r\n    let isPropertyStaticallyDefined = staticRouteValue !== undefined &&\r\n    // This property isn't static since it should always be updated based\r\n    // on the route updates\r\n    lazyRouteProperty !== \"hasErrorBoundary\";\r\n    warning(!isPropertyStaticallyDefined, \"Route \\\"\" + routeToUpdate.id + \"\\\" has a static property \\\"\" + lazyRouteProperty + \"\\\" \" + \"defined but its lazy function is also returning a value for this property. \" + (\"The lazy route property \\\"\" + lazyRouteProperty + \"\\\" will be ignored.\"));\r\n    if (!isPropertyStaticallyDefined && !immutableRouteKeys.has(lazyRouteProperty)) {\r\n      routeUpdates[lazyRouteProperty] = lazyRoute[lazyRouteProperty];\r\n    }\r\n  }\r\n  // Mutate the route with the provided updates.  Do this first so we pass\r\n  // the updated version to mapRouteProperties\r\n  Object.assign(routeToUpdate, routeUpdates);\r\n  // Mutate the `hasErrorBoundary` property on the route based on the route\r\n  // updates and remove the `lazy` function so we don't resolve the lazy\r\n  // route again.\r\n  Object.assign(routeToUpdate, _extends({}, mapRouteProperties(routeToUpdate), {\r\n    lazy: undefined\r\n  }));\r\n}\r\n// Default implementation of `dataStrategy` which fetches all loaders in parallel\r\nasync function defaultDataStrategy(_ref4) {\r\n  let {\r\n    matches\r\n  } = _ref4;\r\n  let matchesToLoad = matches.filter(m => m.shouldLoad);\r\n  let results = await Promise.all(matchesToLoad.map(m => m.resolve()));\r\n  return results.reduce((acc, result, i) => Object.assign(acc, {\r\n    [matchesToLoad[i].route.id]: result\r\n  }), {});\r\n}\r\nasync function callDataStrategyImpl(dataStrategyImpl, type, state, request, matchesToLoad, matches, fetcherKey, manifest, mapRouteProperties, requestContext) {\r\n  let loadRouteDefinitionsPromises = matches.map(m => m.route.lazy ? loadLazyRouteModule(m.route, mapRouteProperties, manifest) : undefined);\r\n  let dsMatches = matches.map((match, i) => {\r\n    let loadRoutePromise = loadRouteDefinitionsPromises[i];\r\n    let shouldLoad = matchesToLoad.some(m => m.route.id === match.route.id);\r\n    // `resolve` encapsulates route.lazy(), executing the loader/action,\r\n    // and mapping return values/thrown errors to a `DataStrategyResult`.  Users\r\n    // can pass a callback to take fine-grained control over the execution\r\n    // of the loader/action\r\n    let resolve = async handlerOverride => {\r\n      if (handlerOverride && request.method === \"GET\" && (match.route.lazy || match.route.loader)) {\r\n        shouldLoad = true;\r\n      }\r\n      return shouldLoad ? callLoaderOrAction(type, request, match, loadRoutePromise, handlerOverride, requestContext) : Promise.resolve({\r\n        type: ResultType.data,\r\n        result: undefined\r\n      });\r\n    };\r\n    return _extends({}, match, {\r\n      shouldLoad,\r\n      resolve\r\n    });\r\n  });\r\n  // Send all matches here to allow for a middleware-type implementation.\r\n  // handler will be a no-op for unneeded routes and we filter those results\r\n  // back out below.\r\n  let results = await dataStrategyImpl({\r\n    matches: dsMatches,\r\n    request,\r\n    params: matches[0].params,\r\n    fetcherKey,\r\n    context: requestContext\r\n  });\r\n  // Wait for all routes to load here but 'swallow the error since we want\r\n  // it to bubble up from the `await loadRoutePromise` in `callLoaderOrAction` -\r\n  // called from `match.resolve()`\r\n  try {\r\n    await Promise.all(loadRouteDefinitionsPromises);\r\n  } catch (e) {\r\n    // No-op\r\n  }\r\n  return results;\r\n}\r\n// Default logic for calling a loader/action is the user has no specified a dataStrategy\r\nasync function callLoaderOrAction(type, request, match, loadRoutePromise, handlerOverride, staticContext) {\r\n  let result;\r\n  let onReject;\r\n  let runHandler = handler => {\r\n    // Setup a promise we can race against so that abort signals short circuit\r\n    let reject;\r\n    // This will never resolve so safe to type it as Promise<DataStrategyResult> to\r\n    // satisfy the function return value\r\n    let abortPromise = new Promise((_, r) => reject = r);\r\n    onReject = () => reject();\r\n    request.signal.addEventListener(\"abort\", onReject);\r\n    let actualHandler = ctx => {\r\n      if (typeof handler !== \"function\") {\r\n        return Promise.reject(new Error(\"You cannot call the handler for a route which defines a boolean \" + (\"\\\"\" + type + \"\\\" [routeId: \" + match.route.id + \"]\")));\r\n      }\r\n      return handler({\r\n        request,\r\n        params: match.params,\r\n        context: staticContext\r\n      }, ...(ctx !== undefined ? [ctx] : []));\r\n    };\r\n    let handlerPromise = (async () => {\r\n      try {\r\n        let val = await (handlerOverride ? handlerOverride(ctx => actualHandler(ctx)) : actualHandler());\r\n        return {\r\n          type: \"data\",\r\n          result: val\r\n        };\r\n      } catch (e) {\r\n        return {\r\n          type: \"error\",\r\n          result: e\r\n        };\r\n      }\r\n    })();\r\n    return Promise.race([handlerPromise, abortPromise]);\r\n  };\r\n  try {\r\n    let handler = match.route[type];\r\n    // If we have a route.lazy promise, await that first\r\n    if (loadRoutePromise) {\r\n      if (handler) {\r\n        // Run statically defined handler in parallel with lazy()\r\n        let handlerError;\r\n        let [value] = await Promise.all([\r\n        // If the handler throws, don't let it immediately bubble out,\r\n        // since we need to let the lazy() execution finish so we know if this\r\n        // route has a boundary that can handle the error\r\n        runHandler(handler).catch(e => {\r\n          handlerError = e;\r\n        }), loadRoutePromise]);\r\n        if (handlerError !== undefined) {\r\n          throw handlerError;\r\n        }\r\n        result = value;\r\n      } else {\r\n        // Load lazy route module, then run any returned handler\r\n        await loadRoutePromise;\r\n        handler = match.route[type];\r\n        if (handler) {\r\n          // Handler still runs even if we got interrupted to maintain consistency\r\n          // with un-abortable behavior of handler execution on non-lazy or\r\n          // previously-lazy-loaded routes\r\n          result = await runHandler(handler);\r\n        } else if (type === \"action\") {\r\n          let url = new URL(request.url);\r\n          let pathname = url.pathname + url.search;\r\n          throw getInternalRouterError(405, {\r\n            method: request.method,\r\n            pathname,\r\n            routeId: match.route.id\r\n          });\r\n        } else {\r\n          // lazy() route has no loader to run.  Short circuit here so we don't\r\n          // hit the invariant below that errors on returning undefined.\r\n          return {\r\n            type: ResultType.data,\r\n            result: undefined\r\n          };\r\n        }\r\n      }\r\n    } else if (!handler) {\r\n      let url = new URL(request.url);\r\n      let pathname = url.pathname + url.search;\r\n      throw getInternalRouterError(404, {\r\n        pathname\r\n      });\r\n    } else {\r\n      result = await runHandler(handler);\r\n    }\r\n    invariant(result.result !== undefined, \"You defined \" + (type === \"action\" ? \"an action\" : \"a loader\") + \" for route \" + (\"\\\"\" + match.route.id + \"\\\" but didn't return anything from your `\" + type + \"` \") + \"function. Please return a value or `null`.\");\r\n  } catch (e) {\r\n    // We should already be catching and converting normal handler executions to\r\n    // DataStrategyResults and returning them, so anything that throws here is an\r\n    // unexpected error we still need to wrap\r\n    return {\r\n      type: ResultType.error,\r\n      result: e\r\n    };\r\n  } finally {\r\n    if (onReject) {\r\n      request.signal.removeEventListener(\"abort\", onReject);\r\n    }\r\n  }\r\n  return result;\r\n}\r\nasync function convertDataStrategyResultToDataResult(dataStrategyResult) {\r\n  let {\r\n    result,\r\n    type\r\n  } = dataStrategyResult;\r\n  if (isResponse(result)) {\r\n    let data;\r\n    try {\r\n      let contentType = result.headers.get(\"Content-Type\");\r\n      // Check between word boundaries instead of startsWith() due to the last\r\n      // paragraph of https://httpwg.org/specs/rfc9110.html#field.content-type\r\n      if (contentType && /\\bapplication\\/json\\b/.test(contentType)) {\r\n        if (result.body == null) {\r\n          data = null;\r\n        } else {\r\n          data = await result.json();\r\n        }\r\n      } else {\r\n        data = await result.text();\r\n      }\r\n    } catch (e) {\r\n      return {\r\n        type: ResultType.error,\r\n        error: e\r\n      };\r\n    }\r\n    if (type === ResultType.error) {\r\n      return {\r\n        type: ResultType.error,\r\n        error: new ErrorResponseImpl(result.status, result.statusText, data),\r\n        statusCode: result.status,\r\n        headers: result.headers\r\n      };\r\n    }\r\n    return {\r\n      type: ResultType.data,\r\n      data,\r\n      statusCode: result.status,\r\n      headers: result.headers\r\n    };\r\n  }\r\n  if (type === ResultType.error) {\r\n    if (isDataWithResponseInit(result)) {\r\n      var _result$init3, _result$init4;\r\n      if (result.data instanceof Error) {\r\n        var _result$init, _result$init2;\r\n        return {\r\n          type: ResultType.error,\r\n          error: result.data,\r\n          statusCode: (_result$init = result.init) == null ? void 0 : _result$init.status,\r\n          headers: (_result$init2 = result.init) != null && _result$init2.headers ? new Headers(result.init.headers) : undefined\r\n        };\r\n      }\r\n      // Convert thrown data() to ErrorResponse instances\r\n      return {\r\n        type: ResultType.error,\r\n        error: new ErrorResponseImpl(((_result$init3 = result.init) == null ? void 0 : _result$init3.status) || 500, undefined, result.data),\r\n        statusCode: isRouteErrorResponse(result) ? result.status : undefined,\r\n        headers: (_result$init4 = result.init) != null && _result$init4.headers ? new Headers(result.init.headers) : undefined\r\n      };\r\n    }\r\n    return {\r\n      type: ResultType.error,\r\n      error: result,\r\n      statusCode: isRouteErrorResponse(result) ? result.status : undefined\r\n    };\r\n  }\r\n  if (isDeferredData(result)) {\r\n    var _result$init5, _result$init6;\r\n    return {\r\n      type: ResultType.deferred,\r\n      deferredData: result,\r\n      statusCode: (_result$init5 = result.init) == null ? void 0 : _result$init5.status,\r\n      headers: ((_result$init6 = result.init) == null ? void 0 : _result$init6.headers) && new Headers(result.init.headers)\r\n    };\r\n  }\r\n  if (isDataWithResponseInit(result)) {\r\n    var _result$init7, _result$init8;\r\n    return {\r\n      type: ResultType.data,\r\n      data: result.data,\r\n      statusCode: (_result$init7 = result.init) == null ? void 0 : _result$init7.status,\r\n      headers: (_result$init8 = result.init) != null && _result$init8.headers ? new Headers(result.init.headers) : undefined\r\n    };\r\n  }\r\n  return {\r\n    type: ResultType.data,\r\n    data: result\r\n  };\r\n}\r\n// Support relative routing in internal redirects\r\nfunction normalizeRelativeRoutingRedirectResponse(response, request, routeId, matches, basename, v7_relativeSplatPath) {\r\n  let location = response.headers.get(\"Location\");\r\n  invariant(location, \"Redirects returned/thrown from loaders/actions must have a Location header\");\r\n  if (!ABSOLUTE_URL_REGEX.test(location)) {\r\n    let trimmedMatches = matches.slice(0, matches.findIndex(m => m.route.id === routeId) + 1);\r\n    location = normalizeTo(new URL(request.url), trimmedMatches, basename, true, location, v7_relativeSplatPath);\r\n    response.headers.set(\"Location\", location);\r\n  }\r\n  return response;\r\n}\r\nfunction normalizeRedirectLocation(location, currentUrl, basename) {\r\n  if (ABSOLUTE_URL_REGEX.test(location)) {\r\n    // Strip off the protocol+origin for same-origin + same-basename absolute redirects\r\n    let normalizedLocation = location;\r\n    let url = normalizedLocation.startsWith(\"//\") ? new URL(currentUrl.protocol + normalizedLocation) : new URL(normalizedLocation);\r\n    let isSameBasename = stripBasename(url.pathname, basename) != null;\r\n    if (url.origin === currentUrl.origin && isSameBasename) {\r\n      return url.pathname + url.search + url.hash;\r\n    }\r\n  }\r\n  return location;\r\n}\r\n// Utility method for creating the Request instances for loaders/actions during\r\n// client-side navigations and fetches.  During SSR we will always have a\r\n// Request instance from the static handler (query/queryRoute)\r\nfunction createClientSideRequest(history, location, signal, submission) {\r\n  let url = history.createURL(stripHashFromPath(location)).toString();\r\n  let init = {\r\n    signal\r\n  };\r\n  if (submission && isMutationMethod(submission.formMethod)) {\r\n    let {\r\n      formMethod,\r\n      formEncType\r\n    } = submission;\r\n    // Didn't think we needed this but it turns out unlike other methods, patch\r\n    // won't be properly normalized to uppercase and results in a 405 error.\r\n    // See: https://fetch.spec.whatwg.org/#concept-method\r\n    init.method = formMethod.toUpperCase();\r\n    if (formEncType === \"application/json\") {\r\n      init.headers = new Headers({\r\n        \"Content-Type\": formEncType\r\n      });\r\n      init.body = JSON.stringify(submission.json);\r\n    } else if (formEncType === \"text/plain\") {\r\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\r\n      init.body = submission.text;\r\n    } else if (formEncType === \"application/x-www-form-urlencoded\" && submission.formData) {\r\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\r\n      init.body = convertFormDataToSearchParams(submission.formData);\r\n    } else {\r\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\r\n      init.body = submission.formData;\r\n    }\r\n  }\r\n  return new Request(url, init);\r\n}\r\nfunction convertFormDataToSearchParams(formData) {\r\n  let searchParams = new URLSearchParams();\r\n  for (let [key, value] of formData.entries()) {\r\n    // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#converting-an-entry-list-to-a-list-of-name-value-pairs\r\n    searchParams.append(key, typeof value === \"string\" ? value : value.name);\r\n  }\r\n  return searchParams;\r\n}\r\nfunction convertSearchParamsToFormData(searchParams) {\r\n  let formData = new FormData();\r\n  for (let [key, value] of searchParams.entries()) {\r\n    formData.append(key, value);\r\n  }\r\n  return formData;\r\n}\r\nfunction processRouteLoaderData(matches, results, pendingActionResult, activeDeferreds, skipLoaderErrorBubbling) {\r\n  // Fill in loaderData/errors from our loaders\r\n  let loaderData = {};\r\n  let errors = null;\r\n  let statusCode;\r\n  let foundError = false;\r\n  let loaderHeaders = {};\r\n  let pendingError = pendingActionResult && isErrorResult(pendingActionResult[1]) ? pendingActionResult[1].error : undefined;\r\n  // Process loader results into state.loaderData/state.errors\r\n  matches.forEach(match => {\r\n    if (!(match.route.id in results)) {\r\n      return;\r\n    }\r\n    let id = match.route.id;\r\n    let result = results[id];\r\n    invariant(!isRedirectResult(result), \"Cannot handle redirect results in processLoaderData\");\r\n    if (isErrorResult(result)) {\r\n      let error = result.error;\r\n      // If we have a pending action error, we report it at the highest-route\r\n      // that throws a loader error, and then clear it out to indicate that\r\n      // it was consumed\r\n      if (pendingError !== undefined) {\r\n        error = pendingError;\r\n        pendingError = undefined;\r\n      }\r\n      errors = errors || {};\r\n      if (skipLoaderErrorBubbling) {\r\n        errors[id] = error;\r\n      } else {\r\n        // Look upwards from the matched route for the closest ancestor error\r\n        // boundary, defaulting to the root match.  Prefer higher error values\r\n        // if lower errors bubble to the same boundary\r\n        let boundaryMatch = findNearestBoundary(matches, id);\r\n        if (errors[boundaryMatch.route.id] == null) {\r\n          errors[boundaryMatch.route.id] = error;\r\n        }\r\n      }\r\n      // Clear our any prior loaderData for the throwing route\r\n      loaderData[id] = undefined;\r\n      // Once we find our first (highest) error, we set the status code and\r\n      // prevent deeper status codes from overriding\r\n      if (!foundError) {\r\n        foundError = true;\r\n        statusCode = isRouteErrorResponse(result.error) ? result.error.status : 500;\r\n      }\r\n      if (result.headers) {\r\n        loaderHeaders[id] = result.headers;\r\n      }\r\n    } else {\r\n      if (isDeferredResult(result)) {\r\n        activeDeferreds.set(id, result.deferredData);\r\n        loaderData[id] = result.deferredData.data;\r\n        // Error status codes always override success status codes, but if all\r\n        // loaders are successful we take the deepest status code.\r\n        if (result.statusCode != null && result.statusCode !== 200 && !foundError) {\r\n          statusCode = result.statusCode;\r\n        }\r\n        if (result.headers) {\r\n          loaderHeaders[id] = result.headers;\r\n        }\r\n      } else {\r\n        loaderData[id] = result.data;\r\n        // Error status codes always override success status codes, but if all\r\n        // loaders are successful we take the deepest status code.\r\n        if (result.statusCode && result.statusCode !== 200 && !foundError) {\r\n          statusCode = result.statusCode;\r\n        }\r\n        if (result.headers) {\r\n          loaderHeaders[id] = result.headers;\r\n        }\r\n      }\r\n    }\r\n  });\r\n  // If we didn't consume the pending action error (i.e., all loaders\r\n  // resolved), then consume it here.  Also clear out any loaderData for the\r\n  // throwing route\r\n  if (pendingError !== undefined && pendingActionResult) {\r\n    errors = {\r\n      [pendingActionResult[0]]: pendingError\r\n    };\r\n    loaderData[pendingActionResult[0]] = undefined;\r\n  }\r\n  return {\r\n    loaderData,\r\n    errors,\r\n    statusCode: statusCode || 200,\r\n    loaderHeaders\r\n  };\r\n}\r\nfunction processLoaderData(state, matches, results, pendingActionResult, revalidatingFetchers, fetcherResults, activeDeferreds) {\r\n  let {\r\n    loaderData,\r\n    errors\r\n  } = processRouteLoaderData(matches, results, pendingActionResult, activeDeferreds, false // This method is only called client side so we always want to bubble\r\n  );\r\n  // Process results from our revalidating fetchers\r\n  revalidatingFetchers.forEach(rf => {\r\n    let {\r\n      key,\r\n      match,\r\n      controller\r\n    } = rf;\r\n    let result = fetcherResults[key];\r\n    invariant(result, \"Did not find corresponding fetcher result\");\r\n    // Process fetcher non-redirect errors\r\n    if (controller && controller.signal.aborted) {\r\n      // Nothing to do for aborted fetchers\r\n      return;\r\n    } else if (isErrorResult(result)) {\r\n      let boundaryMatch = findNearestBoundary(state.matches, match == null ? void 0 : match.route.id);\r\n      if (!(errors && errors[boundaryMatch.route.id])) {\r\n        errors = _extends({}, errors, {\r\n          [boundaryMatch.route.id]: result.error\r\n        });\r\n      }\r\n      state.fetchers.delete(key);\r\n    } else if (isRedirectResult(result)) {\r\n      // Should never get here, redirects should get processed above, but we\r\n      // keep this to type narrow to a success result in the else\r\n      invariant(false, \"Unhandled fetcher revalidation redirect\");\r\n    } else if (isDeferredResult(result)) {\r\n      // Should never get here, deferred data should be awaited for fetchers\r\n      // in resolveDeferredResults\r\n      invariant(false, \"Unhandled fetcher deferred data\");\r\n    } else {\r\n      let doneFetcher = getDoneFetcher(result.data);\r\n      state.fetchers.set(key, doneFetcher);\r\n    }\r\n  });\r\n  return {\r\n    loaderData,\r\n    errors\r\n  };\r\n}\r\nfunction mergeLoaderData(loaderData, newLoaderData, matches, errors) {\r\n  let mergedLoaderData = _extends({}, newLoaderData);\r\n  for (let match of matches) {\r\n    let id = match.route.id;\r\n    if (newLoaderData.hasOwnProperty(id)) {\r\n      if (newLoaderData[id] !== undefined) {\r\n        mergedLoaderData[id] = newLoaderData[id];\r\n      }\r\n    } else if (loaderData[id] !== undefined && match.route.loader) {\r\n      // Preserve existing keys not included in newLoaderData and where a loader\r\n      // wasn't removed by HMR\r\n      mergedLoaderData[id] = loaderData[id];\r\n    }\r\n    if (errors && errors.hasOwnProperty(id)) {\r\n      // Don't keep any loader data below the boundary\r\n      break;\r\n    }\r\n  }\r\n  return mergedLoaderData;\r\n}\r\nfunction getActionDataForCommit(pendingActionResult) {\r\n  if (!pendingActionResult) {\r\n    return {};\r\n  }\r\n  return isErrorResult(pendingActionResult[1]) ? {\r\n    // Clear out prior actionData on errors\r\n    actionData: {}\r\n  } : {\r\n    actionData: {\r\n      [pendingActionResult[0]]: pendingActionResult[1].data\r\n    }\r\n  };\r\n}\r\n// Find the nearest error boundary, looking upwards from the leaf route (or the\r\n// route specified by routeId) for the closest ancestor error boundary,\r\n// defaulting to the root match\r\nfunction findNearestBoundary(matches, routeId) {\r\n  let eligibleMatches = routeId ? matches.slice(0, matches.findIndex(m => m.route.id === routeId) + 1) : [...matches];\r\n  return eligibleMatches.reverse().find(m => m.route.hasErrorBoundary === true) || matches[0];\r\n}\r\nfunction getShortCircuitMatches(routes) {\r\n  // Prefer a root layout route if present, otherwise shim in a route object\r\n  let route = routes.length === 1 ? routes[0] : routes.find(r => r.index || !r.path || r.path === \"/\") || {\r\n    id: \"__shim-error-route__\"\r\n  };\r\n  return {\r\n    matches: [{\r\n      params: {},\r\n      pathname: \"\",\r\n      pathnameBase: \"\",\r\n      route\r\n    }],\r\n    route\r\n  };\r\n}\r\nfunction getInternalRouterError(status, _temp5) {\r\n  let {\r\n    pathname,\r\n    routeId,\r\n    method,\r\n    type,\r\n    message\r\n  } = _temp5 === void 0 ? {} : _temp5;\r\n  let statusText = \"Unknown Server Error\";\r\n  let errorMessage = \"Unknown @remix-run/router error\";\r\n  if (status === 400) {\r\n    statusText = \"Bad Request\";\r\n    if (method && pathname && routeId) {\r\n      errorMessage = \"You made a \" + method + \" request to \\\"\" + pathname + \"\\\" but \" + (\"did not provide a `loader` for route \\\"\" + routeId + \"\\\", \") + \"so there is no way to handle the request.\";\r\n    } else if (type === \"defer-action\") {\r\n      errorMessage = \"defer() is not supported in actions\";\r\n    } else if (type === \"invalid-body\") {\r\n      errorMessage = \"Unable to encode submission body\";\r\n    }\r\n  } else if (status === 403) {\r\n    statusText = \"Forbidden\";\r\n    errorMessage = \"Route \\\"\" + routeId + \"\\\" does not match URL \\\"\" + pathname + \"\\\"\";\r\n  } else if (status === 404) {\r\n    statusText = \"Not Found\";\r\n    errorMessage = \"No route matches URL \\\"\" + pathname + \"\\\"\";\r\n  } else if (status === 405) {\r\n    statusText = \"Method Not Allowed\";\r\n    if (method && pathname && routeId) {\r\n      errorMessage = \"You made a \" + method.toUpperCase() + \" request to \\\"\" + pathname + \"\\\" but \" + (\"did not provide an `action` for route \\\"\" + routeId + \"\\\", \") + \"so there is no way to handle the request.\";\r\n    } else if (method) {\r\n      errorMessage = \"Invalid request method \\\"\" + method.toUpperCase() + \"\\\"\";\r\n    }\r\n  }\r\n  return new ErrorResponseImpl(status || 500, statusText, new Error(errorMessage), true);\r\n}\r\n// Find any returned redirect errors, starting from the lowest match\r\nfunction findRedirect(results) {\r\n  let entries = Object.entries(results);\r\n  for (let i = entries.length - 1; i >= 0; i--) {\r\n    let [key, result] = entries[i];\r\n    if (isRedirectResult(result)) {\r\n      return {\r\n        key,\r\n        result\r\n      };\r\n    }\r\n  }\r\n}\r\nfunction stripHashFromPath(path) {\r\n  let parsedPath = typeof path === \"string\" ? parsePath(path) : path;\r\n  return createPath(_extends({}, parsedPath, {\r\n    hash: \"\"\r\n  }));\r\n}\r\nfunction isHashChangeOnly(a, b) {\r\n  if (a.pathname !== b.pathname || a.search !== b.search) {\r\n    return false;\r\n  }\r\n  if (a.hash === \"\") {\r\n    // /page -> /page#hash\r\n    return b.hash !== \"\";\r\n  } else if (a.hash === b.hash) {\r\n    // /page#hash -> /page#hash\r\n    return true;\r\n  } else if (b.hash !== \"\") {\r\n    // /page#hash -> /page#other\r\n    return true;\r\n  }\r\n  // If the hash is removed the browser will re-perform a request to the server\r\n  // /page#hash -> /page\r\n  return false;\r\n}\r\nfunction isDataStrategyResult(result) {\r\n  return result != null && typeof result === \"object\" && \"type\" in result && \"result\" in result && (result.type === ResultType.data || result.type === ResultType.error);\r\n}\r\nfunction isRedirectDataStrategyResultResult(result) {\r\n  return isResponse(result.result) && redirectStatusCodes.has(result.result.status);\r\n}\r\nfunction isDeferredResult(result) {\r\n  return result.type === ResultType.deferred;\r\n}\r\nfunction isErrorResult(result) {\r\n  return result.type === ResultType.error;\r\n}\r\nfunction isRedirectResult(result) {\r\n  return (result && result.type) === ResultType.redirect;\r\n}\r\nfunction isDataWithResponseInit(value) {\r\n  return typeof value === \"object\" && value != null && \"type\" in value && \"data\" in value && \"init\" in value && value.type === \"DataWithResponseInit\";\r\n}\r\nfunction isDeferredData(value) {\r\n  let deferred = value;\r\n  return deferred && typeof deferred === \"object\" && typeof deferred.data === \"object\" && typeof deferred.subscribe === \"function\" && typeof deferred.cancel === \"function\" && typeof deferred.resolveData === \"function\";\r\n}\r\nfunction isResponse(value) {\r\n  return value != null && typeof value.status === \"number\" && typeof value.statusText === \"string\" && typeof value.headers === \"object\" && typeof value.body !== \"undefined\";\r\n}\r\nfunction isRedirectResponse(result) {\r\n  if (!isResponse(result)) {\r\n    return false;\r\n  }\r\n  let status = result.status;\r\n  let location = result.headers.get(\"Location\");\r\n  return status >= 300 && status <= 399 && location != null;\r\n}\r\nfunction isValidMethod(method) {\r\n  return validRequestMethods.has(method.toLowerCase());\r\n}\r\nfunction isMutationMethod(method) {\r\n  return validMutationMethods.has(method.toLowerCase());\r\n}\r\nasync function resolveNavigationDeferredResults(matches, results, signal, currentMatches, currentLoaderData) {\r\n  let entries = Object.entries(results);\r\n  for (let index = 0; index < entries.length; index++) {\r\n    let [routeId, result] = entries[index];\r\n    let match = matches.find(m => (m == null ? void 0 : m.route.id) === routeId);\r\n    // If we don't have a match, then we can have a deferred result to do\r\n    // anything with.  This is for revalidating fetchers where the route was\r\n    // removed during HMR\r\n    if (!match) {\r\n      continue;\r\n    }\r\n    let currentMatch = currentMatches.find(m => m.route.id === match.route.id);\r\n    let isRevalidatingLoader = currentMatch != null && !isNewRouteInstance(currentMatch, match) && (currentLoaderData && currentLoaderData[match.route.id]) !== undefined;\r\n    if (isDeferredResult(result) && isRevalidatingLoader) {\r\n      // Note: we do not have to touch activeDeferreds here since we race them\r\n      // against the signal in resolveDeferredData and they'll get aborted\r\n      // there if needed\r\n      await resolveDeferredData(result, signal, false).then(result => {\r\n        if (result) {\r\n          results[routeId] = result;\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\nasync function resolveFetcherDeferredResults(matches, results, revalidatingFetchers) {\r\n  for (let index = 0; index < revalidatingFetchers.length; index++) {\r\n    let {\r\n      key,\r\n      routeId,\r\n      controller\r\n    } = revalidatingFetchers[index];\r\n    let result = results[key];\r\n    let match = matches.find(m => (m == null ? void 0 : m.route.id) === routeId);\r\n    // If we don't have a match, then we can have a deferred result to do\r\n    // anything with.  This is for revalidating fetchers where the route was\r\n    // removed during HMR\r\n    if (!match) {\r\n      continue;\r\n    }\r\n    if (isDeferredResult(result)) {\r\n      // Note: we do not have to touch activeDeferreds here since we race them\r\n      // against the signal in resolveDeferredData and they'll get aborted\r\n      // there if needed\r\n      invariant(controller, \"Expected an AbortController for revalidating fetcher deferred result\");\r\n      await resolveDeferredData(result, controller.signal, true).then(result => {\r\n        if (result) {\r\n          results[key] = result;\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\nasync function resolveDeferredData(result, signal, unwrap) {\r\n  if (unwrap === void 0) {\r\n    unwrap = false;\r\n  }\r\n  let aborted = await result.deferredData.resolveData(signal);\r\n  if (aborted) {\r\n    return;\r\n  }\r\n  if (unwrap) {\r\n    try {\r\n      return {\r\n        type: ResultType.data,\r\n        data: result.deferredData.unwrappedData\r\n      };\r\n    } catch (e) {\r\n      // Handle any TrackedPromise._error values encountered while unwrapping\r\n      return {\r\n        type: ResultType.error,\r\n        error: e\r\n      };\r\n    }\r\n  }\r\n  return {\r\n    type: ResultType.data,\r\n    data: result.deferredData.data\r\n  };\r\n}\r\nfunction hasNakedIndexQuery(search) {\r\n  return new URLSearchParams(search).getAll(\"index\").some(v => v === \"\");\r\n}\r\nfunction getTargetMatch(matches, location) {\r\n  let search = typeof location === \"string\" ? parsePath(location).search : location.search;\r\n  if (matches[matches.length - 1].route.index && hasNakedIndexQuery(search || \"\")) {\r\n    // Return the leaf index route when index is present\r\n    return matches[matches.length - 1];\r\n  }\r\n  // Otherwise grab the deepest \"path contributing\" match (ignoring index and\r\n  // pathless layout routes)\r\n  let pathMatches = getPathContributingMatches(matches);\r\n  return pathMatches[pathMatches.length - 1];\r\n}\r\nfunction getSubmissionFromNavigation(navigation) {\r\n  let {\r\n    formMethod,\r\n    formAction,\r\n    formEncType,\r\n    text,\r\n    formData,\r\n    json\r\n  } = navigation;\r\n  if (!formMethod || !formAction || !formEncType) {\r\n    return;\r\n  }\r\n  if (text != null) {\r\n    return {\r\n      formMethod,\r\n      formAction,\r\n      formEncType,\r\n      formData: undefined,\r\n      json: undefined,\r\n      text\r\n    };\r\n  } else if (formData != null) {\r\n    return {\r\n      formMethod,\r\n      formAction,\r\n      formEncType,\r\n      formData,\r\n      json: undefined,\r\n      text: undefined\r\n    };\r\n  } else if (json !== undefined) {\r\n    return {\r\n      formMethod,\r\n      formAction,\r\n      formEncType,\r\n      formData: undefined,\r\n      json,\r\n      text: undefined\r\n    };\r\n  }\r\n}\r\nfunction getLoadingNavigation(location, submission) {\r\n  if (submission) {\r\n    let navigation = {\r\n      state: \"loading\",\r\n      location,\r\n      formMethod: submission.formMethod,\r\n      formAction: submission.formAction,\r\n      formEncType: submission.formEncType,\r\n      formData: submission.formData,\r\n      json: submission.json,\r\n      text: submission.text\r\n    };\r\n    return navigation;\r\n  } else {\r\n    let navigation = {\r\n      state: \"loading\",\r\n      location,\r\n      formMethod: undefined,\r\n      formAction: undefined,\r\n      formEncType: undefined,\r\n      formData: undefined,\r\n      json: undefined,\r\n      text: undefined\r\n    };\r\n    return navigation;\r\n  }\r\n}\r\nfunction getSubmittingNavigation(location, submission) {\r\n  let navigation = {\r\n    state: \"submitting\",\r\n    location,\r\n    formMethod: submission.formMethod,\r\n    formAction: submission.formAction,\r\n    formEncType: submission.formEncType,\r\n    formData: submission.formData,\r\n    json: submission.json,\r\n    text: submission.text\r\n  };\r\n  return navigation;\r\n}\r\nfunction getLoadingFetcher(submission, data) {\r\n  if (submission) {\r\n    let fetcher = {\r\n      state: \"loading\",\r\n      formMethod: submission.formMethod,\r\n      formAction: submission.formAction,\r\n      formEncType: submission.formEncType,\r\n      formData: submission.formData,\r\n      json: submission.json,\r\n      text: submission.text,\r\n      data\r\n    };\r\n    return fetcher;\r\n  } else {\r\n    let fetcher = {\r\n      state: \"loading\",\r\n      formMethod: undefined,\r\n      formAction: undefined,\r\n      formEncType: undefined,\r\n      formData: undefined,\r\n      json: undefined,\r\n      text: undefined,\r\n      data\r\n    };\r\n    return fetcher;\r\n  }\r\n}\r\nfunction getSubmittingFetcher(submission, existingFetcher) {\r\n  let fetcher = {\r\n    state: \"submitting\",\r\n    formMethod: submission.formMethod,\r\n    formAction: submission.formAction,\r\n    formEncType: submission.formEncType,\r\n    formData: submission.formData,\r\n    json: submission.json,\r\n    text: submission.text,\r\n    data: existingFetcher ? existingFetcher.data : undefined\r\n  };\r\n  return fetcher;\r\n}\r\nfunction getDoneFetcher(data) {\r\n  let fetcher = {\r\n    state: \"idle\",\r\n    formMethod: undefined,\r\n    formAction: undefined,\r\n    formEncType: undefined,\r\n    formData: undefined,\r\n    json: undefined,\r\n    text: undefined,\r\n    data\r\n  };\r\n  return fetcher;\r\n}\r\nfunction restoreAppliedTransitions(_window, transitions) {\r\n  try {\r\n    let sessionPositions = _window.sessionStorage.getItem(TRANSITIONS_STORAGE_KEY);\r\n    if (sessionPositions) {\r\n      let json = JSON.parse(sessionPositions);\r\n      for (let [k, v] of Object.entries(json || {})) {\r\n        if (v && Array.isArray(v)) {\r\n          transitions.set(k, new Set(v || []));\r\n        }\r\n      }\r\n    }\r\n  } catch (e) {\r\n    // no-op, use default empty object\r\n  }\r\n}\r\nfunction persistAppliedTransitions(_window, transitions) {\r\n  if (transitions.size > 0) {\r\n    let json = {};\r\n    for (let [k, v] of transitions) {\r\n      json[k] = [...v];\r\n    }\r\n    try {\r\n      _window.sessionStorage.setItem(TRANSITIONS_STORAGE_KEY, JSON.stringify(json));\r\n    } catch (error) {\r\n      warning(false, \"Failed to save applied view transitions in sessionStorage (\" + error + \").\");\r\n    }\r\n  }\r\n}\r\n//#endregion\r\n\r\nexport { AbortedDeferredError, Action, IDLE_BLOCKER, IDLE_FETCHER, IDLE_NAVIGATION, UNSAFE_DEFERRED_SYMBOL, DeferredData as UNSAFE_DeferredData, ErrorResponseImpl as UNSAFE_ErrorResponseImpl, convertRouteMatchToUiMatch as UNSAFE_convertRouteMatchToUiMatch, convertRoutesToDataRoutes as UNSAFE_convertRoutesToDataRoutes, decodePath as UNSAFE_decodePath, getResolveToMatches as UNSAFE_getResolveToMatches, invariant as UNSAFE_invariant, warning as UNSAFE_warning, createBrowserHistory, createHashHistory, createMemoryHistory, createPath, createRouter, createStaticHandler, data, defer, generatePath, getStaticContextFromError, getToPathname, isDataWithResponseInit, isDeferredData, isRouteErrorResponse, joinPaths, json, matchPath, matchRoutes, normalizePathname, parsePath, redirect, redirectDocument, replace, resolvePath, resolveTo, stripBasename };\r\n//# sourceMappingURL=router.js.map\r\n","'use strict';\r\n\r\nvar m = require('react-dom');\r\nif (process.env.NODE_ENV === 'production') {\r\n  exports.createRoot = m.createRoot;\r\n  exports.hydrateRoot = m.hydrateRoot;\r\n} else {\r\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\r\n  exports.createRoot = function(c, o) {\r\n    i.usingClientEntryPoint = true;\r\n    try {\r\n      return m.createRoot(c, o);\r\n    } finally {\r\n      i.usingClientEntryPoint = false;\r\n    }\r\n  };\r\n  exports.hydrateRoot = function(c, h, o) {\r\n    i.usingClientEntryPoint = true;\r\n    try {\r\n      return m.hydrateRoot(c, h, o);\r\n    } finally {\r\n      i.usingClientEntryPoint = false;\r\n    }\r\n  };\r\n}\r\n","/**\r\n * React Router v6.30.0\r\n *\r\n * Copyright (c) Remix Software Inc.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE.md file in the root directory of this source tree.\r\n *\r\n * @license MIT\r\n */\r\nimport * as React from 'react';\r\nimport { UNSAFE_invariant, joinPaths, matchPath, UNSAFE_decodePath, UNSAFE_getResolveToMatches, UNSAFE_warning, resolveTo, parsePath, matchRoutes, Action, UNSAFE_convertRouteMatchToUiMatch, stripBasename, IDLE_BLOCKER, isRouteErrorResponse, createMemoryHistory, AbortedDeferredError, createRouter } from '@remix-run/router';\r\nexport { AbortedDeferredError, Action as NavigationType, createPath, defer, generatePath, isRouteErrorResponse, json, matchPath, matchRoutes, parsePath, redirect, redirectDocument, replace, resolvePath } from '@remix-run/router';\r\n\r\nfunction _extends() {\r\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\r\n    for (var i = 1; i < arguments.length; i++) {\r\n      var source = arguments[i];\r\n      for (var key in source) {\r\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\r\n          target[key] = source[key];\r\n        }\r\n      }\r\n    }\r\n    return target;\r\n  };\r\n  return _extends.apply(this, arguments);\r\n}\r\n\r\n// Create react-specific types from the agnostic types in @remix-run/router to\r\n// export from react-router\r\nconst DataRouterContext = /*#__PURE__*/React.createContext(null);\r\nif (process.env.NODE_ENV !== \"production\") {\r\n  DataRouterContext.displayName = \"DataRouter\";\r\n}\r\nconst DataRouterStateContext = /*#__PURE__*/React.createContext(null);\r\nif (process.env.NODE_ENV !== \"production\") {\r\n  DataRouterStateContext.displayName = \"DataRouterState\";\r\n}\r\nconst AwaitContext = /*#__PURE__*/React.createContext(null);\r\nif (process.env.NODE_ENV !== \"production\") {\r\n  AwaitContext.displayName = \"Await\";\r\n}\r\n\r\n/**\r\n * A Navigator is a \"location changer\"; it's how you get to different locations.\r\n *\r\n * Every history instance conforms to the Navigator interface, but the\r\n * distinction is useful primarily when it comes to the low-level `<Router>` API\r\n * where both the location and a navigator must be provided separately in order\r\n * to avoid \"tearing\" that may occur in a suspense-enabled app if the action\r\n * and/or location were to be read directly from the history instance.\r\n */\r\n\r\nconst NavigationContext = /*#__PURE__*/React.createContext(null);\r\nif (process.env.NODE_ENV !== \"production\") {\r\n  NavigationContext.displayName = \"Navigation\";\r\n}\r\nconst LocationContext = /*#__PURE__*/React.createContext(null);\r\nif (process.env.NODE_ENV !== \"production\") {\r\n  LocationContext.displayName = \"Location\";\r\n}\r\nconst RouteContext = /*#__PURE__*/React.createContext({\r\n  outlet: null,\r\n  matches: [],\r\n  isDataRoute: false\r\n});\r\nif (process.env.NODE_ENV !== \"production\") {\r\n  RouteContext.displayName = \"Route\";\r\n}\r\nconst RouteErrorContext = /*#__PURE__*/React.createContext(null);\r\nif (process.env.NODE_ENV !== \"production\") {\r\n  RouteErrorContext.displayName = \"RouteError\";\r\n}\r\n\r\n/**\r\n * Returns the full href for the given \"to\" value. This is useful for building\r\n * custom links that are also accessible and preserve right-click behavior.\r\n *\r\n * @see https://reactrouter.com/v6/hooks/use-href\r\n */\r\nfunction useHref(to, _temp) {\r\n  let {\r\n    relative\r\n  } = _temp === void 0 ? {} : _temp;\r\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\r\n  // router loaded. We can help them understand how to avoid that.\r\n  \"useHref() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\r\n  let {\r\n    basename,\r\n    navigator\r\n  } = React.useContext(NavigationContext);\r\n  let {\r\n    hash,\r\n    pathname,\r\n    search\r\n  } = useResolvedPath(to, {\r\n    relative\r\n  });\r\n  let joinedPathname = pathname;\r\n\r\n  // If we're operating within a basename, prepend it to the pathname prior\r\n  // to creating the href.  If this is a root navigation, then just use the raw\r\n  // basename which allows the basename to have full control over the presence\r\n  // of a trailing slash on root links\r\n  if (basename !== \"/\") {\r\n    joinedPathname = pathname === \"/\" ? basename : joinPaths([basename, pathname]);\r\n  }\r\n  return navigator.createHref({\r\n    pathname: joinedPathname,\r\n    search,\r\n    hash\r\n  });\r\n}\r\n\r\n/**\r\n * Returns true if this component is a descendant of a `<Router>`.\r\n *\r\n * @see https://reactrouter.com/v6/hooks/use-in-router-context\r\n */\r\nfunction useInRouterContext() {\r\n  return React.useContext(LocationContext) != null;\r\n}\r\n\r\n/**\r\n * Returns the current location object, which represents the current URL in web\r\n * browsers.\r\n *\r\n * Note: If you're using this it may mean you're doing some of your own\r\n * \"routing\" in your app, and we'd like to know what your use case is. We may\r\n * be able to provide something higher-level to better suit your needs.\r\n *\r\n * @see https://reactrouter.com/v6/hooks/use-location\r\n */\r\nfunction useLocation() {\r\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\r\n  // router loaded. We can help them understand how to avoid that.\r\n  \"useLocation() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\r\n  return React.useContext(LocationContext).location;\r\n}\r\n\r\n/**\r\n * Returns the current navigation action which describes how the router came to\r\n * the current location, either by a pop, push, or replace on the history stack.\r\n *\r\n * @see https://reactrouter.com/v6/hooks/use-navigation-type\r\n */\r\nfunction useNavigationType() {\r\n  return React.useContext(LocationContext).navigationType;\r\n}\r\n\r\n/**\r\n * Returns a PathMatch object if the given pattern matches the current URL.\r\n * This is useful for components that need to know \"active\" state, e.g.\r\n * `<NavLink>`.\r\n *\r\n * @see https://reactrouter.com/v6/hooks/use-match\r\n */\r\nfunction useMatch(pattern) {\r\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\r\n  // router loaded. We can help them understand how to avoid that.\r\n  \"useMatch() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\r\n  let {\r\n    pathname\r\n  } = useLocation();\r\n  return React.useMemo(() => matchPath(pattern, UNSAFE_decodePath(pathname)), [pathname, pattern]);\r\n}\r\n\r\n/**\r\n * The interface for the navigate() function returned from useNavigate().\r\n */\r\n\r\nconst navigateEffectWarning = \"You should call navigate() in a React.useEffect(), not when \" + \"your component is first rendered.\";\r\n\r\n// Mute warnings for calls to useNavigate in SSR environments\r\nfunction useIsomorphicLayoutEffect(cb) {\r\n  let isStatic = React.useContext(NavigationContext).static;\r\n  if (!isStatic) {\r\n    // We should be able to get rid of this once react 18.3 is released\r\n    // See: https://github.com/facebook/react/pull/26395\r\n    // eslint-disable-next-line react-hooks/rules-of-hooks\r\n    React.useLayoutEffect(cb);\r\n  }\r\n}\r\n\r\n/**\r\n * Returns an imperative method for changing the location. Used by `<Link>`s, but\r\n * may also be used by other elements to change the location.\r\n *\r\n * @see https://reactrouter.com/v6/hooks/use-navigate\r\n */\r\nfunction useNavigate() {\r\n  let {\r\n    isDataRoute\r\n  } = React.useContext(RouteContext);\r\n  // Conditional usage is OK here because the usage of a data router is static\r\n  // eslint-disable-next-line react-hooks/rules-of-hooks\r\n  return isDataRoute ? useNavigateStable() : useNavigateUnstable();\r\n}\r\nfunction useNavigateUnstable() {\r\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\r\n  // router loaded. We can help them understand how to avoid that.\r\n  \"useNavigate() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\r\n  let dataRouterContext = React.useContext(DataRouterContext);\r\n  let {\r\n    basename,\r\n    future,\r\n    navigator\r\n  } = React.useContext(NavigationContext);\r\n  let {\r\n    matches\r\n  } = React.useContext(RouteContext);\r\n  let {\r\n    pathname: locationPathname\r\n  } = useLocation();\r\n  let routePathnamesJson = JSON.stringify(UNSAFE_getResolveToMatches(matches, future.v7_relativeSplatPath));\r\n  let activeRef = React.useRef(false);\r\n  useIsomorphicLayoutEffect(() => {\r\n    activeRef.current = true;\r\n  });\r\n  let navigate = React.useCallback(function (to, options) {\r\n    if (options === void 0) {\r\n      options = {};\r\n    }\r\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(activeRef.current, navigateEffectWarning) : void 0;\r\n\r\n    // Short circuit here since if this happens on first render the navigate\r\n    // is useless because we haven't wired up our history listener yet\r\n    if (!activeRef.current) return;\r\n    if (typeof to === \"number\") {\r\n      navigator.go(to);\r\n      return;\r\n    }\r\n    let path = resolveTo(to, JSON.parse(routePathnamesJson), locationPathname, options.relative === \"path\");\r\n\r\n    // If we're operating within a basename, prepend it to the pathname prior\r\n    // to handing off to history (but only if we're not in a data router,\r\n    // otherwise it'll prepend the basename inside of the router).\r\n    // If this is a root navigation, then we navigate to the raw basename\r\n    // which allows the basename to have full control over the presence of a\r\n    // trailing slash on root links\r\n    if (dataRouterContext == null && basename !== \"/\") {\r\n      path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\r\n    }\r\n    (!!options.replace ? navigator.replace : navigator.push)(path, options.state, options);\r\n  }, [basename, navigator, routePathnamesJson, locationPathname, dataRouterContext]);\r\n  return navigate;\r\n}\r\nconst OutletContext = /*#__PURE__*/React.createContext(null);\r\n\r\n/**\r\n * Returns the context (if provided) for the child route at this level of the route\r\n * hierarchy.\r\n * @see https://reactrouter.com/v6/hooks/use-outlet-context\r\n */\r\nfunction useOutletContext() {\r\n  return React.useContext(OutletContext);\r\n}\r\n\r\n/**\r\n * Returns the element for the child route at this level of the route\r\n * hierarchy. Used internally by `<Outlet>` to render child routes.\r\n *\r\n * @see https://reactrouter.com/v6/hooks/use-outlet\r\n */\r\nfunction useOutlet(context) {\r\n  let outlet = React.useContext(RouteContext).outlet;\r\n  if (outlet) {\r\n    return /*#__PURE__*/React.createElement(OutletContext.Provider, {\r\n      value: context\r\n    }, outlet);\r\n  }\r\n  return outlet;\r\n}\r\n\r\n/**\r\n * Returns an object of key/value pairs of the dynamic params from the current\r\n * URL that were matched by the route path.\r\n *\r\n * @see https://reactrouter.com/v6/hooks/use-params\r\n */\r\nfunction useParams() {\r\n  let {\r\n    matches\r\n  } = React.useContext(RouteContext);\r\n  let routeMatch = matches[matches.length - 1];\r\n  return routeMatch ? routeMatch.params : {};\r\n}\r\n\r\n/**\r\n * Resolves the pathname of the given `to` value against the current location.\r\n *\r\n * @see https://reactrouter.com/v6/hooks/use-resolved-path\r\n */\r\nfunction useResolvedPath(to, _temp2) {\r\n  let {\r\n    relative\r\n  } = _temp2 === void 0 ? {} : _temp2;\r\n  let {\r\n    future\r\n  } = React.useContext(NavigationContext);\r\n  let {\r\n    matches\r\n  } = React.useContext(RouteContext);\r\n  let {\r\n    pathname: locationPathname\r\n  } = useLocation();\r\n  let routePathnamesJson = JSON.stringify(UNSAFE_getResolveToMatches(matches, future.v7_relativeSplatPath));\r\n  return React.useMemo(() => resolveTo(to, JSON.parse(routePathnamesJson), locationPathname, relative === \"path\"), [to, routePathnamesJson, locationPathname, relative]);\r\n}\r\n\r\n/**\r\n * Returns the element of the route that matched the current location, prepared\r\n * with the correct context to render the remainder of the route tree. Route\r\n * elements in the tree must render an `<Outlet>` to render their child route's\r\n * element.\r\n *\r\n * @see https://reactrouter.com/v6/hooks/use-routes\r\n */\r\nfunction useRoutes(routes, locationArg) {\r\n  return useRoutesImpl(routes, locationArg);\r\n}\r\n\r\n// Internal implementation with accept optional param for RouterProvider usage\r\nfunction useRoutesImpl(routes, locationArg, dataRouterState, future) {\r\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\r\n  // router loaded. We can help them understand how to avoid that.\r\n  \"useRoutes() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\r\n  let {\r\n    navigator,\r\n    static: isStatic\r\n  } = React.useContext(NavigationContext);\r\n  let {\r\n    matches: parentMatches\r\n  } = React.useContext(RouteContext);\r\n  let routeMatch = parentMatches[parentMatches.length - 1];\r\n  let parentParams = routeMatch ? routeMatch.params : {};\r\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\r\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\r\n  let parentRoute = routeMatch && routeMatch.route;\r\n  if (process.env.NODE_ENV !== \"production\") {\r\n    // You won't get a warning about 2 different <Routes> under a <Route>\r\n    // without a trailing *, but this is a best-effort warning anyway since we\r\n    // cannot even give the warning unless they land at the parent route.\r\n    //\r\n    // Example:\r\n    //\r\n    // <Routes>\r\n    //   {/* This route path MUST end with /* because otherwise\r\n    //       it will never match /blog/post/123 */}\r\n    //   <Route path=\"blog\" element={<Blog />} />\r\n    //   <Route path=\"blog/feed\" element={<BlogFeed />} />\r\n    // </Routes>\r\n    //\r\n    // function Blog() {\r\n    //   return (\r\n    //     <Routes>\r\n    //       <Route path=\"post/:id\" element={<Post />} />\r\n    //     </Routes>\r\n    //   );\r\n    // }\r\n    let parentPath = parentRoute && parentRoute.path || \"\";\r\n    warningOnce(parentPathname, !parentRoute || parentPath.endsWith(\"*\"), \"You rendered descendant <Routes> (or called `useRoutes()`) at \" + (\"\\\"\" + parentPathname + \"\\\" (under <Route path=\\\"\" + parentPath + \"\\\">) but the \") + \"parent route path has no trailing \\\"*\\\". This means if you navigate \" + \"deeper, the parent won't match anymore and therefore the child \" + \"routes will never render.\\n\\n\" + (\"Please change the parent <Route path=\\\"\" + parentPath + \"\\\"> to <Route \") + (\"path=\\\"\" + (parentPath === \"/\" ? \"*\" : parentPath + \"/*\") + \"\\\">.\"));\r\n  }\r\n  let locationFromContext = useLocation();\r\n  let location;\r\n  if (locationArg) {\r\n    var _parsedLocationArg$pa;\r\n    let parsedLocationArg = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\r\n    !(parentPathnameBase === \"/\" || ((_parsedLocationArg$pa = parsedLocationArg.pathname) == null ? void 0 : _parsedLocationArg$pa.startsWith(parentPathnameBase))) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"When overriding the location using `<Routes location>` or `useRoutes(routes, location)`, \" + \"the location pathname must begin with the portion of the URL pathname that was \" + (\"matched by all parent routes. The current pathname base is \\\"\" + parentPathnameBase + \"\\\" \") + (\"but pathname \\\"\" + parsedLocationArg.pathname + \"\\\" was given in the `location` prop.\")) : UNSAFE_invariant(false) : void 0;\r\n    location = parsedLocationArg;\r\n  } else {\r\n    location = locationFromContext;\r\n  }\r\n  let pathname = location.pathname || \"/\";\r\n  let remainingPathname = pathname;\r\n  if (parentPathnameBase !== \"/\") {\r\n    // Determine the remaining pathname by removing the # of URL segments the\r\n    // parentPathnameBase has, instead of removing based on character count.\r\n    // This is because we can't guarantee that incoming/outgoing encodings/\r\n    // decodings will match exactly.\r\n    // We decode paths before matching on a per-segment basis with\r\n    // decodeURIComponent(), but we re-encode pathnames via `new URL()` so they\r\n    // match what `window.location.pathname` would reflect.  Those don't 100%\r\n    // align when it comes to encoded URI characters such as % and &.\r\n    //\r\n    // So we may end up with:\r\n    //   pathname:           \"/descendant/a%25b/match\"\r\n    //   parentPathnameBase: \"/descendant/a%b\"\r\n    //\r\n    // And the direct substring removal approach won't work :/\r\n    let parentSegments = parentPathnameBase.replace(/^\\//, \"\").split(\"/\");\r\n    let segments = pathname.replace(/^\\//, \"\").split(\"/\");\r\n    remainingPathname = \"/\" + segments.slice(parentSegments.length).join(\"/\");\r\n  }\r\n  let matches = !isStatic && dataRouterState && dataRouterState.matches && dataRouterState.matches.length > 0 ? dataRouterState.matches : matchRoutes(routes, {\r\n    pathname: remainingPathname\r\n  });\r\n  if (process.env.NODE_ENV !== \"production\") {\r\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(parentRoute || matches != null, \"No routes matched location \\\"\" + location.pathname + location.search + location.hash + \"\\\" \") : void 0;\r\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(matches == null || matches[matches.length - 1].route.element !== undefined || matches[matches.length - 1].route.Component !== undefined || matches[matches.length - 1].route.lazy !== undefined, \"Matched leaf route at location \\\"\" + location.pathname + location.search + location.hash + \"\\\" \" + \"does not have an element or Component. This means it will render an <Outlet /> with a \" + \"null value by default resulting in an \\\"empty\\\" page.\") : void 0;\r\n  }\r\n  let renderedMatches = _renderMatches(matches && matches.map(match => Object.assign({}, match, {\r\n    params: Object.assign({}, parentParams, match.params),\r\n    pathname: joinPaths([parentPathnameBase,\r\n    // Re-encode pathnames that were decoded inside matchRoutes\r\n    navigator.encodeLocation ? navigator.encodeLocation(match.pathname).pathname : match.pathname]),\r\n    pathnameBase: match.pathnameBase === \"/\" ? parentPathnameBase : joinPaths([parentPathnameBase,\r\n    // Re-encode pathnames that were decoded inside matchRoutes\r\n    navigator.encodeLocation ? navigator.encodeLocation(match.pathnameBase).pathname : match.pathnameBase])\r\n  })), parentMatches, dataRouterState, future);\r\n\r\n  // When a user passes in a `locationArg`, the associated routes need to\r\n  // be wrapped in a new `LocationContext.Provider` in order for `useLocation`\r\n  // to use the scoped location instead of the global location.\r\n  if (locationArg && renderedMatches) {\r\n    return /*#__PURE__*/React.createElement(LocationContext.Provider, {\r\n      value: {\r\n        location: _extends({\r\n          pathname: \"/\",\r\n          search: \"\",\r\n          hash: \"\",\r\n          state: null,\r\n          key: \"default\"\r\n        }, location),\r\n        navigationType: Action.Pop\r\n      }\r\n    }, renderedMatches);\r\n  }\r\n  return renderedMatches;\r\n}\r\nfunction DefaultErrorComponent() {\r\n  let error = useRouteError();\r\n  let message = isRouteErrorResponse(error) ? error.status + \" \" + error.statusText : error instanceof Error ? error.message : JSON.stringify(error);\r\n  let stack = error instanceof Error ? error.stack : null;\r\n  let lightgrey = \"rgba(200,200,200, 0.5)\";\r\n  let preStyles = {\r\n    padding: \"0.5rem\",\r\n    backgroundColor: lightgrey\r\n  };\r\n  let codeStyles = {\r\n    padding: \"2px 4px\",\r\n    backgroundColor: lightgrey\r\n  };\r\n  let devInfo = null;\r\n  if (process.env.NODE_ENV !== \"production\") {\r\n    console.error(\"Error handled by React Router default ErrorBoundary:\", error);\r\n    devInfo = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", null, \"\\uD83D\\uDCBF Hey developer \\uD83D\\uDC4B\"), /*#__PURE__*/React.createElement(\"p\", null, \"You can provide a way better UX than this when your app throws errors by providing your own \", /*#__PURE__*/React.createElement(\"code\", {\r\n      style: codeStyles\r\n    }, \"ErrorBoundary\"), \" or\", \" \", /*#__PURE__*/React.createElement(\"code\", {\r\n      style: codeStyles\r\n    }, \"errorElement\"), \" prop on your route.\"));\r\n  }\r\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h2\", null, \"Unexpected Application Error!\"), /*#__PURE__*/React.createElement(\"h3\", {\r\n    style: {\r\n      fontStyle: \"italic\"\r\n    }\r\n  }, message), stack ? /*#__PURE__*/React.createElement(\"pre\", {\r\n    style: preStyles\r\n  }, stack) : null, devInfo);\r\n}\r\nconst defaultErrorElement = /*#__PURE__*/React.createElement(DefaultErrorComponent, null);\r\nclass RenderErrorBoundary extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      location: props.location,\r\n      revalidation: props.revalidation,\r\n      error: props.error\r\n    };\r\n  }\r\n  static getDerivedStateFromError(error) {\r\n    return {\r\n      error: error\r\n    };\r\n  }\r\n  static getDerivedStateFromProps(props, state) {\r\n    // When we get into an error state, the user will likely click \"back\" to the\r\n    // previous page that didn't have an error. Because this wraps the entire\r\n    // application, that will have no effect--the error page continues to display.\r\n    // This gives us a mechanism to recover from the error when the location changes.\r\n    //\r\n    // Whether we're in an error state or not, we update the location in state\r\n    // so that when we are in an error state, it gets reset when a new location\r\n    // comes in and the user recovers from the error.\r\n    if (state.location !== props.location || state.revalidation !== \"idle\" && props.revalidation === \"idle\") {\r\n      return {\r\n        error: props.error,\r\n        location: props.location,\r\n        revalidation: props.revalidation\r\n      };\r\n    }\r\n\r\n    // If we're not changing locations, preserve the location but still surface\r\n    // any new errors that may come through. We retain the existing error, we do\r\n    // this because the error provided from the app state may be cleared without\r\n    // the location changing.\r\n    return {\r\n      error: props.error !== undefined ? props.error : state.error,\r\n      location: state.location,\r\n      revalidation: props.revalidation || state.revalidation\r\n    };\r\n  }\r\n  componentDidCatch(error, errorInfo) {\r\n    console.error(\"React Router caught the following error during render\", error, errorInfo);\r\n  }\r\n  render() {\r\n    return this.state.error !== undefined ? /*#__PURE__*/React.createElement(RouteContext.Provider, {\r\n      value: this.props.routeContext\r\n    }, /*#__PURE__*/React.createElement(RouteErrorContext.Provider, {\r\n      value: this.state.error,\r\n      children: this.props.component\r\n    })) : this.props.children;\r\n  }\r\n}\r\nfunction RenderedRoute(_ref) {\r\n  let {\r\n    routeContext,\r\n    match,\r\n    children\r\n  } = _ref;\r\n  let dataRouterContext = React.useContext(DataRouterContext);\r\n\r\n  // Track how deep we got in our render pass to emulate SSR componentDidCatch\r\n  // in a DataStaticRouter\r\n  if (dataRouterContext && dataRouterContext.static && dataRouterContext.staticContext && (match.route.errorElement || match.route.ErrorBoundary)) {\r\n    dataRouterContext.staticContext._deepestRenderedBoundaryId = match.route.id;\r\n  }\r\n  return /*#__PURE__*/React.createElement(RouteContext.Provider, {\r\n    value: routeContext\r\n  }, children);\r\n}\r\nfunction _renderMatches(matches, parentMatches, dataRouterState, future) {\r\n  var _dataRouterState;\r\n  if (parentMatches === void 0) {\r\n    parentMatches = [];\r\n  }\r\n  if (dataRouterState === void 0) {\r\n    dataRouterState = null;\r\n  }\r\n  if (future === void 0) {\r\n    future = null;\r\n  }\r\n  if (matches == null) {\r\n    var _future;\r\n    if (!dataRouterState) {\r\n      return null;\r\n    }\r\n    if (dataRouterState.errors) {\r\n      // Don't bail if we have data router errors so we can render them in the\r\n      // boundary.  Use the pre-matched (or shimmed) matches\r\n      matches = dataRouterState.matches;\r\n    } else if ((_future = future) != null && _future.v7_partialHydration && parentMatches.length === 0 && !dataRouterState.initialized && dataRouterState.matches.length > 0) {\r\n      // Don't bail if we're initializing with partial hydration and we have\r\n      // router matches.  That means we're actively running `patchRoutesOnNavigation`\r\n      // so we should render down the partial matches to the appropriate\r\n      // `HydrateFallback`.  We only do this if `parentMatches` is empty so it\r\n      // only impacts the root matches for `RouterProvider` and no descendant\r\n      // `<Routes>`\r\n      matches = dataRouterState.matches;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n  let renderedMatches = matches;\r\n\r\n  // If we have data errors, trim matches to the highest error boundary\r\n  let errors = (_dataRouterState = dataRouterState) == null ? void 0 : _dataRouterState.errors;\r\n  if (errors != null) {\r\n    let errorIndex = renderedMatches.findIndex(m => m.route.id && (errors == null ? void 0 : errors[m.route.id]) !== undefined);\r\n    !(errorIndex >= 0) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"Could not find a matching route for errors on route IDs: \" + Object.keys(errors).join(\",\")) : UNSAFE_invariant(false) : void 0;\r\n    renderedMatches = renderedMatches.slice(0, Math.min(renderedMatches.length, errorIndex + 1));\r\n  }\r\n\r\n  // If we're in a partial hydration mode, detect if we need to render down to\r\n  // a given HydrateFallback while we load the rest of the hydration data\r\n  let renderFallback = false;\r\n  let fallbackIndex = -1;\r\n  if (dataRouterState && future && future.v7_partialHydration) {\r\n    for (let i = 0; i < renderedMatches.length; i++) {\r\n      let match = renderedMatches[i];\r\n      // Track the deepest fallback up until the first route without data\r\n      if (match.route.HydrateFallback || match.route.hydrateFallbackElement) {\r\n        fallbackIndex = i;\r\n      }\r\n      if (match.route.id) {\r\n        let {\r\n          loaderData,\r\n          errors\r\n        } = dataRouterState;\r\n        let needsToRunLoader = match.route.loader && loaderData[match.route.id] === undefined && (!errors || errors[match.route.id] === undefined);\r\n        if (match.route.lazy || needsToRunLoader) {\r\n          // We found the first route that's not ready to render (waiting on\r\n          // lazy, or has a loader that hasn't run yet).  Flag that we need to\r\n          // render a fallback and render up until the appropriate fallback\r\n          renderFallback = true;\r\n          if (fallbackIndex >= 0) {\r\n            renderedMatches = renderedMatches.slice(0, fallbackIndex + 1);\r\n          } else {\r\n            renderedMatches = [renderedMatches[0]];\r\n          }\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return renderedMatches.reduceRight((outlet, match, index) => {\r\n    // Only data routers handle errors/fallbacks\r\n    let error;\r\n    let shouldRenderHydrateFallback = false;\r\n    let errorElement = null;\r\n    let hydrateFallbackElement = null;\r\n    if (dataRouterState) {\r\n      error = errors && match.route.id ? errors[match.route.id] : undefined;\r\n      errorElement = match.route.errorElement || defaultErrorElement;\r\n      if (renderFallback) {\r\n        if (fallbackIndex < 0 && index === 0) {\r\n          warningOnce(\"route-fallback\", false, \"No `HydrateFallback` element provided to render during initial hydration\");\r\n          shouldRenderHydrateFallback = true;\r\n          hydrateFallbackElement = null;\r\n        } else if (fallbackIndex === index) {\r\n          shouldRenderHydrateFallback = true;\r\n          hydrateFallbackElement = match.route.hydrateFallbackElement || null;\r\n        }\r\n      }\r\n    }\r\n    let matches = parentMatches.concat(renderedMatches.slice(0, index + 1));\r\n    let getChildren = () => {\r\n      let children;\r\n      if (error) {\r\n        children = errorElement;\r\n      } else if (shouldRenderHydrateFallback) {\r\n        children = hydrateFallbackElement;\r\n      } else if (match.route.Component) {\r\n        // Note: This is a de-optimized path since React won't re-use the\r\n        // ReactElement since it's identity changes with each new\r\n        // React.createElement call.  We keep this so folks can use\r\n        // `<Route Component={...}>` in `<Routes>` but generally `Component`\r\n        // usage is only advised in `RouterProvider` when we can convert it to\r\n        // `element` ahead of time.\r\n        children = /*#__PURE__*/React.createElement(match.route.Component, null);\r\n      } else if (match.route.element) {\r\n        children = match.route.element;\r\n      } else {\r\n        children = outlet;\r\n      }\r\n      return /*#__PURE__*/React.createElement(RenderedRoute, {\r\n        match: match,\r\n        routeContext: {\r\n          outlet,\r\n          matches,\r\n          isDataRoute: dataRouterState != null\r\n        },\r\n        children: children\r\n      });\r\n    };\r\n    // Only wrap in an error boundary within data router usages when we have an\r\n    // ErrorBoundary/errorElement on this route.  Otherwise let it bubble up to\r\n    // an ancestor ErrorBoundary/errorElement\r\n    return dataRouterState && (match.route.ErrorBoundary || match.route.errorElement || index === 0) ? /*#__PURE__*/React.createElement(RenderErrorBoundary, {\r\n      location: dataRouterState.location,\r\n      revalidation: dataRouterState.revalidation,\r\n      component: errorElement,\r\n      error: error,\r\n      children: getChildren(),\r\n      routeContext: {\r\n        outlet: null,\r\n        matches,\r\n        isDataRoute: true\r\n      }\r\n    }) : getChildren();\r\n  }, null);\r\n}\r\nvar DataRouterHook = /*#__PURE__*/function (DataRouterHook) {\r\n  DataRouterHook[\"UseBlocker\"] = \"useBlocker\";\r\n  DataRouterHook[\"UseRevalidator\"] = \"useRevalidator\";\r\n  DataRouterHook[\"UseNavigateStable\"] = \"useNavigate\";\r\n  return DataRouterHook;\r\n}(DataRouterHook || {});\r\nvar DataRouterStateHook = /*#__PURE__*/function (DataRouterStateHook) {\r\n  DataRouterStateHook[\"UseBlocker\"] = \"useBlocker\";\r\n  DataRouterStateHook[\"UseLoaderData\"] = \"useLoaderData\";\r\n  DataRouterStateHook[\"UseActionData\"] = \"useActionData\";\r\n  DataRouterStateHook[\"UseRouteError\"] = \"useRouteError\";\r\n  DataRouterStateHook[\"UseNavigation\"] = \"useNavigation\";\r\n  DataRouterStateHook[\"UseRouteLoaderData\"] = \"useRouteLoaderData\";\r\n  DataRouterStateHook[\"UseMatches\"] = \"useMatches\";\r\n  DataRouterStateHook[\"UseRevalidator\"] = \"useRevalidator\";\r\n  DataRouterStateHook[\"UseNavigateStable\"] = \"useNavigate\";\r\n  DataRouterStateHook[\"UseRouteId\"] = \"useRouteId\";\r\n  return DataRouterStateHook;\r\n}(DataRouterStateHook || {});\r\nfunction getDataRouterConsoleError(hookName) {\r\n  return hookName + \" must be used within a data router.  See https://reactrouter.com/v6/routers/picking-a-router.\";\r\n}\r\nfunction useDataRouterContext(hookName) {\r\n  let ctx = React.useContext(DataRouterContext);\r\n  !ctx ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\r\n  return ctx;\r\n}\r\nfunction useDataRouterState(hookName) {\r\n  let state = React.useContext(DataRouterStateContext);\r\n  !state ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\r\n  return state;\r\n}\r\nfunction useRouteContext(hookName) {\r\n  let route = React.useContext(RouteContext);\r\n  !route ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\r\n  return route;\r\n}\r\n\r\n// Internal version with hookName-aware debugging\r\nfunction useCurrentRouteId(hookName) {\r\n  let route = useRouteContext(hookName);\r\n  let thisRoute = route.matches[route.matches.length - 1];\r\n  !thisRoute.route.id ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, hookName + \" can only be used on routes that contain a unique \\\"id\\\"\") : UNSAFE_invariant(false) : void 0;\r\n  return thisRoute.route.id;\r\n}\r\n\r\n/**\r\n * Returns the ID for the nearest contextual route\r\n */\r\nfunction useRouteId() {\r\n  return useCurrentRouteId(DataRouterStateHook.UseRouteId);\r\n}\r\n\r\n/**\r\n * Returns the current navigation, defaulting to an \"idle\" navigation when\r\n * no navigation is in progress\r\n */\r\nfunction useNavigation() {\r\n  let state = useDataRouterState(DataRouterStateHook.UseNavigation);\r\n  return state.navigation;\r\n}\r\n\r\n/**\r\n * Returns a revalidate function for manually triggering revalidation, as well\r\n * as the current state of any manual revalidations\r\n */\r\nfunction useRevalidator() {\r\n  let dataRouterContext = useDataRouterContext(DataRouterHook.UseRevalidator);\r\n  let state = useDataRouterState(DataRouterStateHook.UseRevalidator);\r\n  return React.useMemo(() => ({\r\n    revalidate: dataRouterContext.router.revalidate,\r\n    state: state.revalidation\r\n  }), [dataRouterContext.router.revalidate, state.revalidation]);\r\n}\r\n\r\n/**\r\n * Returns the active route matches, useful for accessing loaderData for\r\n * parent/child routes or the route \"handle\" property\r\n */\r\nfunction useMatches() {\r\n  let {\r\n    matches,\r\n    loaderData\r\n  } = useDataRouterState(DataRouterStateHook.UseMatches);\r\n  return React.useMemo(() => matches.map(m => UNSAFE_convertRouteMatchToUiMatch(m, loaderData)), [matches, loaderData]);\r\n}\r\n\r\n/**\r\n * Returns the loader data for the nearest ancestor Route loader\r\n */\r\nfunction useLoaderData() {\r\n  let state = useDataRouterState(DataRouterStateHook.UseLoaderData);\r\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);\r\n  if (state.errors && state.errors[routeId] != null) {\r\n    console.error(\"You cannot `useLoaderData` in an errorElement (routeId: \" + routeId + \")\");\r\n    return undefined;\r\n  }\r\n  return state.loaderData[routeId];\r\n}\r\n\r\n/**\r\n * Returns the loaderData for the given routeId\r\n */\r\nfunction useRouteLoaderData(routeId) {\r\n  let state = useDataRouterState(DataRouterStateHook.UseRouteLoaderData);\r\n  return state.loaderData[routeId];\r\n}\r\n\r\n/**\r\n * Returns the action data for the nearest ancestor Route action\r\n */\r\nfunction useActionData() {\r\n  let state = useDataRouterState(DataRouterStateHook.UseActionData);\r\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);\r\n  return state.actionData ? state.actionData[routeId] : undefined;\r\n}\r\n\r\n/**\r\n * Returns the nearest ancestor Route error, which could be a loader/action\r\n * error or a render error.  This is intended to be called from your\r\n * ErrorBoundary/errorElement to display a proper error message.\r\n */\r\nfunction useRouteError() {\r\n  var _state$errors;\r\n  let error = React.useContext(RouteErrorContext);\r\n  let state = useDataRouterState(DataRouterStateHook.UseRouteError);\r\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseRouteError);\r\n\r\n  // If this was a render error, we put it in a RouteError context inside\r\n  // of RenderErrorBoundary\r\n  if (error !== undefined) {\r\n    return error;\r\n  }\r\n\r\n  // Otherwise look for errors from our data router state\r\n  return (_state$errors = state.errors) == null ? void 0 : _state$errors[routeId];\r\n}\r\n\r\n/**\r\n * Returns the happy-path data from the nearest ancestor `<Await />` value\r\n */\r\nfunction useAsyncValue() {\r\n  let value = React.useContext(AwaitContext);\r\n  return value == null ? void 0 : value._data;\r\n}\r\n\r\n/**\r\n * Returns the error from the nearest ancestor `<Await />` value\r\n */\r\nfunction useAsyncError() {\r\n  let value = React.useContext(AwaitContext);\r\n  return value == null ? void 0 : value._error;\r\n}\r\nlet blockerId = 0;\r\n\r\n/**\r\n * Allow the application to block navigations within the SPA and present the\r\n * user a confirmation dialog to confirm the navigation.  Mostly used to avoid\r\n * using half-filled form data.  This does not handle hard-reloads or\r\n * cross-origin navigations.\r\n */\r\nfunction useBlocker(shouldBlock) {\r\n  let {\r\n    router,\r\n    basename\r\n  } = useDataRouterContext(DataRouterHook.UseBlocker);\r\n  let state = useDataRouterState(DataRouterStateHook.UseBlocker);\r\n  let [blockerKey, setBlockerKey] = React.useState(\"\");\r\n  let blockerFunction = React.useCallback(arg => {\r\n    if (typeof shouldBlock !== \"function\") {\r\n      return !!shouldBlock;\r\n    }\r\n    if (basename === \"/\") {\r\n      return shouldBlock(arg);\r\n    }\r\n\r\n    // If they provided us a function and we've got an active basename, strip\r\n    // it from the locations we expose to the user to match the behavior of\r\n    // useLocation\r\n    let {\r\n      currentLocation,\r\n      nextLocation,\r\n      historyAction\r\n    } = arg;\r\n    return shouldBlock({\r\n      currentLocation: _extends({}, currentLocation, {\r\n        pathname: stripBasename(currentLocation.pathname, basename) || currentLocation.pathname\r\n      }),\r\n      nextLocation: _extends({}, nextLocation, {\r\n        pathname: stripBasename(nextLocation.pathname, basename) || nextLocation.pathname\r\n      }),\r\n      historyAction\r\n    });\r\n  }, [basename, shouldBlock]);\r\n\r\n  // This effect is in charge of blocker key assignment and deletion (which is\r\n  // tightly coupled to the key)\r\n  React.useEffect(() => {\r\n    let key = String(++blockerId);\r\n    setBlockerKey(key);\r\n    return () => router.deleteBlocker(key);\r\n  }, [router]);\r\n\r\n  // This effect handles assigning the blockerFunction.  This is to handle\r\n  // unstable blocker function identities, and happens only after the prior\r\n  // effect so we don't get an orphaned blockerFunction in the router with a\r\n  // key of \"\".  Until then we just have the IDLE_BLOCKER.\r\n  React.useEffect(() => {\r\n    if (blockerKey !== \"\") {\r\n      router.getBlocker(blockerKey, blockerFunction);\r\n    }\r\n  }, [router, blockerKey, blockerFunction]);\r\n\r\n  // Prefer the blocker from `state` not `router.state` since DataRouterContext\r\n  // is memoized so this ensures we update on blocker state updates\r\n  return blockerKey && state.blockers.has(blockerKey) ? state.blockers.get(blockerKey) : IDLE_BLOCKER;\r\n}\r\n\r\n/**\r\n * Stable version of useNavigate that is used when we are in the context of\r\n * a RouterProvider.\r\n */\r\nfunction useNavigateStable() {\r\n  let {\r\n    router\r\n  } = useDataRouterContext(DataRouterHook.UseNavigateStable);\r\n  let id = useCurrentRouteId(DataRouterStateHook.UseNavigateStable);\r\n  let activeRef = React.useRef(false);\r\n  useIsomorphicLayoutEffect(() => {\r\n    activeRef.current = true;\r\n  });\r\n  let navigate = React.useCallback(function (to, options) {\r\n    if (options === void 0) {\r\n      options = {};\r\n    }\r\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(activeRef.current, navigateEffectWarning) : void 0;\r\n\r\n    // Short circuit here since if this happens on first render the navigate\r\n    // is useless because we haven't wired up our router subscriber yet\r\n    if (!activeRef.current) return;\r\n    if (typeof to === \"number\") {\r\n      router.navigate(to);\r\n    } else {\r\n      router.navigate(to, _extends({\r\n        fromRouteId: id\r\n      }, options));\r\n    }\r\n  }, [router, id]);\r\n  return navigate;\r\n}\r\nconst alreadyWarned$1 = {};\r\nfunction warningOnce(key, cond, message) {\r\n  if (!cond && !alreadyWarned$1[key]) {\r\n    alreadyWarned$1[key] = true;\r\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, message) : void 0;\r\n  }\r\n}\r\n\r\nconst alreadyWarned = {};\r\nfunction warnOnce(key, message) {\r\n  if (process.env.NODE_ENV !== \"production\" && !alreadyWarned[message]) {\r\n    alreadyWarned[message] = true;\r\n    console.warn(message);\r\n  }\r\n}\r\nconst logDeprecation = (flag, msg, link) => warnOnce(flag, \"\\u26A0\\uFE0F React Router Future Flag Warning: \" + msg + \". \" + (\"You can use the `\" + flag + \"` future flag to opt-in early. \") + (\"For more information, see \" + link + \".\"));\r\nfunction logV6DeprecationWarnings(renderFuture, routerFuture) {\r\n  if ((renderFuture == null ? void 0 : renderFuture.v7_startTransition) === undefined) {\r\n    logDeprecation(\"v7_startTransition\", \"React Router will begin wrapping state updates in `React.startTransition` in v7\", \"https://reactrouter.com/v6/upgrading/future#v7_starttransition\");\r\n  }\r\n  if ((renderFuture == null ? void 0 : renderFuture.v7_relativeSplatPath) === undefined && (!routerFuture || !routerFuture.v7_relativeSplatPath)) {\r\n    logDeprecation(\"v7_relativeSplatPath\", \"Relative route resolution within Splat routes is changing in v7\", \"https://reactrouter.com/v6/upgrading/future#v7_relativesplatpath\");\r\n  }\r\n  if (routerFuture) {\r\n    if (routerFuture.v7_fetcherPersist === undefined) {\r\n      logDeprecation(\"v7_fetcherPersist\", \"The persistence behavior of fetchers is changing in v7\", \"https://reactrouter.com/v6/upgrading/future#v7_fetcherpersist\");\r\n    }\r\n    if (routerFuture.v7_normalizeFormMethod === undefined) {\r\n      logDeprecation(\"v7_normalizeFormMethod\", \"Casing of `formMethod` fields is being normalized to uppercase in v7\", \"https://reactrouter.com/v6/upgrading/future#v7_normalizeformmethod\");\r\n    }\r\n    if (routerFuture.v7_partialHydration === undefined) {\r\n      logDeprecation(\"v7_partialHydration\", \"`RouterProvider` hydration behavior is changing in v7\", \"https://reactrouter.com/v6/upgrading/future#v7_partialhydration\");\r\n    }\r\n    if (routerFuture.v7_skipActionErrorRevalidation === undefined) {\r\n      logDeprecation(\"v7_skipActionErrorRevalidation\", \"The revalidation behavior after 4xx/5xx `action` responses is changing in v7\", \"https://reactrouter.com/v6/upgrading/future#v7_skipactionerrorrevalidation\");\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n  Webpack + React 17 fails to compile on any of the following because webpack\r\n  complains that `startTransition` doesn't exist in `React`:\r\n  * import { startTransition } from \"react\"\r\n  * import * as React from from \"react\";\r\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\r\n  * import * as React from from \"react\";\r\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\r\n\r\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\r\n  * import * as React from from \"react\";\r\n    const START_TRANSITION = \"startTransition\";\r\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\r\n\r\n  However, that introduces webpack/terser minification issues in production builds\r\n  in React 18 where minification/obfuscation ends up removing the call of\r\n  React.startTransition entirely from the first half of the ternary.  Grabbing\r\n  this exported reference once up front resolves that issue.\r\n\r\n  See https://github.com/remix-run/react-router/issues/10579\r\n*/\r\nconst START_TRANSITION = \"startTransition\";\r\nconst startTransitionImpl = React[START_TRANSITION];\r\n\r\n/**\r\n * Given a Remix Router instance, render the appropriate UI\r\n */\r\nfunction RouterProvider(_ref) {\r\n  let {\r\n    fallbackElement,\r\n    router,\r\n    future\r\n  } = _ref;\r\n  let [state, setStateImpl] = React.useState(router.state);\r\n  let {\r\n    v7_startTransition\r\n  } = future || {};\r\n  let setState = React.useCallback(newState => {\r\n    if (v7_startTransition && startTransitionImpl) {\r\n      startTransitionImpl(() => setStateImpl(newState));\r\n    } else {\r\n      setStateImpl(newState);\r\n    }\r\n  }, [setStateImpl, v7_startTransition]);\r\n\r\n  // Need to use a layout effect here so we are subscribed early enough to\r\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\r\n  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\r\n  React.useEffect(() => {\r\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(fallbackElement == null || !router.future.v7_partialHydration, \"`<RouterProvider fallbackElement>` is deprecated when using \" + \"`v7_partialHydration`, use a `HydrateFallback` component instead\") : void 0;\r\n    // Only log this once on initial mount\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n  let navigator = React.useMemo(() => {\r\n    return {\r\n      createHref: router.createHref,\r\n      encodeLocation: router.encodeLocation,\r\n      go: n => router.navigate(n),\r\n      push: (to, state, opts) => router.navigate(to, {\r\n        state,\r\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\r\n      }),\r\n      replace: (to, state, opts) => router.navigate(to, {\r\n        replace: true,\r\n        state,\r\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\r\n      })\r\n    };\r\n  }, [router]);\r\n  let basename = router.basename || \"/\";\r\n  let dataRouterContext = React.useMemo(() => ({\r\n    router,\r\n    navigator,\r\n    static: false,\r\n    basename\r\n  }), [router, navigator, basename]);\r\n  React.useEffect(() => logV6DeprecationWarnings(future, router.future), [router, future]);\r\n\r\n  // The fragment and {null} here are important!  We need them to keep React 18's\r\n  // useId happy when we are server-rendering since we may have a <script> here\r\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\r\n  // useId relies on the component tree structure to generate deterministic id's\r\n  // so we need to ensure it remains the same on the client even though\r\n  // we don't need the <script> tag\r\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DataRouterContext.Provider, {\r\n    value: dataRouterContext\r\n  }, /*#__PURE__*/React.createElement(DataRouterStateContext.Provider, {\r\n    value: state\r\n  }, /*#__PURE__*/React.createElement(Router, {\r\n    basename: basename,\r\n    location: state.location,\r\n    navigationType: state.historyAction,\r\n    navigator: navigator,\r\n    future: {\r\n      v7_relativeSplatPath: router.future.v7_relativeSplatPath\r\n    }\r\n  }, state.initialized || router.future.v7_partialHydration ? /*#__PURE__*/React.createElement(DataRoutes, {\r\n    routes: router.routes,\r\n    future: router.future,\r\n    state: state\r\n  }) : fallbackElement))), null);\r\n}\r\nfunction DataRoutes(_ref2) {\r\n  let {\r\n    routes,\r\n    future,\r\n    state\r\n  } = _ref2;\r\n  return useRoutesImpl(routes, undefined, state, future);\r\n}\r\n/**\r\n * A `<Router>` that stores all entries in memory.\r\n *\r\n * @see https://reactrouter.com/v6/router-components/memory-router\r\n */\r\nfunction MemoryRouter(_ref3) {\r\n  let {\r\n    basename,\r\n    children,\r\n    initialEntries,\r\n    initialIndex,\r\n    future\r\n  } = _ref3;\r\n  let historyRef = React.useRef();\r\n  if (historyRef.current == null) {\r\n    historyRef.current = createMemoryHistory({\r\n      initialEntries,\r\n      initialIndex,\r\n      v5Compat: true\r\n    });\r\n  }\r\n  let history = historyRef.current;\r\n  let [state, setStateImpl] = React.useState({\r\n    action: history.action,\r\n    location: history.location\r\n  });\r\n  let {\r\n    v7_startTransition\r\n  } = future || {};\r\n  let setState = React.useCallback(newState => {\r\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\r\n  }, [setStateImpl, v7_startTransition]);\r\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\r\n  React.useEffect(() => logV6DeprecationWarnings(future), [future]);\r\n  return /*#__PURE__*/React.createElement(Router, {\r\n    basename: basename,\r\n    children: children,\r\n    location: state.location,\r\n    navigationType: state.action,\r\n    navigator: history,\r\n    future: future\r\n  });\r\n}\r\n/**\r\n * Changes the current location.\r\n *\r\n * Note: This API is mostly useful in React.Component subclasses that are not\r\n * able to use hooks. In functional components, we recommend you use the\r\n * `useNavigate` hook instead.\r\n *\r\n * @see https://reactrouter.com/v6/components/navigate\r\n */\r\nfunction Navigate(_ref4) {\r\n  let {\r\n    to,\r\n    replace,\r\n    state,\r\n    relative\r\n  } = _ref4;\r\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of\r\n  // the router loaded. We can help them understand how to avoid that.\r\n  \"<Navigate> may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\r\n  let {\r\n    future,\r\n    static: isStatic\r\n  } = React.useContext(NavigationContext);\r\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(!isStatic, \"<Navigate> must not be used on the initial render in a <StaticRouter>. \" + \"This is a no-op, but you should modify your code so the <Navigate> is \" + \"only ever rendered in response to some user interaction or state change.\") : void 0;\r\n  let {\r\n    matches\r\n  } = React.useContext(RouteContext);\r\n  let {\r\n    pathname: locationPathname\r\n  } = useLocation();\r\n  let navigate = useNavigate();\r\n\r\n  // Resolve the path outside of the effect so that when effects run twice in\r\n  // StrictMode they navigate to the same place\r\n  let path = resolveTo(to, UNSAFE_getResolveToMatches(matches, future.v7_relativeSplatPath), locationPathname, relative === \"path\");\r\n  let jsonPath = JSON.stringify(path);\r\n  React.useEffect(() => navigate(JSON.parse(jsonPath), {\r\n    replace,\r\n    state,\r\n    relative\r\n  }), [navigate, jsonPath, relative, replace, state]);\r\n  return null;\r\n}\r\n/**\r\n * Renders the child route's element, if there is one.\r\n *\r\n * @see https://reactrouter.com/v6/components/outlet\r\n */\r\nfunction Outlet(props) {\r\n  return useOutlet(props.context);\r\n}\r\n/**\r\n * Declares an element that should be rendered at a certain URL path.\r\n *\r\n * @see https://reactrouter.com/v6/components/route\r\n */\r\nfunction Route(_props) {\r\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"A <Route> is only ever to be used as the child of <Routes> element, \" + \"never rendered directly. Please wrap your <Route> in a <Routes>.\") : UNSAFE_invariant(false) ;\r\n}\r\n/**\r\n * Provides location context for the rest of the app.\r\n *\r\n * Note: You usually won't render a `<Router>` directly. Instead, you'll render a\r\n * router that is more specific to your environment such as a `<BrowserRouter>`\r\n * in web browsers or a `<StaticRouter>` for server rendering.\r\n *\r\n * @see https://reactrouter.com/v6/router-components/router\r\n */\r\nfunction Router(_ref5) {\r\n  let {\r\n    basename: basenameProp = \"/\",\r\n    children = null,\r\n    location: locationProp,\r\n    navigationType = Action.Pop,\r\n    navigator,\r\n    static: staticProp = false,\r\n    future\r\n  } = _ref5;\r\n  !!useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"You cannot render a <Router> inside another <Router>.\" + \" You should never have more than one in your app.\") : UNSAFE_invariant(false) : void 0;\r\n\r\n  // Preserve trailing slashes on basename, so we can let the user control\r\n  // the enforcement of trailing slashes throughout the app\r\n  let basename = basenameProp.replace(/^\\/*/, \"/\");\r\n  let navigationContext = React.useMemo(() => ({\r\n    basename,\r\n    navigator,\r\n    static: staticProp,\r\n    future: _extends({\r\n      v7_relativeSplatPath: false\r\n    }, future)\r\n  }), [basename, future, navigator, staticProp]);\r\n  if (typeof locationProp === \"string\") {\r\n    locationProp = parsePath(locationProp);\r\n  }\r\n  let {\r\n    pathname = \"/\",\r\n    search = \"\",\r\n    hash = \"\",\r\n    state = null,\r\n    key = \"default\"\r\n  } = locationProp;\r\n  let locationContext = React.useMemo(() => {\r\n    let trailingPathname = stripBasename(pathname, basename);\r\n    if (trailingPathname == null) {\r\n      return null;\r\n    }\r\n    return {\r\n      location: {\r\n        pathname: trailingPathname,\r\n        search,\r\n        hash,\r\n        state,\r\n        key\r\n      },\r\n      navigationType\r\n    };\r\n  }, [basename, pathname, search, hash, state, key, navigationType]);\r\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(locationContext != null, \"<Router basename=\\\"\" + basename + \"\\\"> is not able to match the URL \" + (\"\\\"\" + pathname + search + hash + \"\\\" because it does not start with the \") + \"basename, so the <Router> won't render anything.\") : void 0;\r\n  if (locationContext == null) {\r\n    return null;\r\n  }\r\n  return /*#__PURE__*/React.createElement(NavigationContext.Provider, {\r\n    value: navigationContext\r\n  }, /*#__PURE__*/React.createElement(LocationContext.Provider, {\r\n    children: children,\r\n    value: locationContext\r\n  }));\r\n}\r\n/**\r\n * A container for a nested tree of `<Route>` elements that renders the branch\r\n * that best matches the current location.\r\n *\r\n * @see https://reactrouter.com/v6/components/routes\r\n */\r\nfunction Routes(_ref6) {\r\n  let {\r\n    children,\r\n    location\r\n  } = _ref6;\r\n  return useRoutes(createRoutesFromChildren(children), location);\r\n}\r\n/**\r\n * Component to use for rendering lazily loaded data from returning defer()\r\n * in a loader function\r\n */\r\nfunction Await(_ref7) {\r\n  let {\r\n    children,\r\n    errorElement,\r\n    resolve\r\n  } = _ref7;\r\n  return /*#__PURE__*/React.createElement(AwaitErrorBoundary, {\r\n    resolve: resolve,\r\n    errorElement: errorElement\r\n  }, /*#__PURE__*/React.createElement(ResolveAwait, null, children));\r\n}\r\nvar AwaitRenderStatus = /*#__PURE__*/function (AwaitRenderStatus) {\r\n  AwaitRenderStatus[AwaitRenderStatus[\"pending\"] = 0] = \"pending\";\r\n  AwaitRenderStatus[AwaitRenderStatus[\"success\"] = 1] = \"success\";\r\n  AwaitRenderStatus[AwaitRenderStatus[\"error\"] = 2] = \"error\";\r\n  return AwaitRenderStatus;\r\n}(AwaitRenderStatus || {});\r\nconst neverSettledPromise = new Promise(() => {});\r\nclass AwaitErrorBoundary extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      error: null\r\n    };\r\n  }\r\n  static getDerivedStateFromError(error) {\r\n    return {\r\n      error\r\n    };\r\n  }\r\n  componentDidCatch(error, errorInfo) {\r\n    console.error(\"<Await> caught the following error during render\", error, errorInfo);\r\n  }\r\n  render() {\r\n    let {\r\n      children,\r\n      errorElement,\r\n      resolve\r\n    } = this.props;\r\n    let promise = null;\r\n    let status = AwaitRenderStatus.pending;\r\n    if (!(resolve instanceof Promise)) {\r\n      // Didn't get a promise - provide as a resolved promise\r\n      status = AwaitRenderStatus.success;\r\n      promise = Promise.resolve();\r\n      Object.defineProperty(promise, \"_tracked\", {\r\n        get: () => true\r\n      });\r\n      Object.defineProperty(promise, \"_data\", {\r\n        get: () => resolve\r\n      });\r\n    } else if (this.state.error) {\r\n      // Caught a render error, provide it as a rejected promise\r\n      status = AwaitRenderStatus.error;\r\n      let renderError = this.state.error;\r\n      promise = Promise.reject().catch(() => {}); // Avoid unhandled rejection warnings\r\n      Object.defineProperty(promise, \"_tracked\", {\r\n        get: () => true\r\n      });\r\n      Object.defineProperty(promise, \"_error\", {\r\n        get: () => renderError\r\n      });\r\n    } else if (resolve._tracked) {\r\n      // Already tracked promise - check contents\r\n      promise = resolve;\r\n      status = \"_error\" in promise ? AwaitRenderStatus.error : \"_data\" in promise ? AwaitRenderStatus.success : AwaitRenderStatus.pending;\r\n    } else {\r\n      // Raw (untracked) promise - track it\r\n      status = AwaitRenderStatus.pending;\r\n      Object.defineProperty(resolve, \"_tracked\", {\r\n        get: () => true\r\n      });\r\n      promise = resolve.then(data => Object.defineProperty(resolve, \"_data\", {\r\n        get: () => data\r\n      }), error => Object.defineProperty(resolve, \"_error\", {\r\n        get: () => error\r\n      }));\r\n    }\r\n    if (status === AwaitRenderStatus.error && promise._error instanceof AbortedDeferredError) {\r\n      // Freeze the UI by throwing a never resolved promise\r\n      throw neverSettledPromise;\r\n    }\r\n    if (status === AwaitRenderStatus.error && !errorElement) {\r\n      // No errorElement, throw to the nearest route-level error boundary\r\n      throw promise._error;\r\n    }\r\n    if (status === AwaitRenderStatus.error) {\r\n      // Render via our errorElement\r\n      return /*#__PURE__*/React.createElement(AwaitContext.Provider, {\r\n        value: promise,\r\n        children: errorElement\r\n      });\r\n    }\r\n    if (status === AwaitRenderStatus.success) {\r\n      // Render children with resolved value\r\n      return /*#__PURE__*/React.createElement(AwaitContext.Provider, {\r\n        value: promise,\r\n        children: children\r\n      });\r\n    }\r\n\r\n    // Throw to the suspense boundary\r\n    throw promise;\r\n  }\r\n}\r\n\r\n/**\r\n * @private\r\n * Indirection to leverage useAsyncValue for a render-prop API on `<Await>`\r\n */\r\nfunction ResolveAwait(_ref8) {\r\n  let {\r\n    children\r\n  } = _ref8;\r\n  let data = useAsyncValue();\r\n  let toRender = typeof children === \"function\" ? children(data) : children;\r\n  return /*#__PURE__*/React.createElement(React.Fragment, null, toRender);\r\n}\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n// UTILS\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\n/**\r\n * Creates a route config from a React \"children\" object, which is usually\r\n * either a `<Route>` element or an array of them. Used internally by\r\n * `<Routes>` to create a route config from its children.\r\n *\r\n * @see https://reactrouter.com/v6/utils/create-routes-from-children\r\n */\r\nfunction createRoutesFromChildren(children, parentPath) {\r\n  if (parentPath === void 0) {\r\n    parentPath = [];\r\n  }\r\n  let routes = [];\r\n  React.Children.forEach(children, (element, index) => {\r\n    if (! /*#__PURE__*/React.isValidElement(element)) {\r\n      // Ignore non-elements. This allows people to more easily inline\r\n      // conditionals in their route config.\r\n      return;\r\n    }\r\n    let treePath = [...parentPath, index];\r\n    if (element.type === React.Fragment) {\r\n      // Transparently support React.Fragment and its children.\r\n      routes.push.apply(routes, createRoutesFromChildren(element.props.children, treePath));\r\n      return;\r\n    }\r\n    !(element.type === Route) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"[\" + (typeof element.type === \"string\" ? element.type : element.type.name) + \"] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>\") : UNSAFE_invariant(false) : void 0;\r\n    !(!element.props.index || !element.props.children) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"An index route cannot have child routes.\") : UNSAFE_invariant(false) : void 0;\r\n    let route = {\r\n      id: element.props.id || treePath.join(\"-\"),\r\n      caseSensitive: element.props.caseSensitive,\r\n      element: element.props.element,\r\n      Component: element.props.Component,\r\n      index: element.props.index,\r\n      path: element.props.path,\r\n      loader: element.props.loader,\r\n      action: element.props.action,\r\n      errorElement: element.props.errorElement,\r\n      ErrorBoundary: element.props.ErrorBoundary,\r\n      hasErrorBoundary: element.props.ErrorBoundary != null || element.props.errorElement != null,\r\n      shouldRevalidate: element.props.shouldRevalidate,\r\n      handle: element.props.handle,\r\n      lazy: element.props.lazy\r\n    };\r\n    if (element.props.children) {\r\n      route.children = createRoutesFromChildren(element.props.children, treePath);\r\n    }\r\n    routes.push(route);\r\n  });\r\n  return routes;\r\n}\r\n\r\n/**\r\n * Renders the result of `matchRoutes()` into a React element.\r\n */\r\nfunction renderMatches(matches) {\r\n  return _renderMatches(matches);\r\n}\r\n\r\nfunction mapRouteProperties(route) {\r\n  let updates = {\r\n    // Note: this check also occurs in createRoutesFromChildren so update\r\n    // there if you change this -- please and thank you!\r\n    hasErrorBoundary: route.ErrorBoundary != null || route.errorElement != null\r\n  };\r\n  if (route.Component) {\r\n    if (process.env.NODE_ENV !== \"production\") {\r\n      if (route.element) {\r\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"You should not include both `Component` and `element` on your route - \" + \"`Component` will be used.\") : void 0;\r\n      }\r\n    }\r\n    Object.assign(updates, {\r\n      element: /*#__PURE__*/React.createElement(route.Component),\r\n      Component: undefined\r\n    });\r\n  }\r\n  if (route.HydrateFallback) {\r\n    if (process.env.NODE_ENV !== \"production\") {\r\n      if (route.hydrateFallbackElement) {\r\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"You should not include both `HydrateFallback` and `hydrateFallbackElement` on your route - \" + \"`HydrateFallback` will be used.\") : void 0;\r\n      }\r\n    }\r\n    Object.assign(updates, {\r\n      hydrateFallbackElement: /*#__PURE__*/React.createElement(route.HydrateFallback),\r\n      HydrateFallback: undefined\r\n    });\r\n  }\r\n  if (route.ErrorBoundary) {\r\n    if (process.env.NODE_ENV !== \"production\") {\r\n      if (route.errorElement) {\r\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"You should not include both `ErrorBoundary` and `errorElement` on your route - \" + \"`ErrorBoundary` will be used.\") : void 0;\r\n      }\r\n    }\r\n    Object.assign(updates, {\r\n      errorElement: /*#__PURE__*/React.createElement(route.ErrorBoundary),\r\n      ErrorBoundary: undefined\r\n    });\r\n  }\r\n  return updates;\r\n}\r\nfunction createMemoryRouter(routes, opts) {\r\n  return createRouter({\r\n    basename: opts == null ? void 0 : opts.basename,\r\n    future: _extends({}, opts == null ? void 0 : opts.future, {\r\n      v7_prependBasename: true\r\n    }),\r\n    history: createMemoryHistory({\r\n      initialEntries: opts == null ? void 0 : opts.initialEntries,\r\n      initialIndex: opts == null ? void 0 : opts.initialIndex\r\n    }),\r\n    hydrationData: opts == null ? void 0 : opts.hydrationData,\r\n    routes,\r\n    mapRouteProperties,\r\n    dataStrategy: opts == null ? void 0 : opts.dataStrategy,\r\n    patchRoutesOnNavigation: opts == null ? void 0 : opts.patchRoutesOnNavigation\r\n  }).initialize();\r\n}\r\n\r\nexport { Await, MemoryRouter, Navigate, Outlet, Route, Router, RouterProvider, Routes, DataRouterContext as UNSAFE_DataRouterContext, DataRouterStateContext as UNSAFE_DataRouterStateContext, LocationContext as UNSAFE_LocationContext, NavigationContext as UNSAFE_NavigationContext, RouteContext as UNSAFE_RouteContext, logV6DeprecationWarnings as UNSAFE_logV6DeprecationWarnings, mapRouteProperties as UNSAFE_mapRouteProperties, useRouteId as UNSAFE_useRouteId, useRoutesImpl as UNSAFE_useRoutesImpl, createMemoryRouter, createRoutesFromChildren, createRoutesFromChildren as createRoutesFromElements, renderMatches, useActionData, useAsyncError, useAsyncValue, useBlocker, useHref, useInRouterContext, useLoaderData, useLocation, useMatch, useMatches, useNavigate, useNavigation, useNavigationType, useOutlet, useOutletContext, useParams, useResolvedPath, useRevalidator, useRouteError, useRouteLoaderData, useRoutes };\r\n//# sourceMappingURL=index.js.map\r\n","/**\r\n * React Router DOM v6.30.0\r\n *\r\n * Copyright (c) Remix Software Inc.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE.md file in the root directory of this source tree.\r\n *\r\n * @license MIT\r\n */\r\nimport * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport { UNSAFE_mapRouteProperties, UNSAFE_logV6DeprecationWarnings, UNSAFE_DataRouterContext, UNSAFE_DataRouterStateContext, Router, UNSAFE_useRoutesImpl, UNSAFE_NavigationContext, useHref, useResolvedPath, useLocation, useNavigate, createPath, UNSAFE_useRouteId, UNSAFE_RouteContext, useMatches, useNavigation, useBlocker } from 'react-router';\r\nexport { AbortedDeferredError, Await, MemoryRouter, Navigate, NavigationType, Outlet, Route, Router, Routes, UNSAFE_DataRouterContext, UNSAFE_DataRouterStateContext, UNSAFE_LocationContext, UNSAFE_NavigationContext, UNSAFE_RouteContext, UNSAFE_useRouteId, createMemoryRouter, createPath, createRoutesFromChildren, createRoutesFromElements, defer, generatePath, isRouteErrorResponse, json, matchPath, matchRoutes, parsePath, redirect, redirectDocument, renderMatches, replace, resolvePath, useActionData, useAsyncError, useAsyncValue, useBlocker, useHref, useInRouterContext, useLoaderData, useLocation, useMatch, useMatches, useNavigate, useNavigation, useNavigationType, useOutlet, useOutletContext, useParams, useResolvedPath, useRevalidator, useRouteError, useRouteLoaderData, useRoutes } from 'react-router';\r\nimport { stripBasename, UNSAFE_warning, createRouter, createBrowserHistory, createHashHistory, UNSAFE_ErrorResponseImpl, UNSAFE_invariant, joinPaths, IDLE_FETCHER, matchPath } from '@remix-run/router';\r\nexport { UNSAFE_ErrorResponseImpl } from '@remix-run/router';\r\n\r\nfunction _extends() {\r\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\r\n    for (var i = 1; i < arguments.length; i++) {\r\n      var source = arguments[i];\r\n      for (var key in source) {\r\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\r\n          target[key] = source[key];\r\n        }\r\n      }\r\n    }\r\n    return target;\r\n  };\r\n  return _extends.apply(this, arguments);\r\n}\r\nfunction _objectWithoutPropertiesLoose(source, excluded) {\r\n  if (source == null) return {};\r\n  var target = {};\r\n  var sourceKeys = Object.keys(source);\r\n  var key, i;\r\n  for (i = 0; i < sourceKeys.length; i++) {\r\n    key = sourceKeys[i];\r\n    if (excluded.indexOf(key) >= 0) continue;\r\n    target[key] = source[key];\r\n  }\r\n  return target;\r\n}\r\n\r\nconst defaultMethod = \"get\";\r\nconst defaultEncType = \"application/x-www-form-urlencoded\";\r\nfunction isHtmlElement(object) {\r\n  return object != null && typeof object.tagName === \"string\";\r\n}\r\nfunction isButtonElement(object) {\r\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\r\n}\r\nfunction isFormElement(object) {\r\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\r\n}\r\nfunction isInputElement(object) {\r\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\r\n}\r\nfunction isModifiedEvent(event) {\r\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\r\n}\r\nfunction shouldProcessLinkClick(event, target) {\r\n  return event.button === 0 && (\r\n  // Ignore everything but left clicks\r\n  !target || target === \"_self\") &&\r\n  // Let browser handle \"target=_blank\" etc.\r\n  !isModifiedEvent(event) // Ignore clicks with modifier keys\r\n  ;\r\n}\r\n/**\r\n * Creates a URLSearchParams object using the given initializer.\r\n *\r\n * This is identical to `new URLSearchParams(init)` except it also\r\n * supports arrays as values in the object form of the initializer\r\n * instead of just strings. This is convenient when you need multiple\r\n * values for a given key, but don't want to use an array initializer.\r\n *\r\n * For example, instead of:\r\n *\r\n *   let searchParams = new URLSearchParams([\r\n *     ['sort', 'name'],\r\n *     ['sort', 'price']\r\n *   ]);\r\n *\r\n * you can do:\r\n *\r\n *   let searchParams = createSearchParams({\r\n *     sort: ['name', 'price']\r\n *   });\r\n */\r\nfunction createSearchParams(init) {\r\n  if (init === void 0) {\r\n    init = \"\";\r\n  }\r\n  return new URLSearchParams(typeof init === \"string\" || Array.isArray(init) || init instanceof URLSearchParams ? init : Object.keys(init).reduce((memo, key) => {\r\n    let value = init[key];\r\n    return memo.concat(Array.isArray(value) ? value.map(v => [key, v]) : [[key, value]]);\r\n  }, []));\r\n}\r\nfunction getSearchParamsForLocation(locationSearch, defaultSearchParams) {\r\n  let searchParams = createSearchParams(locationSearch);\r\n  if (defaultSearchParams) {\r\n    // Use `defaultSearchParams.forEach(...)` here instead of iterating of\r\n    // `defaultSearchParams.keys()` to work-around a bug in Firefox related to\r\n    // web extensions. Relevant Bugzilla tickets:\r\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1414602\r\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1023984\r\n    defaultSearchParams.forEach((_, key) => {\r\n      if (!searchParams.has(key)) {\r\n        defaultSearchParams.getAll(key).forEach(value => {\r\n          searchParams.append(key, value);\r\n        });\r\n      }\r\n    });\r\n  }\r\n  return searchParams;\r\n}\r\n// One-time check for submitter support\r\nlet _formDataSupportsSubmitter = null;\r\nfunction isFormDataSubmitterSupported() {\r\n  if (_formDataSupportsSubmitter === null) {\r\n    try {\r\n      new FormData(document.createElement(\"form\"),\r\n      // @ts-expect-error if FormData supports the submitter parameter, this will throw\r\n      0);\r\n      _formDataSupportsSubmitter = false;\r\n    } catch (e) {\r\n      _formDataSupportsSubmitter = true;\r\n    }\r\n  }\r\n  return _formDataSupportsSubmitter;\r\n}\r\nconst supportedFormEncTypes = new Set([\"application/x-www-form-urlencoded\", \"multipart/form-data\", \"text/plain\"]);\r\nfunction getFormEncType(encType) {\r\n  if (encType != null && !supportedFormEncTypes.has(encType)) {\r\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"\\\"\" + encType + \"\\\" is not a valid `encType` for `<Form>`/`<fetcher.Form>` \" + (\"and will default to \\\"\" + defaultEncType + \"\\\"\")) : void 0;\r\n    return null;\r\n  }\r\n  return encType;\r\n}\r\nfunction getFormSubmissionInfo(target, basename) {\r\n  let method;\r\n  let action;\r\n  let encType;\r\n  let formData;\r\n  let body;\r\n  if (isFormElement(target)) {\r\n    // When grabbing the action from the element, it will have had the basename\r\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\r\n    // re-prefix in the router\r\n    let attr = target.getAttribute(\"action\");\r\n    action = attr ? stripBasename(attr, basename) : null;\r\n    method = target.getAttribute(\"method\") || defaultMethod;\r\n    encType = getFormEncType(target.getAttribute(\"enctype\")) || defaultEncType;\r\n    formData = new FormData(target);\r\n  } else if (isButtonElement(target) || isInputElement(target) && (target.type === \"submit\" || target.type === \"image\")) {\r\n    let form = target.form;\r\n    if (form == null) {\r\n      throw new Error(\"Cannot submit a <button> or <input type=\\\"submit\\\"> without a <form>\");\r\n    }\r\n    // <button>/<input type=\"submit\"> may override attributes of <form>\r\n    // When grabbing the action from the element, it will have had the basename\r\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\r\n    // re-prefix in the router\r\n    let attr = target.getAttribute(\"formaction\") || form.getAttribute(\"action\");\r\n    action = attr ? stripBasename(attr, basename) : null;\r\n    method = target.getAttribute(\"formmethod\") || form.getAttribute(\"method\") || defaultMethod;\r\n    encType = getFormEncType(target.getAttribute(\"formenctype\")) || getFormEncType(form.getAttribute(\"enctype\")) || defaultEncType;\r\n    // Build a FormData object populated from a form and submitter\r\n    formData = new FormData(form, target);\r\n    // If this browser doesn't support the `FormData(el, submitter)` format,\r\n    // then tack on the submitter value at the end.  This is a lightweight\r\n    // solution that is not 100% spec compliant.  For complete support in older\r\n    // browsers, consider using the `formdata-submitter-polyfill` package\r\n    if (!isFormDataSubmitterSupported()) {\r\n      let {\r\n        name,\r\n        type,\r\n        value\r\n      } = target;\r\n      if (type === \"image\") {\r\n        let prefix = name ? name + \".\" : \"\";\r\n        formData.append(prefix + \"x\", \"0\");\r\n        formData.append(prefix + \"y\", \"0\");\r\n      } else if (name) {\r\n        formData.append(name, value);\r\n      }\r\n    }\r\n  } else if (isHtmlElement(target)) {\r\n    throw new Error(\"Cannot submit element that is not <form>, <button>, or \" + \"<input type=\\\"submit|image\\\">\");\r\n  } else {\r\n    method = defaultMethod;\r\n    action = null;\r\n    encType = defaultEncType;\r\n    body = target;\r\n  }\r\n  // Send body for <Form encType=\"text/plain\" so we encode it into text\r\n  if (formData && encType === \"text/plain\") {\r\n    body = formData;\r\n    formData = undefined;\r\n  }\r\n  return {\r\n    action,\r\n    method: method.toLowerCase(),\r\n    encType,\r\n    formData,\r\n    body\r\n  };\r\n}\r\n\r\nconst _excluded = [\"onClick\", \"relative\", \"reloadDocument\", \"replace\", \"state\", \"target\", \"to\", \"preventScrollReset\", \"viewTransition\"],\r\n  _excluded2 = [\"aria-current\", \"caseSensitive\", \"className\", \"end\", \"style\", \"to\", \"viewTransition\", \"children\"],\r\n  _excluded3 = [\"fetcherKey\", \"navigate\", \"reloadDocument\", \"replace\", \"state\", \"method\", \"action\", \"onSubmit\", \"relative\", \"preventScrollReset\", \"viewTransition\"];\r\n// HEY YOU! DON'T TOUCH THIS VARIABLE!\r\n//\r\n// It is replaced with the proper version at build time via a babel plugin in\r\n// the rollup config.\r\n//\r\n// Export a global property onto the window for React Router detection by the\r\n// Core Web Vitals Technology Report.  This way they can configure the `wappalyzer`\r\n// to detect and properly classify live websites as being built with React Router:\r\n// https://github.com/HTTPArchive/wappalyzer/blob/main/src/technologies/r.json\r\nconst REACT_ROUTER_VERSION = \"6\";\r\ntry {\r\n  window.__reactRouterVersion = REACT_ROUTER_VERSION;\r\n} catch (e) {\r\n  // no-op\r\n}\r\nfunction createBrowserRouter(routes, opts) {\r\n  return createRouter({\r\n    basename: opts == null ? void 0 : opts.basename,\r\n    future: _extends({}, opts == null ? void 0 : opts.future, {\r\n      v7_prependBasename: true\r\n    }),\r\n    history: createBrowserHistory({\r\n      window: opts == null ? void 0 : opts.window\r\n    }),\r\n    hydrationData: (opts == null ? void 0 : opts.hydrationData) || parseHydrationData(),\r\n    routes,\r\n    mapRouteProperties: UNSAFE_mapRouteProperties,\r\n    dataStrategy: opts == null ? void 0 : opts.dataStrategy,\r\n    patchRoutesOnNavigation: opts == null ? void 0 : opts.patchRoutesOnNavigation,\r\n    window: opts == null ? void 0 : opts.window\r\n  }).initialize();\r\n}\r\nfunction createHashRouter(routes, opts) {\r\n  return createRouter({\r\n    basename: opts == null ? void 0 : opts.basename,\r\n    future: _extends({}, opts == null ? void 0 : opts.future, {\r\n      v7_prependBasename: true\r\n    }),\r\n    history: createHashHistory({\r\n      window: opts == null ? void 0 : opts.window\r\n    }),\r\n    hydrationData: (opts == null ? void 0 : opts.hydrationData) || parseHydrationData(),\r\n    routes,\r\n    mapRouteProperties: UNSAFE_mapRouteProperties,\r\n    dataStrategy: opts == null ? void 0 : opts.dataStrategy,\r\n    patchRoutesOnNavigation: opts == null ? void 0 : opts.patchRoutesOnNavigation,\r\n    window: opts == null ? void 0 : opts.window\r\n  }).initialize();\r\n}\r\nfunction parseHydrationData() {\r\n  var _window;\r\n  let state = (_window = window) == null ? void 0 : _window.__staticRouterHydrationData;\r\n  if (state && state.errors) {\r\n    state = _extends({}, state, {\r\n      errors: deserializeErrors(state.errors)\r\n    });\r\n  }\r\n  return state;\r\n}\r\nfunction deserializeErrors(errors) {\r\n  if (!errors) return null;\r\n  let entries = Object.entries(errors);\r\n  let serialized = {};\r\n  for (let [key, val] of entries) {\r\n    // Hey you!  If you change this, please change the corresponding logic in\r\n    // serializeErrors in react-router-dom/server.tsx :)\r\n    if (val && val.__type === \"RouteErrorResponse\") {\r\n      serialized[key] = new UNSAFE_ErrorResponseImpl(val.status, val.statusText, val.data, val.internal === true);\r\n    } else if (val && val.__type === \"Error\") {\r\n      // Attempt to reconstruct the right type of Error (i.e., ReferenceError)\r\n      if (val.__subType) {\r\n        let ErrorConstructor = window[val.__subType];\r\n        if (typeof ErrorConstructor === \"function\") {\r\n          try {\r\n            // @ts-expect-error\r\n            let error = new ErrorConstructor(val.message);\r\n            // Wipe away the client-side stack trace.  Nothing to fill it in with\r\n            // because we don't serialize SSR stack traces for security reasons\r\n            error.stack = \"\";\r\n            serialized[key] = error;\r\n          } catch (e) {\r\n            // no-op - fall through and create a normal Error\r\n          }\r\n        }\r\n      }\r\n      if (serialized[key] == null) {\r\n        let error = new Error(val.message);\r\n        // Wipe away the client-side stack trace.  Nothing to fill it in with\r\n        // because we don't serialize SSR stack traces for security reasons\r\n        error.stack = \"\";\r\n        serialized[key] = error;\r\n      }\r\n    } else {\r\n      serialized[key] = val;\r\n    }\r\n  }\r\n  return serialized;\r\n}\r\nconst ViewTransitionContext = /*#__PURE__*/React.createContext({\r\n  isTransitioning: false\r\n});\r\nif (process.env.NODE_ENV !== \"production\") {\r\n  ViewTransitionContext.displayName = \"ViewTransition\";\r\n}\r\nconst FetchersContext = /*#__PURE__*/React.createContext(new Map());\r\nif (process.env.NODE_ENV !== \"production\") {\r\n  FetchersContext.displayName = \"Fetchers\";\r\n}\r\n//#endregion\r\n////////////////////////////////////////////////////////////////////////////////\r\n//#region Components\r\n////////////////////////////////////////////////////////////////////////////////\r\n/**\r\n  Webpack + React 17 fails to compile on any of the following because webpack\r\n  complains that `startTransition` doesn't exist in `React`:\r\n  * import { startTransition } from \"react\"\r\n  * import * as React from from \"react\";\r\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\r\n  * import * as React from from \"react\";\r\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\r\n\r\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\r\n  * import * as React from from \"react\";\r\n    const START_TRANSITION = \"startTransition\";\r\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\r\n\r\n  However, that introduces webpack/terser minification issues in production builds\r\n  in React 18 where minification/obfuscation ends up removing the call of\r\n  React.startTransition entirely from the first half of the ternary.  Grabbing\r\n  this exported reference once up front resolves that issue.\r\n\r\n  See https://github.com/remix-run/react-router/issues/10579\r\n*/\r\nconst START_TRANSITION = \"startTransition\";\r\nconst startTransitionImpl = React[START_TRANSITION];\r\nconst FLUSH_SYNC = \"flushSync\";\r\nconst flushSyncImpl = ReactDOM[FLUSH_SYNC];\r\nconst USE_ID = \"useId\";\r\nconst useIdImpl = React[USE_ID];\r\nfunction startTransitionSafe(cb) {\r\n  if (startTransitionImpl) {\r\n    startTransitionImpl(cb);\r\n  } else {\r\n    cb();\r\n  }\r\n}\r\nfunction flushSyncSafe(cb) {\r\n  if (flushSyncImpl) {\r\n    flushSyncImpl(cb);\r\n  } else {\r\n    cb();\r\n  }\r\n}\r\nclass Deferred {\r\n  constructor() {\r\n    this.status = \"pending\";\r\n    this.promise = new Promise((resolve, reject) => {\r\n      this.resolve = value => {\r\n        if (this.status === \"pending\") {\r\n          this.status = \"resolved\";\r\n          resolve(value);\r\n        }\r\n      };\r\n      this.reject = reason => {\r\n        if (this.status === \"pending\") {\r\n          this.status = \"rejected\";\r\n          reject(reason);\r\n        }\r\n      };\r\n    });\r\n  }\r\n}\r\n/**\r\n * Given a Remix Router instance, render the appropriate UI\r\n */\r\nfunction RouterProvider(_ref) {\r\n  let {\r\n    fallbackElement,\r\n    router,\r\n    future\r\n  } = _ref;\r\n  let [state, setStateImpl] = React.useState(router.state);\r\n  let [pendingState, setPendingState] = React.useState();\r\n  let [vtContext, setVtContext] = React.useState({\r\n    isTransitioning: false\r\n  });\r\n  let [renderDfd, setRenderDfd] = React.useState();\r\n  let [transition, setTransition] = React.useState();\r\n  let [interruption, setInterruption] = React.useState();\r\n  let fetcherData = React.useRef(new Map());\r\n  let {\r\n    v7_startTransition\r\n  } = future || {};\r\n  let optInStartTransition = React.useCallback(cb => {\r\n    if (v7_startTransition) {\r\n      startTransitionSafe(cb);\r\n    } else {\r\n      cb();\r\n    }\r\n  }, [v7_startTransition]);\r\n  let setState = React.useCallback((newState, _ref2) => {\r\n    let {\r\n      deletedFetchers,\r\n      flushSync: flushSync,\r\n      viewTransitionOpts: viewTransitionOpts\r\n    } = _ref2;\r\n    newState.fetchers.forEach((fetcher, key) => {\r\n      if (fetcher.data !== undefined) {\r\n        fetcherData.current.set(key, fetcher.data);\r\n      }\r\n    });\r\n    deletedFetchers.forEach(key => fetcherData.current.delete(key));\r\n    let isViewTransitionUnavailable = router.window == null || router.window.document == null || typeof router.window.document.startViewTransition !== \"function\";\r\n    // If this isn't a view transition or it's not available in this browser,\r\n    // just update and be done with it\r\n    if (!viewTransitionOpts || isViewTransitionUnavailable) {\r\n      if (flushSync) {\r\n        flushSyncSafe(() => setStateImpl(newState));\r\n      } else {\r\n        optInStartTransition(() => setStateImpl(newState));\r\n      }\r\n      return;\r\n    }\r\n    // flushSync + startViewTransition\r\n    if (flushSync) {\r\n      // Flush through the context to mark DOM elements as transition=ing\r\n      flushSyncSafe(() => {\r\n        // Cancel any pending transitions\r\n        if (transition) {\r\n          renderDfd && renderDfd.resolve();\r\n          transition.skipTransition();\r\n        }\r\n        setVtContext({\r\n          isTransitioning: true,\r\n          flushSync: true,\r\n          currentLocation: viewTransitionOpts.currentLocation,\r\n          nextLocation: viewTransitionOpts.nextLocation\r\n        });\r\n      });\r\n      // Update the DOM\r\n      let t = router.window.document.startViewTransition(() => {\r\n        flushSyncSafe(() => setStateImpl(newState));\r\n      });\r\n      // Clean up after the animation completes\r\n      t.finished.finally(() => {\r\n        flushSyncSafe(() => {\r\n          setRenderDfd(undefined);\r\n          setTransition(undefined);\r\n          setPendingState(undefined);\r\n          setVtContext({\r\n            isTransitioning: false\r\n          });\r\n        });\r\n      });\r\n      flushSyncSafe(() => setTransition(t));\r\n      return;\r\n    }\r\n    // startTransition + startViewTransition\r\n    if (transition) {\r\n      // Interrupting an in-progress transition, cancel and let everything flush\r\n      // out, and then kick off a new transition from the interruption state\r\n      renderDfd && renderDfd.resolve();\r\n      transition.skipTransition();\r\n      setInterruption({\r\n        state: newState,\r\n        currentLocation: viewTransitionOpts.currentLocation,\r\n        nextLocation: viewTransitionOpts.nextLocation\r\n      });\r\n    } else {\r\n      // Completed navigation update with opted-in view transitions, let 'er rip\r\n      setPendingState(newState);\r\n      setVtContext({\r\n        isTransitioning: true,\r\n        flushSync: false,\r\n        currentLocation: viewTransitionOpts.currentLocation,\r\n        nextLocation: viewTransitionOpts.nextLocation\r\n      });\r\n    }\r\n  }, [router.window, transition, renderDfd, fetcherData, optInStartTransition]);\r\n  // Need to use a layout effect here so we are subscribed early enough to\r\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\r\n  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\r\n  // When we start a view transition, create a Deferred we can use for the\r\n  // eventual \"completed\" render\r\n  React.useEffect(() => {\r\n    if (vtContext.isTransitioning && !vtContext.flushSync) {\r\n      setRenderDfd(new Deferred());\r\n    }\r\n  }, [vtContext]);\r\n  // Once the deferred is created, kick off startViewTransition() to update the\r\n  // DOM and then wait on the Deferred to resolve (indicating the DOM update has\r\n  // happened)\r\n  React.useEffect(() => {\r\n    if (renderDfd && pendingState && router.window) {\r\n      let newState = pendingState;\r\n      let renderPromise = renderDfd.promise;\r\n      let transition = router.window.document.startViewTransition(async () => {\r\n        optInStartTransition(() => setStateImpl(newState));\r\n        await renderPromise;\r\n      });\r\n      transition.finished.finally(() => {\r\n        setRenderDfd(undefined);\r\n        setTransition(undefined);\r\n        setPendingState(undefined);\r\n        setVtContext({\r\n          isTransitioning: false\r\n        });\r\n      });\r\n      setTransition(transition);\r\n    }\r\n  }, [optInStartTransition, pendingState, renderDfd, router.window]);\r\n  // When the new location finally renders and is committed to the DOM, this\r\n  // effect will run to resolve the transition\r\n  React.useEffect(() => {\r\n    if (renderDfd && pendingState && state.location.key === pendingState.location.key) {\r\n      renderDfd.resolve();\r\n    }\r\n  }, [renderDfd, transition, state.location, pendingState]);\r\n  // If we get interrupted with a new navigation during a transition, we skip\r\n  // the active transition, let it cleanup, then kick it off again here\r\n  React.useEffect(() => {\r\n    if (!vtContext.isTransitioning && interruption) {\r\n      setPendingState(interruption.state);\r\n      setVtContext({\r\n        isTransitioning: true,\r\n        flushSync: false,\r\n        currentLocation: interruption.currentLocation,\r\n        nextLocation: interruption.nextLocation\r\n      });\r\n      setInterruption(undefined);\r\n    }\r\n  }, [vtContext.isTransitioning, interruption]);\r\n  React.useEffect(() => {\r\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(fallbackElement == null || !router.future.v7_partialHydration, \"`<RouterProvider fallbackElement>` is deprecated when using \" + \"`v7_partialHydration`, use a `HydrateFallback` component instead\") : void 0;\r\n    // Only log this once on initial mount\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n  let navigator = React.useMemo(() => {\r\n    return {\r\n      createHref: router.createHref,\r\n      encodeLocation: router.encodeLocation,\r\n      go: n => router.navigate(n),\r\n      push: (to, state, opts) => router.navigate(to, {\r\n        state,\r\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\r\n      }),\r\n      replace: (to, state, opts) => router.navigate(to, {\r\n        replace: true,\r\n        state,\r\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\r\n      })\r\n    };\r\n  }, [router]);\r\n  let basename = router.basename || \"/\";\r\n  let dataRouterContext = React.useMemo(() => ({\r\n    router,\r\n    navigator,\r\n    static: false,\r\n    basename\r\n  }), [router, navigator, basename]);\r\n  let routerFuture = React.useMemo(() => ({\r\n    v7_relativeSplatPath: router.future.v7_relativeSplatPath\r\n  }), [router.future.v7_relativeSplatPath]);\r\n  React.useEffect(() => UNSAFE_logV6DeprecationWarnings(future, router.future), [future, router.future]);\r\n  // The fragment and {null} here are important!  We need them to keep React 18's\r\n  // useId happy when we are server-rendering since we may have a <script> here\r\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\r\n  // useId relies on the component tree structure to generate deterministic id's\r\n  // so we need to ensure it remains the same on the client even though\r\n  // we don't need the <script> tag\r\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(UNSAFE_DataRouterContext.Provider, {\r\n    value: dataRouterContext\r\n  }, /*#__PURE__*/React.createElement(UNSAFE_DataRouterStateContext.Provider, {\r\n    value: state\r\n  }, /*#__PURE__*/React.createElement(FetchersContext.Provider, {\r\n    value: fetcherData.current\r\n  }, /*#__PURE__*/React.createElement(ViewTransitionContext.Provider, {\r\n    value: vtContext\r\n  }, /*#__PURE__*/React.createElement(Router, {\r\n    basename: basename,\r\n    location: state.location,\r\n    navigationType: state.historyAction,\r\n    navigator: navigator,\r\n    future: routerFuture\r\n  }, state.initialized || router.future.v7_partialHydration ? /*#__PURE__*/React.createElement(MemoizedDataRoutes, {\r\n    routes: router.routes,\r\n    future: router.future,\r\n    state: state\r\n  }) : fallbackElement))))), null);\r\n}\r\n// Memoize to avoid re-renders when updating `ViewTransitionContext`\r\nconst MemoizedDataRoutes = /*#__PURE__*/React.memo(DataRoutes);\r\nfunction DataRoutes(_ref3) {\r\n  let {\r\n    routes,\r\n    future,\r\n    state\r\n  } = _ref3;\r\n  return UNSAFE_useRoutesImpl(routes, undefined, state, future);\r\n}\r\n/**\r\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\r\n */\r\nfunction BrowserRouter(_ref4) {\r\n  let {\r\n    basename,\r\n    children,\r\n    future,\r\n    window\r\n  } = _ref4;\r\n  let historyRef = React.useRef();\r\n  if (historyRef.current == null) {\r\n    historyRef.current = createBrowserHistory({\r\n      window,\r\n      v5Compat: true\r\n    });\r\n  }\r\n  let history = historyRef.current;\r\n  let [state, setStateImpl] = React.useState({\r\n    action: history.action,\r\n    location: history.location\r\n  });\r\n  let {\r\n    v7_startTransition\r\n  } = future || {};\r\n  let setState = React.useCallback(newState => {\r\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\r\n  }, [setStateImpl, v7_startTransition]);\r\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\r\n  React.useEffect(() => UNSAFE_logV6DeprecationWarnings(future), [future]);\r\n  return /*#__PURE__*/React.createElement(Router, {\r\n    basename: basename,\r\n    children: children,\r\n    location: state.location,\r\n    navigationType: state.action,\r\n    navigator: history,\r\n    future: future\r\n  });\r\n}\r\n/**\r\n * A `<Router>` for use in web browsers. Stores the location in the hash\r\n * portion of the URL so it is not sent to the server.\r\n */\r\nfunction HashRouter(_ref5) {\r\n  let {\r\n    basename,\r\n    children,\r\n    future,\r\n    window\r\n  } = _ref5;\r\n  let historyRef = React.useRef();\r\n  if (historyRef.current == null) {\r\n    historyRef.current = createHashHistory({\r\n      window,\r\n      v5Compat: true\r\n    });\r\n  }\r\n  let history = historyRef.current;\r\n  let [state, setStateImpl] = React.useState({\r\n    action: history.action,\r\n    location: history.location\r\n  });\r\n  let {\r\n    v7_startTransition\r\n  } = future || {};\r\n  let setState = React.useCallback(newState => {\r\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\r\n  }, [setStateImpl, v7_startTransition]);\r\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\r\n  React.useEffect(() => UNSAFE_logV6DeprecationWarnings(future), [future]);\r\n  return /*#__PURE__*/React.createElement(Router, {\r\n    basename: basename,\r\n    children: children,\r\n    location: state.location,\r\n    navigationType: state.action,\r\n    navigator: history,\r\n    future: future\r\n  });\r\n}\r\n/**\r\n * A `<Router>` that accepts a pre-instantiated history object. It's important\r\n * to note that using your own history object is highly discouraged and may add\r\n * two versions of the history library to your bundles unless you use the same\r\n * version of the history library that React Router uses internally.\r\n */\r\nfunction HistoryRouter(_ref6) {\r\n  let {\r\n    basename,\r\n    children,\r\n    future,\r\n    history\r\n  } = _ref6;\r\n  let [state, setStateImpl] = React.useState({\r\n    action: history.action,\r\n    location: history.location\r\n  });\r\n  let {\r\n    v7_startTransition\r\n  } = future || {};\r\n  let setState = React.useCallback(newState => {\r\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\r\n  }, [setStateImpl, v7_startTransition]);\r\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\r\n  React.useEffect(() => UNSAFE_logV6DeprecationWarnings(future), [future]);\r\n  return /*#__PURE__*/React.createElement(Router, {\r\n    basename: basename,\r\n    children: children,\r\n    location: state.location,\r\n    navigationType: state.action,\r\n    navigator: history,\r\n    future: future\r\n  });\r\n}\r\nif (process.env.NODE_ENV !== \"production\") {\r\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\r\n}\r\nconst isBrowser = typeof window !== \"undefined\" && typeof window.document !== \"undefined\" && typeof window.document.createElement !== \"undefined\";\r\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\r\n/**\r\n * The public API for rendering a history-aware `<a>`.\r\n */\r\nconst Link = /*#__PURE__*/React.forwardRef(function LinkWithRef(_ref7, ref) {\r\n  let {\r\n      onClick,\r\n      relative,\r\n      reloadDocument,\r\n      replace,\r\n      state,\r\n      target,\r\n      to,\r\n      preventScrollReset,\r\n      viewTransition\r\n    } = _ref7,\r\n    rest = _objectWithoutPropertiesLoose(_ref7, _excluded);\r\n  let {\r\n    basename\r\n  } = React.useContext(UNSAFE_NavigationContext);\r\n  // Rendered into <a href> for absolute URLs\r\n  let absoluteHref;\r\n  let isExternal = false;\r\n  if (typeof to === \"string\" && ABSOLUTE_URL_REGEX.test(to)) {\r\n    // Render the absolute href server- and client-side\r\n    absoluteHref = to;\r\n    // Only check for external origins client-side\r\n    if (isBrowser) {\r\n      try {\r\n        let currentUrl = new URL(window.location.href);\r\n        let targetUrl = to.startsWith(\"//\") ? new URL(currentUrl.protocol + to) : new URL(to);\r\n        let path = stripBasename(targetUrl.pathname, basename);\r\n        if (targetUrl.origin === currentUrl.origin && path != null) {\r\n          // Strip the protocol/origin/basename for same-origin absolute URLs\r\n          to = path + targetUrl.search + targetUrl.hash;\r\n        } else {\r\n          isExternal = true;\r\n        }\r\n      } catch (e) {\r\n        // We can't do external URL detection without a valid URL\r\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"<Link to=\\\"\" + to + \"\\\"> contains an invalid URL which will probably break \" + \"when clicked - please update to a valid URL path.\") : void 0;\r\n      }\r\n    }\r\n  }\r\n  // Rendered into <a href> for relative URLs\r\n  let href = useHref(to, {\r\n    relative\r\n  });\r\n  let internalOnClick = useLinkClickHandler(to, {\r\n    replace,\r\n    state,\r\n    target,\r\n    preventScrollReset,\r\n    relative,\r\n    viewTransition\r\n  });\r\n  function handleClick(event) {\r\n    if (onClick) onClick(event);\r\n    if (!event.defaultPrevented) {\r\n      internalOnClick(event);\r\n    }\r\n  }\r\n  return (\r\n    /*#__PURE__*/\r\n    // eslint-disable-next-line jsx-a11y/anchor-has-content\r\n    React.createElement(\"a\", _extends({}, rest, {\r\n      href: absoluteHref || href,\r\n      onClick: isExternal || reloadDocument ? onClick : handleClick,\r\n      ref: ref,\r\n      target: target\r\n    }))\r\n  );\r\n});\r\nif (process.env.NODE_ENV !== \"production\") {\r\n  Link.displayName = \"Link\";\r\n}\r\n/**\r\n * A `<Link>` wrapper that knows if it's \"active\" or not.\r\n */\r\nconst NavLink = /*#__PURE__*/React.forwardRef(function NavLinkWithRef(_ref8, ref) {\r\n  let {\r\n      \"aria-current\": ariaCurrentProp = \"page\",\r\n      caseSensitive = false,\r\n      className: classNameProp = \"\",\r\n      end = false,\r\n      style: styleProp,\r\n      to,\r\n      viewTransition,\r\n      children\r\n    } = _ref8,\r\n    rest = _objectWithoutPropertiesLoose(_ref8, _excluded2);\r\n  let path = useResolvedPath(to, {\r\n    relative: rest.relative\r\n  });\r\n  let location = useLocation();\r\n  let routerState = React.useContext(UNSAFE_DataRouterStateContext);\r\n  let {\r\n    navigator,\r\n    basename\r\n  } = React.useContext(UNSAFE_NavigationContext);\r\n  let isTransitioning = routerState != null &&\r\n  // Conditional usage is OK here because the usage of a data router is static\r\n  // eslint-disable-next-line react-hooks/rules-of-hooks\r\n  useViewTransitionState(path) && viewTransition === true;\r\n  let toPathname = navigator.encodeLocation ? navigator.encodeLocation(path).pathname : path.pathname;\r\n  let locationPathname = location.pathname;\r\n  let nextLocationPathname = routerState && routerState.navigation && routerState.navigation.location ? routerState.navigation.location.pathname : null;\r\n  if (!caseSensitive) {\r\n    locationPathname = locationPathname.toLowerCase();\r\n    nextLocationPathname = nextLocationPathname ? nextLocationPathname.toLowerCase() : null;\r\n    toPathname = toPathname.toLowerCase();\r\n  }\r\n  if (nextLocationPathname && basename) {\r\n    nextLocationPathname = stripBasename(nextLocationPathname, basename) || nextLocationPathname;\r\n  }\r\n  // If the `to` has a trailing slash, look at that exact spot.  Otherwise,\r\n  // we're looking for a slash _after_ what's in `to`.  For example:\r\n  //\r\n  // <NavLink to=\"/users\"> and <NavLink to=\"/users/\">\r\n  // both want to look for a / at index 6 to match URL `/users/matt`\r\n  const endSlashPosition = toPathname !== \"/\" && toPathname.endsWith(\"/\") ? toPathname.length - 1 : toPathname.length;\r\n  let isActive = locationPathname === toPathname || !end && locationPathname.startsWith(toPathname) && locationPathname.charAt(endSlashPosition) === \"/\";\r\n  let isPending = nextLocationPathname != null && (nextLocationPathname === toPathname || !end && nextLocationPathname.startsWith(toPathname) && nextLocationPathname.charAt(toPathname.length) === \"/\");\r\n  let renderProps = {\r\n    isActive,\r\n    isPending,\r\n    isTransitioning\r\n  };\r\n  let ariaCurrent = isActive ? ariaCurrentProp : undefined;\r\n  let className;\r\n  if (typeof classNameProp === \"function\") {\r\n    className = classNameProp(renderProps);\r\n  } else {\r\n    // If the className prop is not a function, we use a default `active`\r\n    // class for <NavLink />s that are active. In v5 `active` was the default\r\n    // value for `activeClassName`, but we are removing that API and can still\r\n    // use the old default behavior for a cleaner upgrade path and keep the\r\n    // simple styling rules working as they currently do.\r\n    className = [classNameProp, isActive ? \"active\" : null, isPending ? \"pending\" : null, isTransitioning ? \"transitioning\" : null].filter(Boolean).join(\" \");\r\n  }\r\n  let style = typeof styleProp === \"function\" ? styleProp(renderProps) : styleProp;\r\n  return /*#__PURE__*/React.createElement(Link, _extends({}, rest, {\r\n    \"aria-current\": ariaCurrent,\r\n    className: className,\r\n    ref: ref,\r\n    style: style,\r\n    to: to,\r\n    viewTransition: viewTransition\r\n  }), typeof children === \"function\" ? children(renderProps) : children);\r\n});\r\nif (process.env.NODE_ENV !== \"production\") {\r\n  NavLink.displayName = \"NavLink\";\r\n}\r\n/**\r\n * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\r\n * that the interaction with the server is with `fetch` instead of new document\r\n * requests, allowing components to add nicer UX to the page as the form is\r\n * submitted and returns with data.\r\n */\r\nconst Form = /*#__PURE__*/React.forwardRef((_ref9, forwardedRef) => {\r\n  let {\r\n      fetcherKey,\r\n      navigate,\r\n      reloadDocument,\r\n      replace,\r\n      state,\r\n      method = defaultMethod,\r\n      action,\r\n      onSubmit,\r\n      relative,\r\n      preventScrollReset,\r\n      viewTransition\r\n    } = _ref9,\r\n    props = _objectWithoutPropertiesLoose(_ref9, _excluded3);\r\n  let submit = useSubmit();\r\n  let formAction = useFormAction(action, {\r\n    relative\r\n  });\r\n  let formMethod = method.toLowerCase() === \"get\" ? \"get\" : \"post\";\r\n  let submitHandler = event => {\r\n    onSubmit && onSubmit(event);\r\n    if (event.defaultPrevented) return;\r\n    event.preventDefault();\r\n    let submitter = event.nativeEvent.submitter;\r\n    let submitMethod = (submitter == null ? void 0 : submitter.getAttribute(\"formmethod\")) || method;\r\n    submit(submitter || event.currentTarget, {\r\n      fetcherKey,\r\n      method: submitMethod,\r\n      navigate,\r\n      replace,\r\n      state,\r\n      relative,\r\n      preventScrollReset,\r\n      viewTransition\r\n    });\r\n  };\r\n  return /*#__PURE__*/React.createElement(\"form\", _extends({\r\n    ref: forwardedRef,\r\n    method: formMethod,\r\n    action: formAction,\r\n    onSubmit: reloadDocument ? onSubmit : submitHandler\r\n  }, props));\r\n});\r\nif (process.env.NODE_ENV !== \"production\") {\r\n  Form.displayName = \"Form\";\r\n}\r\n/**\r\n * This component will emulate the browser's scroll restoration on location\r\n * changes.\r\n */\r\nfunction ScrollRestoration(_ref10) {\r\n  let {\r\n    getKey,\r\n    storageKey\r\n  } = _ref10;\r\n  useScrollRestoration({\r\n    getKey,\r\n    storageKey\r\n  });\r\n  return null;\r\n}\r\nif (process.env.NODE_ENV !== \"production\") {\r\n  ScrollRestoration.displayName = \"ScrollRestoration\";\r\n}\r\n//#endregion\r\n////////////////////////////////////////////////////////////////////////////////\r\n//#region Hooks\r\n////////////////////////////////////////////////////////////////////////////////\r\nvar DataRouterHook;\r\n(function (DataRouterHook) {\r\n  DataRouterHook[\"UseScrollRestoration\"] = \"useScrollRestoration\";\r\n  DataRouterHook[\"UseSubmit\"] = \"useSubmit\";\r\n  DataRouterHook[\"UseSubmitFetcher\"] = \"useSubmitFetcher\";\r\n  DataRouterHook[\"UseFetcher\"] = \"useFetcher\";\r\n  DataRouterHook[\"useViewTransitionState\"] = \"useViewTransitionState\";\r\n})(DataRouterHook || (DataRouterHook = {}));\r\nvar DataRouterStateHook;\r\n(function (DataRouterStateHook) {\r\n  DataRouterStateHook[\"UseFetcher\"] = \"useFetcher\";\r\n  DataRouterStateHook[\"UseFetchers\"] = \"useFetchers\";\r\n  DataRouterStateHook[\"UseScrollRestoration\"] = \"useScrollRestoration\";\r\n})(DataRouterStateHook || (DataRouterStateHook = {}));\r\n// Internal hooks\r\nfunction getDataRouterConsoleError(hookName) {\r\n  return hookName + \" must be used within a data router.  See https://reactrouter.com/v6/routers/picking-a-router.\";\r\n}\r\nfunction useDataRouterContext(hookName) {\r\n  let ctx = React.useContext(UNSAFE_DataRouterContext);\r\n  !ctx ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\r\n  return ctx;\r\n}\r\nfunction useDataRouterState(hookName) {\r\n  let state = React.useContext(UNSAFE_DataRouterStateContext);\r\n  !state ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\r\n  return state;\r\n}\r\n// External hooks\r\n/**\r\n * Handles the click behavior for router `<Link>` components. This is useful if\r\n * you need to create custom `<Link>` components with the same click behavior we\r\n * use in our exported `<Link>`.\r\n */\r\nfunction useLinkClickHandler(to, _temp) {\r\n  let {\r\n    target,\r\n    replace: replaceProp,\r\n    state,\r\n    preventScrollReset,\r\n    relative,\r\n    viewTransition\r\n  } = _temp === void 0 ? {} : _temp;\r\n  let navigate = useNavigate();\r\n  let location = useLocation();\r\n  let path = useResolvedPath(to, {\r\n    relative\r\n  });\r\n  return React.useCallback(event => {\r\n    if (shouldProcessLinkClick(event, target)) {\r\n      event.preventDefault();\r\n      // If the URL hasn't changed, a regular <a> will do a replace instead of\r\n      // a push, so do the same here unless the replace prop is explicitly set\r\n      let replace = replaceProp !== undefined ? replaceProp : createPath(location) === createPath(path);\r\n      navigate(to, {\r\n        replace,\r\n        state,\r\n        preventScrollReset,\r\n        relative,\r\n        viewTransition\r\n      });\r\n    }\r\n  }, [location, navigate, path, replaceProp, state, target, to, preventScrollReset, relative, viewTransition]);\r\n}\r\n/**\r\n * A convenient wrapper for reading and writing search parameters via the\r\n * URLSearchParams interface.\r\n */\r\nfunction useSearchParams(defaultInit) {\r\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(typeof URLSearchParams !== \"undefined\", \"You cannot use the `useSearchParams` hook in a browser that does not \" + \"support the URLSearchParams API. If you need to support Internet \" + \"Explorer 11, we recommend you load a polyfill such as \" + \"https://github.com/ungap/url-search-params.\") : void 0;\r\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\r\n  let hasSetSearchParamsRef = React.useRef(false);\r\n  let location = useLocation();\r\n  let searchParams = React.useMemo(() =>\r\n  // Only merge in the defaults if we haven't yet called setSearchParams.\r\n  // Once we call that we want those to take precedence, otherwise you can't\r\n  // remove a param with setSearchParams({}) if it has an initial value\r\n  getSearchParamsForLocation(location.search, hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current), [location.search]);\r\n  let navigate = useNavigate();\r\n  let setSearchParams = React.useCallback((nextInit, navigateOptions) => {\r\n    const newSearchParams = createSearchParams(typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit);\r\n    hasSetSearchParamsRef.current = true;\r\n    navigate(\"?\" + newSearchParams, navigateOptions);\r\n  }, [navigate, searchParams]);\r\n  return [searchParams, setSearchParams];\r\n}\r\nfunction validateClientSideSubmission() {\r\n  if (typeof document === \"undefined\") {\r\n    throw new Error(\"You are calling submit during the server render. \" + \"Try calling submit within a `useEffect` or callback instead.\");\r\n  }\r\n}\r\nlet fetcherId = 0;\r\nlet getUniqueFetcherId = () => \"__\" + String(++fetcherId) + \"__\";\r\n/**\r\n * Returns a function that may be used to programmatically submit a form (or\r\n * some arbitrary data) to the server.\r\n */\r\nfunction useSubmit() {\r\n  let {\r\n    router\r\n  } = useDataRouterContext(DataRouterHook.UseSubmit);\r\n  let {\r\n    basename\r\n  } = React.useContext(UNSAFE_NavigationContext);\r\n  let currentRouteId = UNSAFE_useRouteId();\r\n  return React.useCallback(function (target, options) {\r\n    if (options === void 0) {\r\n      options = {};\r\n    }\r\n    validateClientSideSubmission();\r\n    let {\r\n      action,\r\n      method,\r\n      encType,\r\n      formData,\r\n      body\r\n    } = getFormSubmissionInfo(target, basename);\r\n    if (options.navigate === false) {\r\n      let key = options.fetcherKey || getUniqueFetcherId();\r\n      router.fetch(key, currentRouteId, options.action || action, {\r\n        preventScrollReset: options.preventScrollReset,\r\n        formData,\r\n        body,\r\n        formMethod: options.method || method,\r\n        formEncType: options.encType || encType,\r\n        flushSync: options.flushSync\r\n      });\r\n    } else {\r\n      router.navigate(options.action || action, {\r\n        preventScrollReset: options.preventScrollReset,\r\n        formData,\r\n        body,\r\n        formMethod: options.method || method,\r\n        formEncType: options.encType || encType,\r\n        replace: options.replace,\r\n        state: options.state,\r\n        fromRouteId: currentRouteId,\r\n        flushSync: options.flushSync,\r\n        viewTransition: options.viewTransition\r\n      });\r\n    }\r\n  }, [router, basename, currentRouteId]);\r\n}\r\n// v7: Eventually we should deprecate this entirely in favor of using the\r\n// router method directly?\r\nfunction useFormAction(action, _temp2) {\r\n  let {\r\n    relative\r\n  } = _temp2 === void 0 ? {} : _temp2;\r\n  let {\r\n    basename\r\n  } = React.useContext(UNSAFE_NavigationContext);\r\n  let routeContext = React.useContext(UNSAFE_RouteContext);\r\n  !routeContext ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFormAction must be used inside a RouteContext\") : UNSAFE_invariant(false) : void 0;\r\n  let [match] = routeContext.matches.slice(-1);\r\n  // Shallow clone path so we can modify it below, otherwise we modify the\r\n  // object referenced by useMemo inside useResolvedPath\r\n  let path = _extends({}, useResolvedPath(action ? action : \".\", {\r\n    relative\r\n  }));\r\n  // If no action was specified, browsers will persist current search params\r\n  // when determining the path, so match that behavior\r\n  // https://github.com/remix-run/remix/issues/927\r\n  let location = useLocation();\r\n  if (action == null) {\r\n    // Safe to write to this directly here since if action was undefined, we\r\n    // would have called useResolvedPath(\".\") which will never include a search\r\n    path.search = location.search;\r\n    // When grabbing search params from the URL, remove any included ?index param\r\n    // since it might not apply to our contextual route.  We add it back based\r\n    // on match.route.index below\r\n    let params = new URLSearchParams(path.search);\r\n    let indexValues = params.getAll(\"index\");\r\n    let hasNakedIndexParam = indexValues.some(v => v === \"\");\r\n    if (hasNakedIndexParam) {\r\n      params.delete(\"index\");\r\n      indexValues.filter(v => v).forEach(v => params.append(\"index\", v));\r\n      let qs = params.toString();\r\n      path.search = qs ? \"?\" + qs : \"\";\r\n    }\r\n  }\r\n  if ((!action || action === \".\") && match.route.index) {\r\n    path.search = path.search ? path.search.replace(/^\\?/, \"?index&\") : \"?index\";\r\n  }\r\n  // If we're operating within a basename, prepend it to the pathname prior\r\n  // to creating the form action.  If this is a root navigation, then just use\r\n  // the raw basename which allows the basename to have full control over the\r\n  // presence of a trailing slash on root actions\r\n  if (basename !== \"/\") {\r\n    path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\r\n  }\r\n  return createPath(path);\r\n}\r\n// TODO: (v7) Change the useFetcher generic default from `any` to `unknown`\r\n/**\r\n * Interacts with route loaders and actions without causing a navigation. Great\r\n * for any interaction that stays on the same page.\r\n */\r\nfunction useFetcher(_temp3) {\r\n  var _route$matches;\r\n  let {\r\n    key\r\n  } = _temp3 === void 0 ? {} : _temp3;\r\n  let {\r\n    router\r\n  } = useDataRouterContext(DataRouterHook.UseFetcher);\r\n  let state = useDataRouterState(DataRouterStateHook.UseFetcher);\r\n  let fetcherData = React.useContext(FetchersContext);\r\n  let route = React.useContext(UNSAFE_RouteContext);\r\n  let routeId = (_route$matches = route.matches[route.matches.length - 1]) == null ? void 0 : _route$matches.route.id;\r\n  !fetcherData ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFetcher must be used inside a FetchersContext\") : UNSAFE_invariant(false) : void 0;\r\n  !route ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFetcher must be used inside a RouteContext\") : UNSAFE_invariant(false) : void 0;\r\n  !(routeId != null) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFetcher can only be used on routes that contain a unique \\\"id\\\"\") : UNSAFE_invariant(false) : void 0;\r\n  // Fetcher key handling\r\n  // OK to call conditionally to feature detect `useId`\r\n  // eslint-disable-next-line react-hooks/rules-of-hooks\r\n  let defaultKey = useIdImpl ? useIdImpl() : \"\";\r\n  let [fetcherKey, setFetcherKey] = React.useState(key || defaultKey);\r\n  if (key && key !== fetcherKey) {\r\n    setFetcherKey(key);\r\n  } else if (!fetcherKey) {\r\n    // We will only fall through here when `useId` is not available\r\n    setFetcherKey(getUniqueFetcherId());\r\n  }\r\n  // Registration/cleanup\r\n  React.useEffect(() => {\r\n    router.getFetcher(fetcherKey);\r\n    return () => {\r\n      // Tell the router we've unmounted - if v7_fetcherPersist is enabled this\r\n      // will not delete immediately but instead queue up a delete after the\r\n      // fetcher returns to an `idle` state\r\n      router.deleteFetcher(fetcherKey);\r\n    };\r\n  }, [router, fetcherKey]);\r\n  // Fetcher additions\r\n  let load = React.useCallback((href, opts) => {\r\n    !routeId ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"No routeId available for fetcher.load()\") : UNSAFE_invariant(false) : void 0;\r\n    router.fetch(fetcherKey, routeId, href, opts);\r\n  }, [fetcherKey, routeId, router]);\r\n  let submitImpl = useSubmit();\r\n  let submit = React.useCallback((target, opts) => {\r\n    submitImpl(target, _extends({}, opts, {\r\n      navigate: false,\r\n      fetcherKey\r\n    }));\r\n  }, [fetcherKey, submitImpl]);\r\n  let FetcherForm = React.useMemo(() => {\r\n    let FetcherForm = /*#__PURE__*/React.forwardRef((props, ref) => {\r\n      return /*#__PURE__*/React.createElement(Form, _extends({}, props, {\r\n        navigate: false,\r\n        fetcherKey: fetcherKey,\r\n        ref: ref\r\n      }));\r\n    });\r\n    if (process.env.NODE_ENV !== \"production\") {\r\n      FetcherForm.displayName = \"fetcher.Form\";\r\n    }\r\n    return FetcherForm;\r\n  }, [fetcherKey]);\r\n  // Exposed FetcherWithComponents\r\n  let fetcher = state.fetchers.get(fetcherKey) || IDLE_FETCHER;\r\n  let data = fetcherData.get(fetcherKey);\r\n  let fetcherWithComponents = React.useMemo(() => _extends({\r\n    Form: FetcherForm,\r\n    submit,\r\n    load\r\n  }, fetcher, {\r\n    data\r\n  }), [FetcherForm, submit, load, fetcher, data]);\r\n  return fetcherWithComponents;\r\n}\r\n/**\r\n * Provides all fetchers currently on the page. Useful for layouts and parent\r\n * routes that need to provide pending/optimistic UI regarding the fetch.\r\n */\r\nfunction useFetchers() {\r\n  let state = useDataRouterState(DataRouterStateHook.UseFetchers);\r\n  return Array.from(state.fetchers.entries()).map(_ref11 => {\r\n    let [key, fetcher] = _ref11;\r\n    return _extends({}, fetcher, {\r\n      key\r\n    });\r\n  });\r\n}\r\nconst SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\r\nlet savedScrollPositions = {};\r\n/**\r\n * When rendered inside a RouterProvider, will restore scroll positions on navigations\r\n */\r\nfunction useScrollRestoration(_temp4) {\r\n  let {\r\n    getKey,\r\n    storageKey\r\n  } = _temp4 === void 0 ? {} : _temp4;\r\n  let {\r\n    router\r\n  } = useDataRouterContext(DataRouterHook.UseScrollRestoration);\r\n  let {\r\n    restoreScrollPosition,\r\n    preventScrollReset\r\n  } = useDataRouterState(DataRouterStateHook.UseScrollRestoration);\r\n  let {\r\n    basename\r\n  } = React.useContext(UNSAFE_NavigationContext);\r\n  let location = useLocation();\r\n  let matches = useMatches();\r\n  let navigation = useNavigation();\r\n  // Trigger manual scroll restoration while we're active\r\n  React.useEffect(() => {\r\n    window.history.scrollRestoration = \"manual\";\r\n    return () => {\r\n      window.history.scrollRestoration = \"auto\";\r\n    };\r\n  }, []);\r\n  // Save positions on pagehide\r\n  usePageHide(React.useCallback(() => {\r\n    if (navigation.state === \"idle\") {\r\n      let key = (getKey ? getKey(location, matches) : null) || location.key;\r\n      savedScrollPositions[key] = window.scrollY;\r\n    }\r\n    try {\r\n      sessionStorage.setItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY, JSON.stringify(savedScrollPositions));\r\n    } catch (error) {\r\n      process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"Failed to save scroll positions in sessionStorage, <ScrollRestoration /> will not work properly (\" + error + \").\") : void 0;\r\n    }\r\n    window.history.scrollRestoration = \"auto\";\r\n  }, [storageKey, getKey, navigation.state, location, matches]));\r\n  // Read in any saved scroll locations\r\n  if (typeof document !== \"undefined\") {\r\n    // eslint-disable-next-line react-hooks/rules-of-hooks\r\n    React.useLayoutEffect(() => {\r\n      try {\r\n        let sessionPositions = sessionStorage.getItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY);\r\n        if (sessionPositions) {\r\n          savedScrollPositions = JSON.parse(sessionPositions);\r\n        }\r\n      } catch (e) {\r\n        // no-op, use default empty object\r\n      }\r\n    }, [storageKey]);\r\n    // Enable scroll restoration in the router\r\n    // eslint-disable-next-line react-hooks/rules-of-hooks\r\n    React.useLayoutEffect(() => {\r\n      let getKeyWithoutBasename = getKey && basename !== \"/\" ? (location, matches) => getKey( // Strip the basename to match useLocation()\r\n      _extends({}, location, {\r\n        pathname: stripBasename(location.pathname, basename) || location.pathname\r\n      }), matches) : getKey;\r\n      let disableScrollRestoration = router == null ? void 0 : router.enableScrollRestoration(savedScrollPositions, () => window.scrollY, getKeyWithoutBasename);\r\n      return () => disableScrollRestoration && disableScrollRestoration();\r\n    }, [router, basename, getKey]);\r\n    // Restore scrolling when state.restoreScrollPosition changes\r\n    // eslint-disable-next-line react-hooks/rules-of-hooks\r\n    React.useLayoutEffect(() => {\r\n      // Explicit false means don't do anything (used for submissions)\r\n      if (restoreScrollPosition === false) {\r\n        return;\r\n      }\r\n      // been here before, scroll to it\r\n      if (typeof restoreScrollPosition === \"number\") {\r\n        window.scrollTo(0, restoreScrollPosition);\r\n        return;\r\n      }\r\n      // try to scroll to the hash\r\n      if (location.hash) {\r\n        let el = document.getElementById(decodeURIComponent(location.hash.slice(1)));\r\n        if (el) {\r\n          el.scrollIntoView();\r\n          return;\r\n        }\r\n      }\r\n      // Don't reset if this navigation opted out\r\n      if (preventScrollReset === true) {\r\n        return;\r\n      }\r\n      // otherwise go to the top on new locations\r\n      window.scrollTo(0, 0);\r\n    }, [location, restoreScrollPosition, preventScrollReset]);\r\n  }\r\n}\r\n/**\r\n * Setup a callback to be fired on the window's `beforeunload` event. This is\r\n * useful for saving some data to `window.localStorage` just before the page\r\n * refreshes.\r\n *\r\n * Note: The `callback` argument should be a function created with\r\n * `React.useCallback()`.\r\n */\r\nfunction useBeforeUnload(callback, options) {\r\n  let {\r\n    capture\r\n  } = options || {};\r\n  React.useEffect(() => {\r\n    let opts = capture != null ? {\r\n      capture\r\n    } : undefined;\r\n    window.addEventListener(\"beforeunload\", callback, opts);\r\n    return () => {\r\n      window.removeEventListener(\"beforeunload\", callback, opts);\r\n    };\r\n  }, [callback, capture]);\r\n}\r\n/**\r\n * Setup a callback to be fired on the window's `pagehide` event. This is\r\n * useful for saving some data to `window.localStorage` just before the page\r\n * refreshes.  This event is better supported than beforeunload across browsers.\r\n *\r\n * Note: The `callback` argument should be a function created with\r\n * `React.useCallback()`.\r\n */\r\nfunction usePageHide(callback, options) {\r\n  let {\r\n    capture\r\n  } = options || {};\r\n  React.useEffect(() => {\r\n    let opts = capture != null ? {\r\n      capture\r\n    } : undefined;\r\n    window.addEventListener(\"pagehide\", callback, opts);\r\n    return () => {\r\n      window.removeEventListener(\"pagehide\", callback, opts);\r\n    };\r\n  }, [callback, capture]);\r\n}\r\n/**\r\n * Wrapper around useBlocker to show a window.confirm prompt to users instead\r\n * of building a custom UI with useBlocker.\r\n *\r\n * Warning: This has *a lot of rough edges* and behaves very differently (and\r\n * very incorrectly in some cases) across browsers if user click addition\r\n * back/forward navigations while the confirm is open.  Use at your own risk.\r\n */\r\nfunction usePrompt(_ref12) {\r\n  let {\r\n    when,\r\n    message\r\n  } = _ref12;\r\n  let blocker = useBlocker(when);\r\n  React.useEffect(() => {\r\n    if (blocker.state === \"blocked\") {\r\n      let proceed = window.confirm(message);\r\n      if (proceed) {\r\n        // This timeout is needed to avoid a weird \"race\" on POP navigations\r\n        // between the `window.history` revert navigation and the result of\r\n        // `window.confirm`\r\n        setTimeout(blocker.proceed, 0);\r\n      } else {\r\n        blocker.reset();\r\n      }\r\n    }\r\n  }, [blocker, message]);\r\n  React.useEffect(() => {\r\n    if (blocker.state === \"blocked\" && !when) {\r\n      blocker.reset();\r\n    }\r\n  }, [blocker, when]);\r\n}\r\n/**\r\n * Return a boolean indicating if there is an active view transition to the\r\n * given href.  You can use this value to render CSS classes or viewTransitionName\r\n * styles onto your elements\r\n *\r\n * @param href The destination href\r\n * @param [opts.relative] Relative routing type (\"route\" | \"path\")\r\n */\r\nfunction useViewTransitionState(to, opts) {\r\n  if (opts === void 0) {\r\n    opts = {};\r\n  }\r\n  let vtContext = React.useContext(ViewTransitionContext);\r\n  !(vtContext != null) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"`useViewTransitionState` must be used within `react-router-dom`'s `RouterProvider`.  \" + \"Did you accidentally import `RouterProvider` from `react-router`?\") : UNSAFE_invariant(false) : void 0;\r\n  let {\r\n    basename\r\n  } = useDataRouterContext(DataRouterHook.useViewTransitionState);\r\n  let path = useResolvedPath(to, {\r\n    relative: opts.relative\r\n  });\r\n  if (!vtContext.isTransitioning) {\r\n    return false;\r\n  }\r\n  let currentPath = stripBasename(vtContext.currentLocation.pathname, basename) || vtContext.currentLocation.pathname;\r\n  let nextPath = stripBasename(vtContext.nextLocation.pathname, basename) || vtContext.nextLocation.pathname;\r\n  // Transition is active if we're going to or coming from the indicated\r\n  // destination.  This ensures that other PUSH navigations that reverse\r\n  // an indicated transition apply.  I.e., on the list view you have:\r\n  //\r\n  //   <NavLink to=\"/details/1\" viewTransition>\r\n  //\r\n  // If you click the breadcrumb back to the list view:\r\n  //\r\n  //   <NavLink to=\"/list\" viewTransition>\r\n  //\r\n  // We should apply the transition because it's indicated as active going\r\n  // from /list -> /details/1 and therefore should be active on the reverse\r\n  // (even though this isn't strictly a POP reverse)\r\n  return matchPath(path.pathname, nextPath) != null || matchPath(path.pathname, currentPath) != null;\r\n}\r\n//#endregion\r\n\r\nexport { BrowserRouter, Form, HashRouter, Link, NavLink, RouterProvider, ScrollRestoration, FetchersContext as UNSAFE_FetchersContext, ViewTransitionContext as UNSAFE_ViewTransitionContext, useScrollRestoration as UNSAFE_useScrollRestoration, createBrowserRouter, createHashRouter, createSearchParams, HistoryRouter as unstable_HistoryRouter, usePrompt as unstable_usePrompt, useBeforeUnload, useFetcher, useFetchers, useFormAction, useLinkClickHandler, useSearchParams, useSubmit, useViewTransitionState };\r\n//# sourceMappingURL=index.js.map\r\n","\"use client\";\r\nimport { createContext } from 'react';\r\n\r\nconst LayoutGroupContext = createContext({});\r\n\r\nexport { LayoutGroupContext };\r\n","import { useRef } from 'react';\r\n\r\n/**\r\n * Creates a constant value over the lifecycle of a component.\r\n *\r\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\r\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\r\n * you can ensure that initialisers don't execute twice or more.\r\n */\r\nfunction useConstant(init) {\r\n    const ref = useRef(null);\r\n    if (ref.current === null) {\r\n        ref.current = init();\r\n    }\r\n    return ref.current;\r\n}\r\n\r\nexport { useConstant };\r\n","\"use client\";\r\nimport { createContext } from 'react';\r\n\r\n/**\r\n * @public\r\n */\r\nconst PresenceContext = createContext(null);\r\n\r\nexport { PresenceContext };\r\n","\"use client\";\r\nimport { createContext } from 'react';\r\n\r\n/**\r\n * @public\r\n */\r\nconst MotionConfigContext = createContext({\r\n    transformPagePoint: (p) => p,\r\n    isStatic: false,\r\n    reducedMotion: \"never\",\r\n});\r\n\r\nexport { MotionConfigContext };\r\n","\"use client\";\r\nimport { jsx } from 'react/jsx-runtime';\r\nimport * as React from 'react';\r\nimport { useId, useRef, useContext, useInsertionEffect } from 'react';\r\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\r\n\r\n/**\r\n * Measurement functionality has to be within a separate component\r\n * to leverage snapshot lifecycle.\r\n */\r\nclass PopChildMeasure extends React.Component {\r\n    getSnapshotBeforeUpdate(prevProps) {\r\n        const element = this.props.childRef.current;\r\n        if (element && prevProps.isPresent && !this.props.isPresent) {\r\n            const size = this.props.sizeRef.current;\r\n            size.height = element.offsetHeight || 0;\r\n            size.width = element.offsetWidth || 0;\r\n            size.top = element.offsetTop;\r\n            size.left = element.offsetLeft;\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\r\n     */\r\n    componentDidUpdate() { }\r\n    render() {\r\n        return this.props.children;\r\n    }\r\n}\r\nfunction PopChild({ children, isPresent }) {\r\n    const id = useId();\r\n    const ref = useRef(null);\r\n    const size = useRef({\r\n        width: 0,\r\n        height: 0,\r\n        top: 0,\r\n        left: 0,\r\n    });\r\n    const { nonce } = useContext(MotionConfigContext);\r\n    /**\r\n     * We create and inject a style block so we can apply this explicit\r\n     * sizing in a non-destructive manner by just deleting the style block.\r\n     *\r\n     * We can't apply size via render as the measurement happens\r\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\r\n     * styles directly on the DOM node, we might be overwriting\r\n     * styles set via the style prop.\r\n     */\r\n    useInsertionEffect(() => {\r\n        const { width, height, top, left } = size.current;\r\n        if (isPresent || !ref.current || !width || !height)\r\n            return;\r\n        ref.current.dataset.motionPopId = id;\r\n        const style = document.createElement(\"style\");\r\n        if (nonce)\r\n            style.nonce = nonce;\r\n        document.head.appendChild(style);\r\n        if (style.sheet) {\r\n            style.sheet.insertRule(`\r\n          [data-motion-pop-id=\"${id}\"] {\r\n            position: absolute !important;\r\n            width: ${width}px !important;\r\n            height: ${height}px !important;\r\n            top: ${top}px !important;\r\n            left: ${left}px !important;\r\n          }\r\n        `);\r\n        }\r\n        return () => {\r\n            document.head.removeChild(style);\r\n        };\r\n    }, [isPresent]);\r\n    return (jsx(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size, children: React.cloneElement(children, { ref }) }));\r\n}\r\n\r\nexport { PopChild };\r\n","\"use client\";\r\nimport { jsx } from 'react/jsx-runtime';\r\nimport * as React from 'react';\r\nimport { useId, useCallback, useMemo } from 'react';\r\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\r\nimport { useConstant } from '../../utils/use-constant.mjs';\r\nimport { PopChild } from './PopChild.mjs';\r\n\r\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, }) => {\r\n    const presenceChildren = useConstant(newChildrenMap);\r\n    const id = useId();\r\n    const memoizedOnExitComplete = useCallback((childId) => {\r\n        presenceChildren.set(childId, true);\r\n        for (const isComplete of presenceChildren.values()) {\r\n            if (!isComplete)\r\n                return; // can stop searching when any is incomplete\r\n        }\r\n        onExitComplete && onExitComplete();\r\n    }, [presenceChildren, onExitComplete]);\r\n    const context = useMemo(() => ({\r\n        id,\r\n        initial,\r\n        isPresent,\r\n        custom,\r\n        onExitComplete: memoizedOnExitComplete,\r\n        register: (childId) => {\r\n            presenceChildren.set(childId, false);\r\n            return () => presenceChildren.delete(childId);\r\n        },\r\n    }), \r\n    /**\r\n     * If the presence of a child affects the layout of the components around it,\r\n     * we want to make a new context value to ensure they get re-rendered\r\n     * so they can detect that layout change.\r\n     */\r\n    presenceAffectsLayout\r\n        ? [Math.random(), memoizedOnExitComplete]\r\n        : [isPresent, memoizedOnExitComplete]);\r\n    useMemo(() => {\r\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\r\n    }, [isPresent]);\r\n    /**\r\n     * If there's no `motion` components to fire exit animations, we want to remove this\r\n     * component immediately.\r\n     */\r\n    React.useEffect(() => {\r\n        !isPresent &&\r\n            !presenceChildren.size &&\r\n            onExitComplete &&\r\n            onExitComplete();\r\n    }, [isPresent]);\r\n    if (mode === \"popLayout\") {\r\n        children = jsx(PopChild, { isPresent: isPresent, children: children });\r\n    }\r\n    return (jsx(PresenceContext.Provider, { value: context, children: children }));\r\n};\r\nfunction newChildrenMap() {\r\n    return new Map();\r\n}\r\n\r\nexport { PresenceChild };\r\n","import { useContext, useId, useEffect, useCallback } from 'react';\r\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\r\n\r\n/**\r\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\r\n * to access information about whether it's still present in the React tree.\r\n *\r\n * ```jsx\r\n * import { usePresence } from \"framer-motion\"\r\n *\r\n * export const Component = () => {\r\n *   const [isPresent, safeToRemove] = usePresence()\r\n *\r\n *   useEffect(() => {\r\n *     !isPresent && setTimeout(safeToRemove, 1000)\r\n *   }, [isPresent])\r\n *\r\n *   return <div />\r\n * }\r\n * ```\r\n *\r\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\r\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\r\n *\r\n * @public\r\n */\r\nfunction usePresence(subscribe = true) {\r\n    const context = useContext(PresenceContext);\r\n    if (context === null)\r\n        return [true, null];\r\n    const { isPresent, onExitComplete, register } = context;\r\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\r\n    // either be null or non-null for the lifespan of the component.\r\n    const id = useId();\r\n    useEffect(() => {\r\n        if (subscribe)\r\n            register(id);\r\n    }, [subscribe]);\r\n    const safeToRemove = useCallback(() => subscribe && onExitComplete && onExitComplete(id), [id, onExitComplete, subscribe]);\r\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\r\n}\r\n/**\r\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\r\n * There is no `safeToRemove` function.\r\n *\r\n * ```jsx\r\n * import { useIsPresent } from \"framer-motion\"\r\n *\r\n * export const Component = () => {\r\n *   const isPresent = useIsPresent()\r\n *\r\n *   useEffect(() => {\r\n *     !isPresent && console.log(\"I've been removed!\")\r\n *   }, [isPresent])\r\n *\r\n *   return <div />\r\n * }\r\n * ```\r\n *\r\n * @public\r\n */\r\nfunction useIsPresent() {\r\n    return isPresent(useContext(PresenceContext));\r\n}\r\nfunction isPresent(context) {\r\n    return context === null ? true : context.isPresent;\r\n}\r\n\r\nexport { isPresent, useIsPresent, usePresence };\r\n","import { Children, isValidElement } from 'react';\r\n\r\nconst getChildKey = (child) => child.key || \"\";\r\nfunction onlyElements(children) {\r\n    const filtered = [];\r\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\r\n    Children.forEach(children, (child) => {\r\n        if (isValidElement(child))\r\n            filtered.push(child);\r\n    });\r\n    return filtered;\r\n}\r\n\r\nexport { getChildKey, onlyElements };\r\n","const isBrowser = typeof window !== \"undefined\";\r\n\r\nexport { isBrowser };\r\n","import { useLayoutEffect, useEffect } from 'react';\r\nimport { isBrowser } from './is-browser.mjs';\r\n\r\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\r\n\r\nexport { useIsomorphicLayoutEffect };\r\n","\"use client\";\r\nimport { jsx, Fragment } from 'react/jsx-runtime';\r\nimport { useMemo, useRef, useState, useContext } from 'react';\r\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\r\nimport { useConstant } from '../../utils/use-constant.mjs';\r\nimport { PresenceChild } from './PresenceChild.mjs';\r\nimport { usePresence } from './use-presence.mjs';\r\nimport { onlyElements, getChildKey } from './utils.mjs';\r\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\r\n\r\n/**\r\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\r\n *\r\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\r\n *\r\n * Any `motion` components that have an `exit` property defined will animate out when removed from\r\n * the tree.\r\n *\r\n * ```jsx\r\n * import { motion, AnimatePresence } from 'framer-motion'\r\n *\r\n * export const Items = ({ items }) => (\r\n *   <AnimatePresence>\r\n *     {items.map(item => (\r\n *       <motion.div\r\n *         key={item.id}\r\n *         initial={{ opacity: 0 }}\r\n *         animate={{ opacity: 1 }}\r\n *         exit={{ opacity: 0 }}\r\n *       />\r\n *     ))}\r\n *   </AnimatePresence>\r\n * )\r\n * ```\r\n *\r\n * You can sequence exit animations throughout a tree using variants.\r\n *\r\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\r\n * once all `motion` components have finished animating out. Likewise, any components using\r\n * `usePresence` all need to call `safeToRemove`.\r\n *\r\n * @public\r\n */\r\nconst AnimatePresence = ({ children, custom, initial = true, onExitComplete, presenceAffectsLayout = true, mode = \"sync\", propagate = false, }) => {\r\n    const [isParentPresent, safeToRemove] = usePresence(propagate);\r\n    /**\r\n     * Filter any children that aren't ReactElements. We can only track components\r\n     * between renders with a props.key.\r\n     */\r\n    const presentChildren = useMemo(() => onlyElements(children), [children]);\r\n    /**\r\n     * Track the keys of the currently rendered children. This is used to\r\n     * determine which children are exiting.\r\n     */\r\n    const presentKeys = propagate && !isParentPresent ? [] : presentChildren.map(getChildKey);\r\n    /**\r\n     * If `initial={false}` we only want to pass this to components in the first render.\r\n     */\r\n    const isInitialRender = useRef(true);\r\n    /**\r\n     * A ref containing the currently present children. When all exit animations\r\n     * are complete, we use this to re-render the component with the latest children\r\n     * *committed* rather than the latest children *rendered*.\r\n     */\r\n    const pendingPresentChildren = useRef(presentChildren);\r\n    /**\r\n     * Track which exiting children have finished animating out.\r\n     */\r\n    const exitComplete = useConstant(() => new Map());\r\n    /**\r\n     * Save children to render as React state. To ensure this component is concurrent-safe,\r\n     * we check for exiting children via an effect.\r\n     */\r\n    const [diffedChildren, setDiffedChildren] = useState(presentChildren);\r\n    const [renderedChildren, setRenderedChildren] = useState(presentChildren);\r\n    useIsomorphicLayoutEffect(() => {\r\n        isInitialRender.current = false;\r\n        pendingPresentChildren.current = presentChildren;\r\n        /**\r\n         * Update complete status of exiting children.\r\n         */\r\n        for (let i = 0; i < renderedChildren.length; i++) {\r\n            const key = getChildKey(renderedChildren[i]);\r\n            if (!presentKeys.includes(key)) {\r\n                if (exitComplete.get(key) !== true) {\r\n                    exitComplete.set(key, false);\r\n                }\r\n            }\r\n            else {\r\n                exitComplete.delete(key);\r\n            }\r\n        }\r\n    }, [renderedChildren, presentKeys.length, presentKeys.join(\"-\")]);\r\n    const exitingChildren = [];\r\n    if (presentChildren !== diffedChildren) {\r\n        let nextChildren = [...presentChildren];\r\n        /**\r\n         * Loop through all the currently rendered components and decide which\r\n         * are exiting.\r\n         */\r\n        for (let i = 0; i < renderedChildren.length; i++) {\r\n            const child = renderedChildren[i];\r\n            const key = getChildKey(child);\r\n            if (!presentKeys.includes(key)) {\r\n                nextChildren.splice(i, 0, child);\r\n                exitingChildren.push(child);\r\n            }\r\n        }\r\n        /**\r\n         * If we're in \"wait\" mode, and we have exiting children, we want to\r\n         * only render these until they've all exited.\r\n         */\r\n        if (mode === \"wait\" && exitingChildren.length) {\r\n            nextChildren = exitingChildren;\r\n        }\r\n        setRenderedChildren(onlyElements(nextChildren));\r\n        setDiffedChildren(presentChildren);\r\n        /**\r\n         * Early return to ensure once we've set state with the latest diffed\r\n         * children, we can immediately re-render.\r\n         */\r\n        return;\r\n    }\r\n    if (process.env.NODE_ENV !== \"production\" &&\r\n        mode === \"wait\" &&\r\n        renderedChildren.length > 1) {\r\n        console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to \"wait\". This will lead to odd visual behaviour.`);\r\n    }\r\n    /**\r\n     * If we've been provided a forceRender function by the LayoutGroupContext,\r\n     * we can use it to force a re-render amongst all surrounding components once\r\n     * all components have finished animating out.\r\n     */\r\n    const { forceRender } = useContext(LayoutGroupContext);\r\n    return (jsx(Fragment, { children: renderedChildren.map((child) => {\r\n            const key = getChildKey(child);\r\n            const isPresent = propagate && !isParentPresent\r\n                ? false\r\n                : presentChildren === renderedChildren ||\r\n                    presentKeys.includes(key);\r\n            const onExit = () => {\r\n                if (exitComplete.has(key)) {\r\n                    exitComplete.set(key, true);\r\n                }\r\n                else {\r\n                    return;\r\n                }\r\n                let isEveryExitComplete = true;\r\n                exitComplete.forEach((isExitComplete) => {\r\n                    if (!isExitComplete)\r\n                        isEveryExitComplete = false;\r\n                });\r\n                if (isEveryExitComplete) {\r\n                    forceRender === null || forceRender === void 0 ? void 0 : forceRender();\r\n                    setRenderedChildren(pendingPresentChildren.current);\r\n                    propagate && (safeToRemove === null || safeToRemove === void 0 ? void 0 : safeToRemove());\r\n                    onExitComplete && onExitComplete();\r\n                }\r\n            };\r\n            return (jsx(PresenceChild, { isPresent: isPresent, initial: !isInitialRender.current || initial\r\n                    ? undefined\r\n                    : false, custom: isPresent ? undefined : custom, presenceAffectsLayout: presenceAffectsLayout, mode: mode, onExitComplete: isPresent ? undefined : onExit, children: child }, key));\r\n        }) }));\r\n};\r\n\r\nexport { AnimatePresence };\r\n","/*#__NO_SIDE_EFFECTS__*/\r\nconst noop = (any) => any;\r\n\r\nexport { noop };\r\n","import { noop } from './noop.mjs';\r\n\r\nlet warning = noop;\r\nlet invariant = noop;\r\nif (process.env.NODE_ENV !== \"production\") {\r\n    warning = (check, message) => {\r\n        if (!check && typeof console !== \"undefined\") {\r\n            console.warn(message);\r\n        }\r\n    };\r\n    invariant = (check, message) => {\r\n        if (!check) {\r\n            throw new Error(message);\r\n        }\r\n    };\r\n}\r\n\r\nexport { invariant, warning };\r\n","/*#__NO_SIDE_EFFECTS__*/\r\nfunction memo(callback) {\r\n    let result;\r\n    return () => {\r\n        if (result === undefined)\r\n            result = callback();\r\n        return result;\r\n    };\r\n}\r\n\r\nexport { memo };\r\n","/*\r\n  Progress within given range\r\n\r\n  Given a lower limit and an upper limit, we return the progress\r\n  (expressed as a number 0-1) represented by the given value, and\r\n  limit that progress to within 0-1.\r\n\r\n  @param [number]: Lower limit\r\n  @param [number]: Upper limit\r\n  @param [number]: Value to find progress within given range\r\n  @return [number]: Progress of value within range as expressed 0-1\r\n*/\r\n/*#__NO_SIDE_EFFECTS__*/\r\nconst progress = (from, to, value) => {\r\n    const toFromDifference = to - from;\r\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\r\n};\r\n\r\nexport { progress };\r\n","/**\r\n * Converts seconds to milliseconds\r\n *\r\n * @param seconds - Time in seconds.\r\n * @return milliseconds - Converted time in milliseconds.\r\n */\r\n/*#__NO_SIDE_EFFECTS__*/\r\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\r\n/*#__NO_SIDE_EFFECTS__*/\r\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\r\n\r\nexport { millisecondsToSeconds, secondsToMilliseconds };\r\n","const MotionGlobalConfig = {\r\n    skipAnimations: false,\r\n    useManualTiming: false,\r\n};\r\n\r\nexport { MotionGlobalConfig };\r\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\r\nimport { createRenderStep } from './render-step.mjs';\r\n\r\nconst stepsOrder = [\r\n    \"read\", // Read\r\n    \"resolveKeyframes\", // Write/Read/Write/Read\r\n    \"update\", // Compute\r\n    \"preRender\", // Compute\r\n    \"render\", // Write\r\n    \"postRender\", // Compute\r\n];\r\nconst maxElapsed = 40;\r\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\r\n    let runNextFrame = false;\r\n    let useDefaultElapsed = true;\r\n    const state = {\r\n        delta: 0.0,\r\n        timestamp: 0.0,\r\n        isProcessing: false,\r\n    };\r\n    const flagRunNextFrame = () => (runNextFrame = true);\r\n    const steps = stepsOrder.reduce((acc, key) => {\r\n        acc[key] = createRenderStep(flagRunNextFrame);\r\n        return acc;\r\n    }, {});\r\n    const { read, resolveKeyframes, update, preRender, render, postRender } = steps;\r\n    const processBatch = () => {\r\n        const timestamp = MotionGlobalConfig.useManualTiming\r\n            ? state.timestamp\r\n            : performance.now();\r\n        runNextFrame = false;\r\n        state.delta = useDefaultElapsed\r\n            ? 1000 / 60\r\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\r\n        state.timestamp = timestamp;\r\n        state.isProcessing = true;\r\n        // Unrolled render loop for better per-frame performance\r\n        read.process(state);\r\n        resolveKeyframes.process(state);\r\n        update.process(state);\r\n        preRender.process(state);\r\n        render.process(state);\r\n        postRender.process(state);\r\n        state.isProcessing = false;\r\n        if (runNextFrame && allowKeepAlive) {\r\n            useDefaultElapsed = false;\r\n            scheduleNextBatch(processBatch);\r\n        }\r\n    };\r\n    const wake = () => {\r\n        runNextFrame = true;\r\n        useDefaultElapsed = true;\r\n        if (!state.isProcessing) {\r\n            scheduleNextBatch(processBatch);\r\n        }\r\n    };\r\n    const schedule = stepsOrder.reduce((acc, key) => {\r\n        const step = steps[key];\r\n        acc[key] = (process, keepAlive = false, immediate = false) => {\r\n            if (!runNextFrame)\r\n                wake();\r\n            return step.schedule(process, keepAlive, immediate);\r\n        };\r\n        return acc;\r\n    }, {});\r\n    const cancel = (process) => {\r\n        for (let i = 0; i < stepsOrder.length; i++) {\r\n            steps[stepsOrder[i]].cancel(process);\r\n        }\r\n    };\r\n    return { schedule, cancel, state, steps };\r\n}\r\n\r\nexport { createRenderBatcher, stepsOrder };\r\n","function createRenderStep(runNextFrame) {\r\n    /**\r\n     * We create and reuse two queues, one to queue jobs for the current frame\r\n     * and one for the next. We reuse to avoid triggering GC after x frames.\r\n     */\r\n    let thisFrame = new Set();\r\n    let nextFrame = new Set();\r\n    /**\r\n     * Track whether we're currently processing jobs in this step. This way\r\n     * we can decide whether to schedule new jobs for this frame or next.\r\n     */\r\n    let isProcessing = false;\r\n    let flushNextFrame = false;\r\n    /**\r\n     * A set of processes which were marked keepAlive when scheduled.\r\n     */\r\n    const toKeepAlive = new WeakSet();\r\n    let latestFrameData = {\r\n        delta: 0.0,\r\n        timestamp: 0.0,\r\n        isProcessing: false,\r\n    };\r\n    function triggerCallback(callback) {\r\n        if (toKeepAlive.has(callback)) {\r\n            step.schedule(callback);\r\n            runNextFrame();\r\n        }\r\n        callback(latestFrameData);\r\n    }\r\n    const step = {\r\n        /**\r\n         * Schedule a process to run on the next frame.\r\n         */\r\n        schedule: (callback, keepAlive = false, immediate = false) => {\r\n            const addToCurrentFrame = immediate && isProcessing;\r\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\r\n            if (keepAlive)\r\n                toKeepAlive.add(callback);\r\n            if (!queue.has(callback))\r\n                queue.add(callback);\r\n            return callback;\r\n        },\r\n        /**\r\n         * Cancel the provided callback from running on the next frame.\r\n         */\r\n        cancel: (callback) => {\r\n            nextFrame.delete(callback);\r\n            toKeepAlive.delete(callback);\r\n        },\r\n        /**\r\n         * Execute all schedule callbacks.\r\n         */\r\n        process: (frameData) => {\r\n            latestFrameData = frameData;\r\n            /**\r\n             * If we're already processing we've probably been triggered by a flushSync\r\n             * inside an existing process. Instead of executing, mark flushNextFrame\r\n             * as true and ensure we flush the following frame at the end of this one.\r\n             */\r\n            if (isProcessing) {\r\n                flushNextFrame = true;\r\n                return;\r\n            }\r\n            isProcessing = true;\r\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\r\n            // Execute this frame\r\n            thisFrame.forEach(triggerCallback);\r\n            // Clear the frame so no callbacks remain. This is to avoid\r\n            // memory leaks should this render step not run for a while.\r\n            thisFrame.clear();\r\n            isProcessing = false;\r\n            if (flushNextFrame) {\r\n                flushNextFrame = false;\r\n                step.process(frameData);\r\n            }\r\n        },\r\n    };\r\n    return step;\r\n}\r\n\r\nexport { createRenderStep };\r\n","import { noop } from 'motion-utils';\r\nimport { createRenderBatcher } from './batcher.mjs';\r\n\r\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps: frameSteps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\r\n\r\nexport { cancelFrame, frame, frameData, frameSteps };\r\n","\"use client\";\r\nimport { createContext } from 'react';\r\n\r\nconst LazyContext = createContext({ strict: false });\r\n\r\nexport { LazyContext };\r\n","const featureProps = {\r\n    animation: [\r\n        \"animate\",\r\n        \"variants\",\r\n        \"whileHover\",\r\n        \"whileTap\",\r\n        \"exit\",\r\n        \"whileInView\",\r\n        \"whileFocus\",\r\n        \"whileDrag\",\r\n    ],\r\n    exit: [\"exit\"],\r\n    drag: [\"drag\", \"dragControls\"],\r\n    focus: [\"whileFocus\"],\r\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\r\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\r\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\r\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\r\n    layout: [\"layout\", \"layoutId\"],\r\n};\r\nconst featureDefinitions = {};\r\nfor (const key in featureProps) {\r\n    featureDefinitions[key] = {\r\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\r\n    };\r\n}\r\n\r\nexport { featureDefinitions };\r\n","/**\r\n * A list of all valid MotionProps.\r\n *\r\n * @privateRemarks\r\n * This doesn't throw if a `MotionProp` name is missing - it should.\r\n */\r\nconst validMotionProps = new Set([\r\n    \"animate\",\r\n    \"exit\",\r\n    \"variants\",\r\n    \"initial\",\r\n    \"style\",\r\n    \"values\",\r\n    \"variants\",\r\n    \"transition\",\r\n    \"transformTemplate\",\r\n    \"custom\",\r\n    \"inherit\",\r\n    \"onBeforeLayoutMeasure\",\r\n    \"onAnimationStart\",\r\n    \"onAnimationComplete\",\r\n    \"onUpdate\",\r\n    \"onDragStart\",\r\n    \"onDrag\",\r\n    \"onDragEnd\",\r\n    \"onMeasureDragConstraints\",\r\n    \"onDirectionLock\",\r\n    \"onDragTransitionEnd\",\r\n    \"_dragX\",\r\n    \"_dragY\",\r\n    \"onHoverStart\",\r\n    \"onHoverEnd\",\r\n    \"onViewportEnter\",\r\n    \"onViewportLeave\",\r\n    \"globalTapTarget\",\r\n    \"ignoreStrict\",\r\n    \"viewport\",\r\n]);\r\n/**\r\n * Check whether a prop name is a valid `MotionProp` key.\r\n *\r\n * @param key - Name of the property to check\r\n * @returns `true` is key is a valid `MotionProp`.\r\n *\r\n * @public\r\n */\r\nfunction isValidMotionProp(key) {\r\n    return (key.startsWith(\"while\") ||\r\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\r\n        key.startsWith(\"layout\") ||\r\n        key.startsWith(\"onTap\") ||\r\n        key.startsWith(\"onPan\") ||\r\n        key.startsWith(\"onLayout\") ||\r\n        validMotionProps.has(key));\r\n}\r\n\r\nexport { isValidMotionProp };\r\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\r\n\r\nlet shouldForward = (key) => !isValidMotionProp(key);\r\nfunction loadExternalIsValidProp(isValidProp) {\r\n    if (!isValidProp)\r\n        return;\r\n    // Explicitly filter our events\r\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\r\n}\r\n/**\r\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\r\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\r\n * of these should be passed to the underlying DOM node.\r\n *\r\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\r\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\r\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\r\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\r\n *\r\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\r\n * actually required.\r\n */\r\ntry {\r\n    /**\r\n     * We attempt to import this package but require won't be defined in esm environments, in that case\r\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\r\n     * in favour of explicit injection.\r\n     */\r\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\r\n}\r\ncatch (_a) {\r\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\r\n}\r\nfunction filterProps(props, isDom, forwardMotionProps) {\r\n    const filteredProps = {};\r\n    for (const key in props) {\r\n        /**\r\n         * values is considered a valid prop by Emotion, so if it's present\r\n         * this will be rendered out to the DOM unless explicitly filtered.\r\n         *\r\n         * We check the type as it could be used with the `feColorMatrix`\r\n         * element, which we support.\r\n         */\r\n        if (key === \"values\" && typeof props.values === \"object\")\r\n            continue;\r\n        if (shouldForward(key) ||\r\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\r\n            (!isDom && !isValidMotionProp(key)) ||\r\n            // If trying to use native HTML drag events, forward drag listeners\r\n            (props[\"draggable\"] &&\r\n                key.startsWith(\"onDrag\"))) {\r\n            filteredProps[key] =\r\n                props[key];\r\n        }\r\n    }\r\n    return filteredProps;\r\n}\r\n\r\nexport { filterProps, loadExternalIsValidProp };\r\n","import { warnOnce } from '../../utils/warn-once.mjs';\r\n\r\nfunction createDOMMotionComponentProxy(componentFactory) {\r\n    if (typeof Proxy === \"undefined\") {\r\n        return componentFactory;\r\n    }\r\n    /**\r\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\r\n     * Rather than generating them anew every render.\r\n     */\r\n    const componentCache = new Map();\r\n    const deprecatedFactoryFunction = (...args) => {\r\n        if (process.env.NODE_ENV !== \"production\") {\r\n            warnOnce(false, \"motion() is deprecated. Use motion.create() instead.\");\r\n        }\r\n        return componentFactory(...args);\r\n    };\r\n    return new Proxy(deprecatedFactoryFunction, {\r\n        /**\r\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\r\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\r\n         * DOM component with that name.\r\n         */\r\n        get: (_target, key) => {\r\n            if (key === \"create\")\r\n                return componentFactory;\r\n            /**\r\n             * If this element doesn't exist in the component cache, create it and cache.\r\n             */\r\n            if (!componentCache.has(key)) {\r\n                componentCache.set(key, componentFactory(key));\r\n            }\r\n            return componentCache.get(key);\r\n        },\r\n    });\r\n}\r\n\r\nexport { createDOMMotionComponentProxy };\r\n","\"use client\";\r\nimport { createContext } from 'react';\r\n\r\nconst MotionContext = createContext({});\r\n\r\nexport { MotionContext };\r\n","/**\r\n * Decides if the supplied variable is variant label\r\n */\r\nfunction isVariantLabel(v) {\r\n    return typeof v === \"string\" || Array.isArray(v);\r\n}\r\n\r\nexport { isVariantLabel };\r\n","function isAnimationControls(v) {\r\n    return (v !== null &&\r\n        typeof v === \"object\" &&\r\n        typeof v.start === \"function\");\r\n}\r\n\r\nexport { isAnimationControls };\r\n","const variantPriorityOrder = [\r\n    \"animate\",\r\n    \"whileInView\",\r\n    \"whileFocus\",\r\n    \"whileHover\",\r\n    \"whileTap\",\r\n    \"whileDrag\",\r\n    \"exit\",\r\n];\r\nconst variantProps = [\"initial\", ...variantPriorityOrder];\r\n\r\nexport { variantPriorityOrder, variantProps };\r\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\r\nimport { isVariantLabel } from './is-variant-label.mjs';\r\nimport { variantProps } from './variant-props.mjs';\r\n\r\nfunction isControllingVariants(props) {\r\n    return (isAnimationControls(props.animate) ||\r\n        variantProps.some((name) => isVariantLabel(props[name])));\r\n}\r\nfunction isVariantNode(props) {\r\n    return Boolean(isControllingVariants(props) || props.variants);\r\n}\r\n\r\nexport { isControllingVariants, isVariantNode };\r\n","import { useContext, useMemo } from 'react';\r\nimport { MotionContext } from './index.mjs';\r\nimport { getCurrentTreeVariants } from './utils.mjs';\r\n\r\nfunction useCreateMotionContext(props) {\r\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\r\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\r\n}\r\nfunction variantLabelsAsDependency(prop) {\r\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\r\n}\r\n\r\nexport { useCreateMotionContext };\r\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\r\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\r\n\r\nfunction getCurrentTreeVariants(props, context) {\r\n    if (isControllingVariants(props)) {\r\n        const { initial, animate } = props;\r\n        return {\r\n            initial: initial === false || isVariantLabel(initial)\r\n                ? initial\r\n                : undefined,\r\n            animate: isVariantLabel(animate) ? animate : undefined,\r\n        };\r\n    }\r\n    return props.inherit !== false ? context : {};\r\n}\r\n\r\nexport { getCurrentTreeVariants };\r\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\r\n\r\nexport { motionComponentSymbol };\r\n","function isRefObject(ref) {\r\n    return (ref &&\r\n        typeof ref === \"object\" &&\r\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\r\n}\r\n\r\nexport { isRefObject };\r\n","import { useCallback } from 'react';\r\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\r\n\r\n/**\r\n * Creates a ref function that, when called, hydrates the provided\r\n * external ref and VisualElement.\r\n */\r\nfunction useMotionRef(visualState, visualElement, externalRef) {\r\n    return useCallback((instance) => {\r\n        if (instance) {\r\n            visualState.onMount && visualState.onMount(instance);\r\n        }\r\n        if (visualElement) {\r\n            if (instance) {\r\n                visualElement.mount(instance);\r\n            }\r\n            else {\r\n                visualElement.unmount();\r\n            }\r\n        }\r\n        if (externalRef) {\r\n            if (typeof externalRef === \"function\") {\r\n                externalRef(instance);\r\n            }\r\n            else if (isRefObject(externalRef)) {\r\n                externalRef.current = instance;\r\n            }\r\n        }\r\n    }, \r\n    /**\r\n     * Only pass a new ref callback to React if we've received a visual element\r\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\r\n     * or other dependencies change.\r\n     */\r\n    [visualElement]);\r\n}\r\n\r\nexport { useMotionRef };\r\n","/**\r\n * Convert camelCase to dash-case properties.\r\n */\r\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\r\n\r\nexport { camelToDash };\r\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\r\n\r\nconst optimizedAppearDataId = \"framerAppearId\";\r\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\r\n\r\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\r\n","import { createRenderBatcher } from './batcher.mjs';\r\n\r\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\r\n\r\nexport { cancelMicrotask, microtask };\r\n","\"use client\";\r\nimport { createContext } from 'react';\r\n\r\n/**\r\n * Internal, exported only for usage in Framer\r\n */\r\nconst SwitchLayoutGroupContext = createContext({});\r\n\r\nexport { SwitchLayoutGroupContext };\r\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\r\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\r\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\r\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\r\nimport { LazyContext } from '../../context/LazyContext.mjs';\r\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\r\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\r\nimport { microtask } from '../../frameloop/microtask.mjs';\r\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\r\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\r\n\r\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\r\n    var _a, _b;\r\n    const { visualElement: parent } = useContext(MotionContext);\r\n    const lazyContext = useContext(LazyContext);\r\n    const presenceContext = useContext(PresenceContext);\r\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\r\n    const visualElementRef = useRef(null);\r\n    /**\r\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\r\n     */\r\n    createVisualElement = createVisualElement || lazyContext.renderer;\r\n    if (!visualElementRef.current && createVisualElement) {\r\n        visualElementRef.current = createVisualElement(Component, {\r\n            visualState,\r\n            parent,\r\n            props,\r\n            presenceContext,\r\n            blockInitialAnimation: presenceContext\r\n                ? presenceContext.initial === false\r\n                : false,\r\n            reducedMotionConfig,\r\n        });\r\n    }\r\n    const visualElement = visualElementRef.current;\r\n    /**\r\n     * Load Motion gesture and animation features. These are rendered as renderless\r\n     * components so each feature can optionally make use of React lifecycle methods.\r\n     */\r\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\r\n    if (visualElement &&\r\n        !visualElement.projection &&\r\n        ProjectionNodeConstructor &&\r\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\r\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\r\n    }\r\n    const isMounted = useRef(false);\r\n    useInsertionEffect(() => {\r\n        /**\r\n         * Check the component has already mounted before calling\r\n         * `update` unnecessarily. This ensures we skip the initial update.\r\n         */\r\n        if (visualElement && isMounted.current) {\r\n            visualElement.update(props, presenceContext);\r\n        }\r\n    });\r\n    /**\r\n     * Cache this value as we want to know whether HandoffAppearAnimations\r\n     * was present on initial render - it will be deleted after this.\r\n     */\r\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\r\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\r\n        !((_a = window.MotionHandoffIsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId)) &&\r\n        ((_b = window.MotionHasOptimisedAnimation) === null || _b === void 0 ? void 0 : _b.call(window, optimisedAppearId)));\r\n    useIsomorphicLayoutEffect(() => {\r\n        if (!visualElement)\r\n            return;\r\n        isMounted.current = true;\r\n        window.MotionIsMounted = true;\r\n        visualElement.updateFeatures();\r\n        microtask.render(visualElement.render);\r\n        /**\r\n         * Ideally this function would always run in a useEffect.\r\n         *\r\n         * However, if we have optimised appear animations to handoff from,\r\n         * it needs to happen synchronously to ensure there's no flash of\r\n         * incorrect styles in the event of a hydration error.\r\n         *\r\n         * So if we detect a situtation where optimised appear animations\r\n         * are running, we use useLayoutEffect to trigger animations.\r\n         */\r\n        if (wantsHandoff.current && visualElement.animationState) {\r\n            visualElement.animationState.animateChanges();\r\n        }\r\n    });\r\n    useEffect(() => {\r\n        if (!visualElement)\r\n            return;\r\n        if (!wantsHandoff.current && visualElement.animationState) {\r\n            visualElement.animationState.animateChanges();\r\n        }\r\n        if (wantsHandoff.current) {\r\n            // This ensures all future calls to animateChanges() in this component will run in useEffect\r\n            queueMicrotask(() => {\r\n                var _a;\r\n                (_a = window.MotionHandoffMarkAsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId);\r\n            });\r\n            wantsHandoff.current = false;\r\n        }\r\n    });\r\n    return visualElement;\r\n}\r\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\r\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = props;\r\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\r\n        ? undefined\r\n        : getClosestProjectingNode(visualElement.parent));\r\n    visualElement.projection.setOptions({\r\n        layoutId,\r\n        layout,\r\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\r\n        visualElement,\r\n        /**\r\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\r\n         * to update by the time layout animations run.\r\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\r\n         * ensuring it gets called if there's no potential layout animations.\r\n         *\r\n         */\r\n        animationType: typeof layout === \"string\" ? layout : \"both\",\r\n        initialPromotionConfig,\r\n        layoutScroll,\r\n        layoutRoot,\r\n    });\r\n}\r\nfunction getClosestProjectingNode(visualElement) {\r\n    if (!visualElement)\r\n        return undefined;\r\n    return visualElement.options.allowProjection !== false\r\n        ? visualElement.projection\r\n        : getClosestProjectingNode(visualElement.parent);\r\n}\r\n\r\nexport { useVisualElement };\r\n","\"use client\";\r\nimport { jsxs, jsx } from 'react/jsx-runtime';\r\nimport { warning, invariant } from 'motion-utils';\r\nimport { forwardRef, useContext } from 'react';\r\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\r\nimport { LazyContext } from '../context/LazyContext.mjs';\r\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\r\nimport { MotionContext } from '../context/MotionContext/index.mjs';\r\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\r\nimport { isBrowser } from '../utils/is-browser.mjs';\r\nimport { featureDefinitions } from './features/definitions.mjs';\r\nimport { loadFeatures } from './features/load-features.mjs';\r\nimport { motionComponentSymbol } from './utils/symbol.mjs';\r\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\r\nimport { useVisualElement } from './utils/use-visual-element.mjs';\r\n\r\n/**\r\n * Create a `motion` component.\r\n *\r\n * This function accepts a Component argument, which can be either a string (ie \"div\"\r\n * for `motion.div`), or an actual React component.\r\n *\r\n * Alongside this is a config option which provides a way of rendering the provided\r\n * component \"offline\", or outside the React render cycle.\r\n */\r\nfunction createRendererMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\r\n    var _a, _b;\r\n    preloadedFeatures && loadFeatures(preloadedFeatures);\r\n    function MotionComponent(props, externalRef) {\r\n        /**\r\n         * If we need to measure the element we load this functionality in a\r\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\r\n         */\r\n        let MeasureLayout;\r\n        const configAndProps = {\r\n            ...useContext(MotionConfigContext),\r\n            ...props,\r\n            layoutId: useLayoutId(props),\r\n        };\r\n        const { isStatic } = configAndProps;\r\n        const context = useCreateMotionContext(props);\r\n        const visualState = useVisualState(props, isStatic);\r\n        if (!isStatic && isBrowser) {\r\n            useStrictMode(configAndProps, preloadedFeatures);\r\n            const layoutProjection = getProjectionFunctionality(configAndProps);\r\n            MeasureLayout = layoutProjection.MeasureLayout;\r\n            /**\r\n             * Create a VisualElement for this component. A VisualElement provides a common\r\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\r\n             * providing a way of rendering to these APIs outside of the React render loop\r\n             * for more performant animations and interactions\r\n             */\r\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\r\n        }\r\n        /**\r\n         * The mount order and hierarchy is specific to ensure our element ref\r\n         * is hydrated by the time features fire their effects.\r\n         */\r\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\r\n    }\r\n    MotionComponent.displayName = `motion.${typeof Component === \"string\"\r\n        ? Component\r\n        : `create(${(_b = (_a = Component.displayName) !== null && _a !== void 0 ? _a : Component.name) !== null && _b !== void 0 ? _b : \"\"})`}`;\r\n    const ForwardRefMotionComponent = forwardRef(MotionComponent);\r\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\r\n    return ForwardRefMotionComponent;\r\n}\r\nfunction useLayoutId({ layoutId }) {\r\n    const layoutGroupId = useContext(LayoutGroupContext).id;\r\n    return layoutGroupId && layoutId !== undefined\r\n        ? layoutGroupId + \"-\" + layoutId\r\n        : layoutId;\r\n}\r\nfunction useStrictMode(configAndProps, preloadedFeatures) {\r\n    const isStrict = useContext(LazyContext).strict;\r\n    /**\r\n     * If we're in development mode, check to make sure we're not rendering a motion component\r\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\r\n     */\r\n    if (process.env.NODE_ENV !== \"production\" &&\r\n        preloadedFeatures &&\r\n        isStrict) {\r\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\r\n        configAndProps.ignoreStrict\r\n            ? warning(false, strictMessage)\r\n            : invariant(false, strictMessage);\r\n    }\r\n}\r\nfunction getProjectionFunctionality(props) {\r\n    const { drag, layout } = featureDefinitions;\r\n    if (!drag && !layout)\r\n        return {};\r\n    const combined = { ...drag, ...layout };\r\n    return {\r\n        MeasureLayout: (drag === null || drag === void 0 ? void 0 : drag.isEnabled(props)) || (layout === null || layout === void 0 ? void 0 : layout.isEnabled(props))\r\n            ? combined.MeasureLayout\r\n            : undefined,\r\n        ProjectionNode: combined.ProjectionNode,\r\n    };\r\n}\r\n\r\nexport { createRendererMotionComponent };\r\n","import { featureDefinitions } from './definitions.mjs';\r\n\r\nfunction loadFeatures(features) {\r\n    for (const key in features) {\r\n        featureDefinitions[key] = {\r\n            ...featureDefinitions[key],\r\n            ...features[key],\r\n        };\r\n    }\r\n}\r\n\r\nexport { loadFeatures };\r\n","/**\r\n * We keep these listed separately as we use the lowercase tag names as part\r\n * of the runtime bundle to detect SVG components\r\n */\r\nconst lowercaseSVGElements = [\r\n    \"animate\",\r\n    \"circle\",\r\n    \"defs\",\r\n    \"desc\",\r\n    \"ellipse\",\r\n    \"g\",\r\n    \"image\",\r\n    \"line\",\r\n    \"filter\",\r\n    \"marker\",\r\n    \"mask\",\r\n    \"metadata\",\r\n    \"path\",\r\n    \"pattern\",\r\n    \"polygon\",\r\n    \"polyline\",\r\n    \"rect\",\r\n    \"stop\",\r\n    \"switch\",\r\n    \"symbol\",\r\n    \"svg\",\r\n    \"text\",\r\n    \"tspan\",\r\n    \"use\",\r\n    \"view\",\r\n];\r\n\r\nexport { lowercaseSVGElements };\r\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\r\n\r\nfunction isSVGComponent(Component) {\r\n    if (\r\n    /**\r\n     * If it's not a string, it's a custom React component. Currently we only support\r\n     * HTML custom React components.\r\n     */\r\n    typeof Component !== \"string\" ||\r\n        /**\r\n         * If it contains a dash, the element is a custom HTML webcomponent.\r\n         */\r\n        Component.includes(\"-\")) {\r\n        return false;\r\n    }\r\n    else if (\r\n    /**\r\n     * If it's in our list of lowercase SVG tags, it's an SVG component\r\n     */\r\n    lowercaseSVGElements.indexOf(Component) > -1 ||\r\n        /**\r\n         * If it contains a capital letter, it's an SVG component\r\n         */\r\n        /[A-Z]/u.test(Component)) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\nexport { isSVGComponent };\r\n","function getValueState(visualElement) {\r\n    const state = [{}, {}];\r\n    visualElement === null || visualElement === void 0 ? void 0 : visualElement.values.forEach((value, key) => {\r\n        state[0][key] = value.get();\r\n        state[1][key] = value.getVelocity();\r\n    });\r\n    return state;\r\n}\r\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\r\n    /**\r\n     * If the variant definition is a function, resolve.\r\n     */\r\n    if (typeof definition === \"function\") {\r\n        const [current, velocity] = getValueState(visualElement);\r\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\r\n    }\r\n    /**\r\n     * If the variant definition is a variant label, or\r\n     * the function returned a variant label, resolve.\r\n     */\r\n    if (typeof definition === \"string\") {\r\n        definition = props.variants && props.variants[definition];\r\n    }\r\n    /**\r\n     * At this point we've resolved both functions and variant labels,\r\n     * but the resolved variant label might itself have been a function.\r\n     * If so, resolve. This can only have returned a valid target object.\r\n     */\r\n    if (typeof definition === \"function\") {\r\n        const [current, velocity] = getValueState(visualElement);\r\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\r\n    }\r\n    return definition;\r\n}\r\n\r\nexport { resolveVariantFromProps };\r\n","const isKeyframesTarget = (v) => {\r\n    return Array.isArray(v);\r\n};\r\n\r\nexport { isKeyframesTarget };\r\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\r\n\r\nexport { isMotionValue };\r\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\r\nimport { isMotionValue } from './is-motion-value.mjs';\r\n\r\n/**\r\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\r\n *\r\n * TODO: Remove and move to library\r\n */\r\nfunction resolveMotionValue(value) {\r\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\r\n    return isCustomValue(unwrappedValue)\r\n        ? unwrappedValue.toValue()\r\n        : unwrappedValue;\r\n}\r\n\r\nexport { resolveMotionValue };\r\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\r\n\r\nconst isCustomValue = (v) => {\r\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\r\n};\r\nconst resolveFinalValueInKeyframes = (v) => {\r\n    // TODO maybe throw if v.length - 1 is placeholder token?\r\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\r\n};\r\n\r\nexport { isCustomValue, resolveFinalValueInKeyframes };\r\n","import { useContext } from 'react';\r\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\r\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\r\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\r\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\r\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\r\nimport { useConstant } from '../../utils/use-constant.mjs';\r\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\r\n\r\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onUpdate, }, props, context, presenceContext) {\r\n    const state = {\r\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\r\n        renderState: createRenderState(),\r\n    };\r\n    if (onUpdate) {\r\n        /**\r\n         * onMount works without the VisualElement because it could be\r\n         * called before the VisualElement payload has been hydrated.\r\n         * (e.g. if someone is using m components <m.circle />)\r\n         */\r\n        state.onMount = (instance) => onUpdate({ props, current: instance, ...state });\r\n        state.onUpdate = (visualElement) => onUpdate(visualElement);\r\n    }\r\n    return state;\r\n}\r\nconst makeUseVisualState = (config) => (props, isStatic) => {\r\n    const context = useContext(MotionContext);\r\n    const presenceContext = useContext(PresenceContext);\r\n    const make = () => makeState(config, props, context, presenceContext);\r\n    return isStatic ? make() : useConstant(make);\r\n};\r\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\r\n    const values = {};\r\n    const motionValues = scrapeMotionValues(props, {});\r\n    for (const key in motionValues) {\r\n        values[key] = resolveMotionValue(motionValues[key]);\r\n    }\r\n    let { initial, animate } = props;\r\n    const isControllingVariants$1 = isControllingVariants(props);\r\n    const isVariantNode$1 = isVariantNode(props);\r\n    if (context &&\r\n        isVariantNode$1 &&\r\n        !isControllingVariants$1 &&\r\n        props.inherit !== false) {\r\n        if (initial === undefined)\r\n            initial = context.initial;\r\n        if (animate === undefined)\r\n            animate = context.animate;\r\n    }\r\n    let isInitialAnimationBlocked = presenceContext\r\n        ? presenceContext.initial === false\r\n        : false;\r\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\r\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\r\n    if (variantToSet &&\r\n        typeof variantToSet !== \"boolean\" &&\r\n        !isAnimationControls(variantToSet)) {\r\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\r\n        for (let i = 0; i < list.length; i++) {\r\n            const resolved = resolveVariantFromProps(props, list[i]);\r\n            if (resolved) {\r\n                const { transitionEnd, transition, ...target } = resolved;\r\n                for (const key in target) {\r\n                    let valueTarget = target[key];\r\n                    if (Array.isArray(valueTarget)) {\r\n                        /**\r\n                         * Take final keyframe if the initial animation is blocked because\r\n                         * we want to initialise at the end of that blocked animation.\r\n                         */\r\n                        const index = isInitialAnimationBlocked\r\n                            ? valueTarget.length - 1\r\n                            : 0;\r\n                        valueTarget = valueTarget[index];\r\n                    }\r\n                    if (valueTarget !== null) {\r\n                        values[key] = valueTarget;\r\n                    }\r\n                }\r\n                for (const key in transitionEnd) {\r\n                    values[key] = transitionEnd[key];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return values;\r\n}\r\n\r\nexport { makeUseVisualState };\r\n","/**\r\n * Generate a list of every possible transform key.\r\n */\r\nconst transformPropOrder = [\r\n    \"transformPerspective\",\r\n    \"x\",\r\n    \"y\",\r\n    \"z\",\r\n    \"translateX\",\r\n    \"translateY\",\r\n    \"translateZ\",\r\n    \"scale\",\r\n    \"scaleX\",\r\n    \"scaleY\",\r\n    \"rotate\",\r\n    \"rotateX\",\r\n    \"rotateY\",\r\n    \"rotateZ\",\r\n    \"skew\",\r\n    \"skewX\",\r\n    \"skewY\",\r\n];\r\n/**\r\n * A quick lookup for transform props.\r\n */\r\nconst transformProps = new Set(transformPropOrder);\r\n\r\nexport { transformPropOrder, transformProps };\r\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\r\nconst isCSSVariableName = \r\n/*@__PURE__*/ checkStringStartsWith(\"--\");\r\nconst startsAsVariableToken = \r\n/*@__PURE__*/ checkStringStartsWith(\"var(--\");\r\nconst isCSSVariableToken = (value) => {\r\n    const startsWithToken = startsAsVariableToken(value);\r\n    if (!startsWithToken)\r\n        return false;\r\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\r\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\r\n};\r\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\r\n\r\nexport { isCSSVariableName, isCSSVariableToken };\r\n","/**\r\n * Provided a value and a ValueType, returns the value as that value type.\r\n */\r\nconst getValueAsType = (value, type) => {\r\n    return type && typeof value === \"number\"\r\n        ? type.transform(value)\r\n        : value;\r\n};\r\n\r\nexport { getValueAsType };\r\n","const clamp = (min, max, v) => {\r\n    if (v > max)\r\n        return max;\r\n    if (v < min)\r\n        return min;\r\n    return v;\r\n};\r\n\r\nexport { clamp };\r\n","import { clamp } from '../../../utils/clamp.mjs';\r\n\r\nconst number = {\r\n    test: (v) => typeof v === \"number\",\r\n    parse: parseFloat,\r\n    transform: (v) => v,\r\n};\r\nconst alpha = {\r\n    ...number,\r\n    transform: (v) => clamp(0, 1, v),\r\n};\r\nconst scale = {\r\n    ...number,\r\n    default: 1,\r\n};\r\n\r\nexport { alpha, number, scale };\r\n","const createUnitType = (unit) => ({\r\n    test: (v) => typeof v === \"string\" && v.endsWith(unit) && v.split(\" \").length === 1,\r\n    parse: parseFloat,\r\n    transform: (v) => `${v}${unit}`,\r\n});\r\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\r\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\r\nconst px = /*@__PURE__*/ createUnitType(\"px\");\r\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\r\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\r\nconst progressPercentage = {\r\n    ...percent,\r\n    parse: (v) => percent.parse(v) / 100,\r\n    transform: (v) => percent.transform(v * 100),\r\n};\r\n\r\nexport { degrees, percent, progressPercentage, px, vh, vw };\r\n","import { px } from '../../../value/types/numbers/units.mjs';\r\n\r\nconst browserNumberValueTypes = {\r\n    // Border props\r\n    borderWidth: px,\r\n    borderTopWidth: px,\r\n    borderRightWidth: px,\r\n    borderBottomWidth: px,\r\n    borderLeftWidth: px,\r\n    borderRadius: px,\r\n    radius: px,\r\n    borderTopLeftRadius: px,\r\n    borderTopRightRadius: px,\r\n    borderBottomRightRadius: px,\r\n    borderBottomLeftRadius: px,\r\n    // Positioning props\r\n    width: px,\r\n    maxWidth: px,\r\n    height: px,\r\n    maxHeight: px,\r\n    top: px,\r\n    right: px,\r\n    bottom: px,\r\n    left: px,\r\n    // Spacing props\r\n    padding: px,\r\n    paddingTop: px,\r\n    paddingRight: px,\r\n    paddingBottom: px,\r\n    paddingLeft: px,\r\n    margin: px,\r\n    marginTop: px,\r\n    marginRight: px,\r\n    marginBottom: px,\r\n    marginLeft: px,\r\n    // Misc\r\n    backgroundPositionX: px,\r\n    backgroundPositionY: px,\r\n};\r\n\r\nexport { browserNumberValueTypes };\r\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\r\nimport { degrees, px, progressPercentage } from '../../../value/types/numbers/units.mjs';\r\n\r\nconst transformValueTypes = {\r\n    rotate: degrees,\r\n    rotateX: degrees,\r\n    rotateY: degrees,\r\n    rotateZ: degrees,\r\n    scale,\r\n    scaleX: scale,\r\n    scaleY: scale,\r\n    scaleZ: scale,\r\n    skew: degrees,\r\n    skewX: degrees,\r\n    skewY: degrees,\r\n    distance: px,\r\n    translateX: px,\r\n    translateY: px,\r\n    translateZ: px,\r\n    x: px,\r\n    y: px,\r\n    z: px,\r\n    perspective: px,\r\n    transformPerspective: px,\r\n    opacity: alpha,\r\n    originX: progressPercentage,\r\n    originY: progressPercentage,\r\n    originZ: px,\r\n};\r\n\r\nexport { transformValueTypes };\r\n","import { number } from '../../../value/types/numbers/index.mjs';\r\n\r\nconst int = {\r\n    ...number,\r\n    transform: Math.round,\r\n};\r\n\r\nexport { int };\r\n","import { alpha } from '../../../value/types/numbers/index.mjs';\r\nimport { px } from '../../../value/types/numbers/units.mjs';\r\nimport { browserNumberValueTypes } from './number-browser.mjs';\r\nimport { transformValueTypes } from './transform.mjs';\r\nimport { int } from './type-int.mjs';\r\n\r\nconst numberValueTypes = {\r\n    ...browserNumberValueTypes,\r\n    ...transformValueTypes,\r\n    zIndex: int,\r\n    size: px,\r\n    // SVG\r\n    fillOpacity: alpha,\r\n    strokeOpacity: alpha,\r\n    numOctaves: int,\r\n};\r\n\r\nexport { numberValueTypes };\r\n","import { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\r\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\r\nimport { transformPropOrder } from './keys-transform.mjs';\r\n\r\nconst translateAlias = {\r\n    x: \"translateX\",\r\n    y: \"translateY\",\r\n    z: \"translateZ\",\r\n    transformPerspective: \"perspective\",\r\n};\r\nconst numTransforms = transformPropOrder.length;\r\n/**\r\n * Build a CSS transform style from individual x/y/scale etc properties.\r\n *\r\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\r\n * providing a transformTemplate function.\r\n */\r\nfunction buildTransform(latestValues, transform, transformTemplate) {\r\n    // The transform string we're going to build into.\r\n    let transformString = \"\";\r\n    let transformIsDefault = true;\r\n    /**\r\n     * Loop over all possible transforms in order, adding the ones that\r\n     * are present to the transform string.\r\n     */\r\n    for (let i = 0; i < numTransforms; i++) {\r\n        const key = transformPropOrder[i];\r\n        const value = latestValues[key];\r\n        if (value === undefined)\r\n            continue;\r\n        let valueIsDefault = true;\r\n        if (typeof value === \"number\") {\r\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\r\n        }\r\n        else {\r\n            valueIsDefault = parseFloat(value) === 0;\r\n        }\r\n        if (!valueIsDefault || transformTemplate) {\r\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\r\n            if (!valueIsDefault) {\r\n                transformIsDefault = false;\r\n                const transformName = translateAlias[key] || key;\r\n                transformString += `${transformName}(${valueAsType}) `;\r\n            }\r\n            if (transformTemplate) {\r\n                transform[key] = valueAsType;\r\n            }\r\n        }\r\n    }\r\n    transformString = transformString.trim();\r\n    // If we have a custom `transform` template, pass our transform values and\r\n    // generated transformString to that before returning\r\n    if (transformTemplate) {\r\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\r\n    }\r\n    else if (transformIsDefault) {\r\n        transformString = \"none\";\r\n    }\r\n    return transformString;\r\n}\r\n\r\nexport { buildTransform };\r\n","import { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\r\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\r\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\r\nimport { buildTransform } from './build-transform.mjs';\r\nimport { transformProps } from './keys-transform.mjs';\r\n\r\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\r\n    const { style, vars, transformOrigin } = state;\r\n    // Track whether we encounter any transform or transformOrigin values.\r\n    let hasTransform = false;\r\n    let hasTransformOrigin = false;\r\n    /**\r\n     * Loop over all our latest animated values and decide whether to handle them\r\n     * as a style or CSS variable.\r\n     *\r\n     * Transforms and transform origins are kept separately for further processing.\r\n     */\r\n    for (const key in latestValues) {\r\n        const value = latestValues[key];\r\n        if (transformProps.has(key)) {\r\n            // If this is a transform, flag to enable further transform processing\r\n            hasTransform = true;\r\n            continue;\r\n        }\r\n        else if (isCSSVariableName(key)) {\r\n            vars[key] = value;\r\n            continue;\r\n        }\r\n        else {\r\n            // Convert the value to its default value type, ie 0 -> \"0px\"\r\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\r\n            if (key.startsWith(\"origin\")) {\r\n                // If this is a transform origin, flag and enable further transform-origin processing\r\n                hasTransformOrigin = true;\r\n                transformOrigin[key] =\r\n                    valueAsType;\r\n            }\r\n            else {\r\n                style[key] = valueAsType;\r\n            }\r\n        }\r\n    }\r\n    if (!latestValues.transform) {\r\n        if (hasTransform || transformTemplate) {\r\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\r\n        }\r\n        else if (style.transform) {\r\n            /**\r\n             * If we have previously created a transform but currently don't have any,\r\n             * reset transform style to none.\r\n             */\r\n            style.transform = \"none\";\r\n        }\r\n    }\r\n    /**\r\n     * Build a transformOrigin style. Uses the same defaults as the browser for\r\n     * undefined origins.\r\n     */\r\n    if (hasTransformOrigin) {\r\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\r\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\r\n    }\r\n}\r\n\r\nexport { buildHTMLStyles };\r\n","import { px } from '../../../value/types/numbers/units.mjs';\r\n\r\nconst dashKeys = {\r\n    offset: \"stroke-dashoffset\",\r\n    array: \"stroke-dasharray\",\r\n};\r\nconst camelKeys = {\r\n    offset: \"strokeDashoffset\",\r\n    array: \"strokeDasharray\",\r\n};\r\n/**\r\n * Build SVG path properties. Uses the path's measured length to convert\r\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\r\n * and stroke-dasharray attributes.\r\n *\r\n * This function is mutative to reduce per-frame GC.\r\n */\r\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\r\n    // Normalise path length by setting SVG attribute pathLength to 1\r\n    attrs.pathLength = 1;\r\n    // We use dash case when setting attributes directly to the DOM node and camel case\r\n    // when defining props on a React component.\r\n    const keys = useDashCase ? dashKeys : camelKeys;\r\n    // Build the dash offset\r\n    attrs[keys.offset] = px.transform(-offset);\r\n    // Build the dash array\r\n    const pathLength = px.transform(length);\r\n    const pathSpacing = px.transform(spacing);\r\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\r\n}\r\n\r\nexport { buildSVGPath };\r\n","import { px } from '../../../value/types/numbers/units.mjs';\r\n\r\nfunction calcOrigin(origin, offset, size) {\r\n    return typeof origin === \"string\"\r\n        ? origin\r\n        : px.transform(offset + size * origin);\r\n}\r\n/**\r\n * The SVG transform origin defaults are different to CSS and is less intuitive,\r\n * so we use the measured dimensions of the SVG to reconcile these.\r\n */\r\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\r\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\r\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\r\n    return `${pxOriginX} ${pxOriginY}`;\r\n}\r\n\r\nexport { calcSVGTransformOrigin };\r\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\r\nimport { buildSVGPath } from './path.mjs';\r\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\r\n\r\n/**\r\n * Build SVG visual attrbutes, like cx and style.transform\r\n */\r\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \r\n// This is object creation, which we try to avoid per-frame.\r\n...latest }, isSVGTag, transformTemplate) {\r\n    buildHTMLStyles(state, latest, transformTemplate);\r\n    /**\r\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\r\n     * as normal HTML tags.\r\n     */\r\n    if (isSVGTag) {\r\n        if (state.style.viewBox) {\r\n            state.attrs.viewBox = state.style.viewBox;\r\n        }\r\n        return;\r\n    }\r\n    state.attrs = state.style;\r\n    state.style = {};\r\n    const { attrs, style, dimensions } = state;\r\n    /**\r\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\r\n     * and copy it into style.\r\n     */\r\n    if (attrs.transform) {\r\n        if (dimensions)\r\n            style.transform = attrs.transform;\r\n        delete attrs.transform;\r\n    }\r\n    // Parse transformOrigin\r\n    if (dimensions &&\r\n        (originX !== undefined || originY !== undefined || style.transform)) {\r\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\r\n    }\r\n    // Render attrX/attrY/attrScale as attributes\r\n    if (attrX !== undefined)\r\n        attrs.x = attrX;\r\n    if (attrY !== undefined)\r\n        attrs.y = attrY;\r\n    if (attrScale !== undefined)\r\n        attrs.scale = attrScale;\r\n    // Build SVG path if one has been defined\r\n    if (pathLength !== undefined) {\r\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\r\n    }\r\n}\r\n\r\nexport { buildSVGAttrs };\r\n","const createHtmlRenderState = () => ({\r\n    style: {},\r\n    transform: {},\r\n    transformOrigin: {},\r\n    vars: {},\r\n});\r\n\r\nexport { createHtmlRenderState };\r\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\r\n\r\nconst createSvgRenderState = () => ({\r\n    ...createHtmlRenderState(),\r\n    attrs: {},\r\n});\r\n\r\nexport { createSvgRenderState };\r\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\r\n\r\nexport { isSVGTag };\r\n","function renderHTML(element, { style, vars }, styleProp, projection) {\r\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\r\n    // Loop over any CSS variables and assign those.\r\n    for (const key in vars) {\r\n        element.style.setProperty(key, vars[key]);\r\n    }\r\n}\r\n\r\nexport { renderHTML };\r\n","/**\r\n * A set of attribute names that are always read/written as camel case.\r\n */\r\nconst camelCaseAttributes = new Set([\r\n    \"baseFrequency\",\r\n    \"diffuseConstant\",\r\n    \"kernelMatrix\",\r\n    \"kernelUnitLength\",\r\n    \"keySplines\",\r\n    \"keyTimes\",\r\n    \"limitingConeAngle\",\r\n    \"markerHeight\",\r\n    \"markerWidth\",\r\n    \"numOctaves\",\r\n    \"targetX\",\r\n    \"targetY\",\r\n    \"surfaceScale\",\r\n    \"specularConstant\",\r\n    \"specularExponent\",\r\n    \"stdDeviation\",\r\n    \"tableValues\",\r\n    \"viewBox\",\r\n    \"gradientTransform\",\r\n    \"pathLength\",\r\n    \"startOffset\",\r\n    \"textLength\",\r\n    \"lengthAdjust\",\r\n]);\r\n\r\nexport { camelCaseAttributes };\r\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\r\nimport { renderHTML } from '../../html/utils/render.mjs';\r\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\r\n\r\nfunction renderSVG(element, renderState, _styleProp, projection) {\r\n    renderHTML(element, renderState, undefined, projection);\r\n    for (const key in renderState.attrs) {\r\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\r\n    }\r\n}\r\n\r\nexport { renderSVG };\r\n","const scaleCorrectors = {};\r\nfunction addScaleCorrector(correctors) {\r\n    Object.assign(scaleCorrectors, correctors);\r\n}\r\n\r\nexport { addScaleCorrector, scaleCorrectors };\r\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\r\nimport { transformProps } from '../../render/html/utils/keys-transform.mjs';\r\n\r\nfunction isForcedMotionValue(key, { layout, layoutId }) {\r\n    return (transformProps.has(key) ||\r\n        key.startsWith(\"origin\") ||\r\n        ((layout || layoutId !== undefined) &&\r\n            (!!scaleCorrectors[key] || key === \"opacity\")));\r\n}\r\n\r\nexport { isForcedMotionValue };\r\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\r\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\r\n\r\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\r\n    var _a;\r\n    const { style } = props;\r\n    const newValues = {};\r\n    for (const key in style) {\r\n        if (isMotionValue(style[key]) ||\r\n            (prevProps.style &&\r\n                isMotionValue(prevProps.style[key])) ||\r\n            isForcedMotionValue(key, props) ||\r\n            ((_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.liveStyle) !== undefined) {\r\n            newValues[key] = style[key];\r\n        }\r\n    }\r\n    return newValues;\r\n}\r\n\r\nexport { scrapeMotionValuesFromProps };\r\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\r\nimport { transformPropOrder } from '../../html/utils/keys-transform.mjs';\r\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\r\n\r\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\r\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\r\n    for (const key in props) {\r\n        if (isMotionValue(props[key]) ||\r\n            isMotionValue(prevProps[key])) {\r\n            const targetKey = transformPropOrder.indexOf(key) !== -1\r\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\r\n                : key;\r\n            newValues[targetKey] = props[key];\r\n        }\r\n    }\r\n    return newValues;\r\n}\r\n\r\nexport { scrapeMotionValuesFromProps };\r\n","import { frame } from '../../frameloop/frame.mjs';\r\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\r\nimport { transformProps } from '../html/utils/keys-transform.mjs';\r\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\r\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\r\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\r\nimport { renderSVG } from './utils/render.mjs';\r\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\r\n\r\nfunction updateSVGDimensions(instance, renderState) {\r\n    try {\r\n        renderState.dimensions =\r\n            typeof instance.getBBox === \"function\"\r\n                ? instance.getBBox()\r\n                : instance.getBoundingClientRect();\r\n    }\r\n    catch (e) {\r\n        // Most likely trying to measure an unrendered element under Firefox\r\n        renderState.dimensions = {\r\n            x: 0,\r\n            y: 0,\r\n            width: 0,\r\n            height: 0,\r\n        };\r\n    }\r\n}\r\nconst layoutProps = [\"x\", \"y\", \"width\", \"height\", \"cx\", \"cy\", \"r\"];\r\nconst svgMotionConfig = {\r\n    useVisualState: makeUseVisualState({\r\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\r\n        createRenderState: createSvgRenderState,\r\n        onUpdate: ({ props, prevProps, current, renderState, latestValues, }) => {\r\n            if (!current)\r\n                return;\r\n            let hasTransform = !!props.drag;\r\n            if (!hasTransform) {\r\n                for (const key in latestValues) {\r\n                    if (transformProps.has(key)) {\r\n                        hasTransform = true;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            if (!hasTransform)\r\n                return;\r\n            let needsMeasure = !prevProps;\r\n            if (prevProps) {\r\n                /**\r\n                 * Check the layout props for changes, if any are found we need to\r\n                 * measure the element again.\r\n                 */\r\n                for (let i = 0; i < layoutProps.length; i++) {\r\n                    const key = layoutProps[i];\r\n                    if (props[key] !==\r\n                        prevProps[key]) {\r\n                        needsMeasure = true;\r\n                    }\r\n                }\r\n            }\r\n            if (!needsMeasure)\r\n                return;\r\n            frame.read(() => {\r\n                updateSVGDimensions(current, renderState);\r\n                frame.render(() => {\r\n                    buildSVGAttrs(renderState, latestValues, isSVGTag(current.tagName), props.transformTemplate);\r\n                    renderSVG(current, renderState);\r\n                });\r\n            });\r\n        },\r\n    }),\r\n};\r\n\r\nexport { svgMotionConfig };\r\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\r\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\r\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\r\n\r\nconst htmlMotionConfig = {\r\n    useVisualState: makeUseVisualState({\r\n        scrapeMotionValuesFromProps,\r\n        createRenderState: createHtmlRenderState,\r\n    }),\r\n};\r\n\r\nexport { htmlMotionConfig };\r\n","import { useMemo } from 'react';\r\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\r\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\r\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\r\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\r\n\r\nfunction copyRawValuesOnly(target, source, props) {\r\n    for (const key in source) {\r\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\r\n            target[key] = source[key];\r\n        }\r\n    }\r\n}\r\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\r\n    return useMemo(() => {\r\n        const state = createHtmlRenderState();\r\n        buildHTMLStyles(state, visualState, transformTemplate);\r\n        return Object.assign({}, state.vars, state.style);\r\n    }, [visualState]);\r\n}\r\nfunction useStyle(props, visualState) {\r\n    const styleProp = props.style || {};\r\n    const style = {};\r\n    /**\r\n     * Copy non-Motion Values straight into style\r\n     */\r\n    copyRawValuesOnly(style, styleProp, props);\r\n    Object.assign(style, useInitialMotionValues(props, visualState));\r\n    return style;\r\n}\r\nfunction useHTMLProps(props, visualState) {\r\n    // The `any` isn't ideal but it is the type of createElement props argument\r\n    const htmlProps = {};\r\n    const style = useStyle(props, visualState);\r\n    if (props.drag && props.dragListener !== false) {\r\n        // Disable the ghost element when a user drags\r\n        htmlProps.draggable = false;\r\n        // Disable text selection\r\n        style.userSelect =\r\n            style.WebkitUserSelect =\r\n                style.WebkitTouchCallout =\r\n                    \"none\";\r\n        // Disable scrolling on the draggable direction\r\n        style.touchAction =\r\n            props.drag === true\r\n                ? \"none\"\r\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\r\n    }\r\n    if (props.tabIndex === undefined &&\r\n        (props.onTap || props.onTapStart || props.whileTap)) {\r\n        htmlProps.tabIndex = 0;\r\n    }\r\n    htmlProps.style = style;\r\n    return htmlProps;\r\n}\r\n\r\nexport { copyRawValuesOnly, useHTMLProps };\r\n","import { useMemo } from 'react';\r\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\r\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\r\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\r\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\r\n\r\nfunction useSVGProps(props, visualState, _isStatic, Component) {\r\n    const visualProps = useMemo(() => {\r\n        const state = createSvgRenderState();\r\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate);\r\n        return {\r\n            ...state.attrs,\r\n            style: { ...state.style },\r\n        };\r\n    }, [visualState]);\r\n    if (props.style) {\r\n        const rawStyles = {};\r\n        copyRawValuesOnly(rawStyles, props.style, props);\r\n        visualProps.style = { ...rawStyles, ...visualProps.style };\r\n    }\r\n    return visualProps;\r\n}\r\n\r\nexport { useSVGProps };\r\n","import { Fragment, useMemo, createElement } from 'react';\r\nimport { useHTMLProps } from '../html/use-props.mjs';\r\nimport { filterProps } from './utils/filter-props.mjs';\r\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\r\nimport { useSVGProps } from '../svg/use-props.mjs';\r\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\r\n\r\nfunction createUseRender(forwardMotionProps = false) {\r\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\r\n        const useVisualProps = isSVGComponent(Component)\r\n            ? useSVGProps\r\n            : useHTMLProps;\r\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\r\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\r\n        const elementProps = Component !== Fragment\r\n            ? { ...filteredProps, ...visualProps, ref }\r\n            : {};\r\n        /**\r\n         * If component has been handed a motion value as its child,\r\n         * memoise its initial value and render that. Subsequent updates\r\n         * will be handled by the onChange handler\r\n         */\r\n        const { children } = props;\r\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\r\n        return createElement(Component, {\r\n            ...elementProps,\r\n            children: renderedChildren,\r\n        });\r\n    };\r\n    return useRender;\r\n}\r\n\r\nexport { createUseRender };\r\n","import { createRendererMotionComponent } from '../../motion/index.mjs';\r\nimport { isSVGComponent } from '../dom/utils/is-svg-component.mjs';\r\nimport { svgMotionConfig } from '../svg/config-motion.mjs';\r\nimport { htmlMotionConfig } from '../html/config-motion.mjs';\r\nimport { createUseRender } from '../dom/use-render.mjs';\r\n\r\nfunction createMotionComponentFactory(preloadedFeatures, createVisualElement) {\r\n    return function createMotionComponent(Component, { forwardMotionProps } = { forwardMotionProps: false }) {\r\n        const baseConfig = isSVGComponent(Component)\r\n            ? svgMotionConfig\r\n            : htmlMotionConfig;\r\n        const config = {\r\n            ...baseConfig,\r\n            preloadedFeatures,\r\n            useRender: createUseRender(forwardMotionProps),\r\n            createVisualElement,\r\n            Component,\r\n        };\r\n        return createRendererMotionComponent(config);\r\n    };\r\n}\r\n\r\nexport { createMotionComponentFactory };\r\n","function shallowCompare(next, prev) {\r\n    if (!Array.isArray(prev))\r\n        return false;\r\n    const prevLength = prev.length;\r\n    if (prevLength !== next.length)\r\n        return false;\r\n    for (let i = 0; i < prevLength; i++) {\r\n        if (prev[i] !== next[i])\r\n            return false;\r\n    }\r\n    return true;\r\n}\r\n\r\nexport { shallowCompare };\r\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\r\n\r\nfunction resolveVariant(visualElement, definition, custom) {\r\n    const props = visualElement.getProps();\r\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\r\n}\r\n\r\nexport { resolveVariant };\r\n","import { memo } from 'motion-utils';\r\n\r\nconst supportsScrollTimeline = memo(() => window.ScrollTimeline !== undefined);\r\n\r\nexport { supportsScrollTimeline };\r\n","import { supportsScrollTimeline } from '../../utils/supports/scroll-timeline.mjs';\r\n\r\nclass BaseGroupPlaybackControls {\r\n    constructor(animations) {\r\n        // Bound to accomodate common `return animation.stop` pattern\r\n        this.stop = () => this.runAll(\"stop\");\r\n        this.animations = animations.filter(Boolean);\r\n    }\r\n    get finished() {\r\n        // Support for new finished Promise and legacy thennable API\r\n        return Promise.all(this.animations.map((animation) => \"finished\" in animation ? animation.finished : animation));\r\n    }\r\n    /**\r\n     * TODO: Filter out cancelled or stopped animations before returning\r\n     */\r\n    getAll(propName) {\r\n        return this.animations[0][propName];\r\n    }\r\n    setAll(propName, newValue) {\r\n        for (let i = 0; i < this.animations.length; i++) {\r\n            this.animations[i][propName] = newValue;\r\n        }\r\n    }\r\n    attachTimeline(timeline, fallback) {\r\n        const subscriptions = this.animations.map((animation) => {\r\n            if (supportsScrollTimeline() && animation.attachTimeline) {\r\n                return animation.attachTimeline(timeline);\r\n            }\r\n            else if (typeof fallback === \"function\") {\r\n                return fallback(animation);\r\n            }\r\n        });\r\n        return () => {\r\n            subscriptions.forEach((cancel, i) => {\r\n                cancel && cancel();\r\n                this.animations[i].stop();\r\n            });\r\n        };\r\n    }\r\n    get time() {\r\n        return this.getAll(\"time\");\r\n    }\r\n    set time(time) {\r\n        this.setAll(\"time\", time);\r\n    }\r\n    get speed() {\r\n        return this.getAll(\"speed\");\r\n    }\r\n    set speed(speed) {\r\n        this.setAll(\"speed\", speed);\r\n    }\r\n    get startTime() {\r\n        return this.getAll(\"startTime\");\r\n    }\r\n    get duration() {\r\n        let max = 0;\r\n        for (let i = 0; i < this.animations.length; i++) {\r\n            max = Math.max(max, this.animations[i].duration);\r\n        }\r\n        return max;\r\n    }\r\n    runAll(methodName) {\r\n        this.animations.forEach((controls) => controls[methodName]());\r\n    }\r\n    flatten() {\r\n        this.runAll(\"flatten\");\r\n    }\r\n    play() {\r\n        this.runAll(\"play\");\r\n    }\r\n    pause() {\r\n        this.runAll(\"pause\");\r\n    }\r\n    cancel() {\r\n        this.runAll(\"cancel\");\r\n    }\r\n    complete() {\r\n        this.runAll(\"complete\");\r\n    }\r\n}\r\n\r\nexport { BaseGroupPlaybackControls };\r\n","import { BaseGroupPlaybackControls } from './BaseGroup.mjs';\r\n\r\n/**\r\n * TODO: This is a temporary class to support the legacy\r\n * thennable API\r\n */\r\nclass GroupPlaybackControls extends BaseGroupPlaybackControls {\r\n    then(onResolve, onReject) {\r\n        return Promise.all(this.animations).then(onResolve).catch(onReject);\r\n    }\r\n}\r\n\r\nexport { GroupPlaybackControls };\r\n","function getValueTransition(transition, key) {\r\n    return transition\r\n        ? transition[key] ||\r\n            transition[\"default\"] ||\r\n            transition\r\n        : undefined;\r\n}\r\n\r\nexport { getValueTransition };\r\n","/**\r\n * Implement a practical max duration for keyframe generation\r\n * to prevent infinite loops\r\n */\r\nconst maxGeneratorDuration = 20000;\r\nfunction calcGeneratorDuration(generator) {\r\n    let duration = 0;\r\n    const timeStep = 50;\r\n    let state = generator.next(duration);\r\n    while (!state.done && duration < maxGeneratorDuration) {\r\n        duration += timeStep;\r\n        state = generator.next(duration);\r\n    }\r\n    return duration >= maxGeneratorDuration ? Infinity : duration;\r\n}\r\n\r\nexport { calcGeneratorDuration, maxGeneratorDuration };\r\n","function isGenerator(type) {\r\n    return typeof type === \"function\";\r\n}\r\n\r\nexport { isGenerator };\r\n","function attachTimeline(animation, timeline) {\r\n    animation.timeline = timeline;\r\n    animation.onfinish = null;\r\n}\r\n\r\nexport { attachTimeline };\r\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\r\n\r\nexport { isBezierDefinition };\r\n","/**\r\n * Add the ability for test suites to manually set support flags\r\n * to better test more environments.\r\n */\r\nconst supportsFlags = {\r\n    linearEasing: undefined,\r\n};\r\n\r\nexport { supportsFlags };\r\n","import { memo } from 'motion-utils';\r\nimport { supportsFlags } from './flags.mjs';\r\n\r\nfunction memoSupports(callback, supportsFlag) {\r\n    const memoized = memo(callback);\r\n    return () => { var _a; return (_a = supportsFlags[supportsFlag]) !== null && _a !== void 0 ? _a : memoized(); };\r\n}\r\n\r\nexport { memoSupports };\r\n","import { memoSupports } from './memo.mjs';\r\n\r\nconst supportsLinearEasing = /*@__PURE__*/ memoSupports(() => {\r\n    try {\r\n        document\r\n            .createElement(\"div\")\r\n            .animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\r\n    }\r\n    catch (e) {\r\n        return false;\r\n    }\r\n    return true;\r\n}, \"linearEasing\");\r\n\r\nexport { supportsLinearEasing };\r\n","import { progress } from 'motion-utils';\r\n\r\nconst generateLinearEasing = (easing, duration, // as milliseconds\r\nresolution = 10 // as milliseconds\r\n) => {\r\n    let points = \"\";\r\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\r\n    for (let i = 0; i < numPoints; i++) {\r\n        points += easing(progress(0, numPoints - 1, i)) + \", \";\r\n    }\r\n    return `linear(${points.substring(0, points.length - 2)})`;\r\n};\r\n\r\nexport { generateLinearEasing };\r\n","import { isBezierDefinition } from '../../../utils/is-bezier-definition.mjs';\r\nimport { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\r\nimport { generateLinearEasing } from './linear.mjs';\r\n\r\nfunction isWaapiSupportedEasing(easing) {\r\n    return Boolean((typeof easing === \"function\" && supportsLinearEasing()) ||\r\n        !easing ||\r\n        (typeof easing === \"string\" &&\r\n            (easing in supportedWaapiEasing || supportsLinearEasing())) ||\r\n        isBezierDefinition(easing) ||\r\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\r\n}\r\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\r\nconst supportedWaapiEasing = {\r\n    linear: \"linear\",\r\n    ease: \"ease\",\r\n    easeIn: \"ease-in\",\r\n    easeOut: \"ease-out\",\r\n    easeInOut: \"ease-in-out\",\r\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\r\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\r\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\r\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\r\n};\r\nfunction mapEasingToNativeEasing(easing, duration) {\r\n    if (!easing) {\r\n        return undefined;\r\n    }\r\n    else if (typeof easing === \"function\" && supportsLinearEasing()) {\r\n        return generateLinearEasing(easing, duration);\r\n    }\r\n    else if (isBezierDefinition(easing)) {\r\n        return cubicBezierAsString(easing);\r\n    }\r\n    else if (Array.isArray(easing)) {\r\n        return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) ||\r\n            supportedWaapiEasing.easeOut);\r\n    }\r\n    else {\r\n        return supportedWaapiEasing[easing];\r\n    }\r\n}\r\n\r\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\r\n","const isDragging = {\r\n    x: false,\r\n    y: false,\r\n};\r\nfunction isDragActive() {\r\n    return isDragging.x || isDragging.y;\r\n}\r\n\r\nexport { isDragActive, isDragging };\r\n","import { resolveElements } from '../../utils/resolve-elements.mjs';\r\n\r\nfunction setupGesture(elementOrSelector, options) {\r\n    const elements = resolveElements(elementOrSelector);\r\n    const gestureAbortController = new AbortController();\r\n    const eventOptions = {\r\n        passive: true,\r\n        ...options,\r\n        signal: gestureAbortController.signal,\r\n    };\r\n    const cancel = () => gestureAbortController.abort();\r\n    return [elements, eventOptions, cancel];\r\n}\r\n\r\nexport { setupGesture };\r\n","function resolveElements(elementOrSelector, scope, selectorCache) {\r\n    var _a;\r\n    if (elementOrSelector instanceof Element) {\r\n        return [elementOrSelector];\r\n    }\r\n    else if (typeof elementOrSelector === \"string\") {\r\n        let root = document;\r\n        if (scope) {\r\n            // TODO: Refactor to utils package\r\n            // invariant(\r\n            //     Boolean(scope.current),\r\n            //     \"Scope provided, but no element detected.\"\r\n            // )\r\n            root = scope.current;\r\n        }\r\n        const elements = (_a = selectorCache === null || selectorCache === void 0 ? void 0 : selectorCache[elementOrSelector]) !== null && _a !== void 0 ? _a : root.querySelectorAll(elementOrSelector);\r\n        return elements ? Array.from(elements) : [];\r\n    }\r\n    return Array.from(elementOrSelector);\r\n}\r\n\r\nexport { resolveElements };\r\n","import { isDragActive } from './drag/state/is-active.mjs';\r\nimport { setupGesture } from './utils/setup.mjs';\r\n\r\n/**\r\n * Filter out events that are not pointer events, or are triggering\r\n * while a Motion gesture is active.\r\n */\r\nfunction filterEvents(callback) {\r\n    return (event) => {\r\n        if (event.pointerType === \"touch\" || isDragActive())\r\n            return;\r\n        callback(event);\r\n    };\r\n}\r\n/**\r\n * Create a hover gesture. hover() is different to .addEventListener(\"pointerenter\")\r\n * in that it has an easier syntax, filters out polyfilled touch events, interoperates\r\n * with drag gestures, and automatically removes the \"pointerennd\" event listener when the hover ends.\r\n *\r\n * @public\r\n */\r\nfunction hover(elementOrSelector, onHoverStart, options = {}) {\r\n    const [elements, eventOptions, cancel] = setupGesture(elementOrSelector, options);\r\n    const onPointerEnter = filterEvents((enterEvent) => {\r\n        const { target } = enterEvent;\r\n        const onHoverEnd = onHoverStart(enterEvent);\r\n        if (typeof onHoverEnd !== \"function\" || !target)\r\n            return;\r\n        const onPointerLeave = filterEvents((leaveEvent) => {\r\n            onHoverEnd(leaveEvent);\r\n            target.removeEventListener(\"pointerleave\", onPointerLeave);\r\n        });\r\n        target.addEventListener(\"pointerleave\", onPointerLeave, eventOptions);\r\n    });\r\n    elements.forEach((element) => {\r\n        element.addEventListener(\"pointerenter\", onPointerEnter, eventOptions);\r\n    });\r\n    return cancel;\r\n}\r\n\r\nexport { hover };\r\n","/**\r\n * Recursively traverse up the tree to check whether the provided child node\r\n * is the parent or a descendant of it.\r\n *\r\n * @param parent - Element to find\r\n * @param child - Element to test against parent\r\n */\r\nconst isNodeOrChild = (parent, child) => {\r\n    if (!child) {\r\n        return false;\r\n    }\r\n    else if (parent === child) {\r\n        return true;\r\n    }\r\n    else {\r\n        return isNodeOrChild(parent, child.parentElement);\r\n    }\r\n};\r\n\r\nexport { isNodeOrChild };\r\n","const isPrimaryPointer = (event) => {\r\n    if (event.pointerType === \"mouse\") {\r\n        return typeof event.button !== \"number\" || event.button <= 0;\r\n    }\r\n    else {\r\n        /**\r\n         * isPrimary is true for all mice buttons, whereas every touch point\r\n         * is regarded as its own input. So subsequent concurrent touch points\r\n         * will be false.\r\n         *\r\n         * Specifically match against false here as incomplete versions of\r\n         * PointerEvents in very old browser might have it set as undefined.\r\n         */\r\n        return event.isPrimary !== false;\r\n    }\r\n};\r\n\r\nexport { isPrimaryPointer };\r\n","const focusableElements = new Set([\r\n    \"BUTTON\",\r\n    \"INPUT\",\r\n    \"SELECT\",\r\n    \"TEXTAREA\",\r\n    \"A\",\r\n]);\r\nfunction isElementKeyboardAccessible(element) {\r\n    return (focusableElements.has(element.tagName) ||\r\n        element.tabIndex !== -1);\r\n}\r\n\r\nexport { isElementKeyboardAccessible };\r\n","const isPressing = new WeakSet();\r\n\r\nexport { isPressing };\r\n","import { isPressing } from './state.mjs';\r\n\r\n/**\r\n * Filter out events that are not \"Enter\" keys.\r\n */\r\nfunction filterEvents(callback) {\r\n    return (event) => {\r\n        if (event.key !== \"Enter\")\r\n            return;\r\n        callback(event);\r\n    };\r\n}\r\nfunction firePointerEvent(target, type) {\r\n    target.dispatchEvent(new PointerEvent(\"pointer\" + type, { isPrimary: true, bubbles: true }));\r\n}\r\nconst enableKeyboardPress = (focusEvent, eventOptions) => {\r\n    const element = focusEvent.currentTarget;\r\n    if (!element)\r\n        return;\r\n    const handleKeydown = filterEvents(() => {\r\n        if (isPressing.has(element))\r\n            return;\r\n        firePointerEvent(element, \"down\");\r\n        const handleKeyup = filterEvents(() => {\r\n            firePointerEvent(element, \"up\");\r\n        });\r\n        const handleBlur = () => firePointerEvent(element, \"cancel\");\r\n        element.addEventListener(\"keyup\", handleKeyup, eventOptions);\r\n        element.addEventListener(\"blur\", handleBlur, eventOptions);\r\n    });\r\n    element.addEventListener(\"keydown\", handleKeydown, eventOptions);\r\n    /**\r\n     * Add an event listener that fires on blur to remove the keydown events.\r\n     */\r\n    element.addEventListener(\"blur\", () => element.removeEventListener(\"keydown\", handleKeydown), eventOptions);\r\n};\r\n\r\nexport { enableKeyboardPress };\r\n","import { isDragActive } from '../drag/state/is-active.mjs';\r\nimport { isNodeOrChild } from '../utils/is-node-or-child.mjs';\r\nimport { isPrimaryPointer } from '../utils/is-primary-pointer.mjs';\r\nimport { setupGesture } from '../utils/setup.mjs';\r\nimport { isElementKeyboardAccessible } from './utils/is-keyboard-accessible.mjs';\r\nimport { enableKeyboardPress } from './utils/keyboard.mjs';\r\nimport { isPressing } from './utils/state.mjs';\r\n\r\n/**\r\n * Filter out events that are not primary pointer events, or are triggering\r\n * while a Motion gesture is active.\r\n */\r\nfunction isValidPressEvent(event) {\r\n    return isPrimaryPointer(event) && !isDragActive();\r\n}\r\n/**\r\n * Create a press gesture.\r\n *\r\n * Press is different to `\"pointerdown\"`, `\"pointerup\"` in that it\r\n * automatically filters out secondary pointer events like right\r\n * click and multitouch.\r\n *\r\n * It also adds accessibility support for keyboards, where\r\n * an element with a press gesture will receive focus and\r\n *  trigger on Enter `\"keydown\"` and `\"keyup\"` events.\r\n *\r\n * This is different to a browser's `\"click\"` event, which does\r\n * respond to keyboards but only for the `\"click\"` itself, rather\r\n * than the press start and end/cancel. The element also needs\r\n * to be focusable for this to work, whereas a press gesture will\r\n * make an element focusable by default.\r\n *\r\n * @public\r\n */\r\nfunction press(elementOrSelector, onPressStart, options = {}) {\r\n    const [elements, eventOptions, cancelEvents] = setupGesture(elementOrSelector, options);\r\n    const startPress = (startEvent) => {\r\n        const element = startEvent.currentTarget;\r\n        if (!isValidPressEvent(startEvent) || isPressing.has(element))\r\n            return;\r\n        isPressing.add(element);\r\n        const onPressEnd = onPressStart(startEvent);\r\n        const onPointerEnd = (endEvent, success) => {\r\n            window.removeEventListener(\"pointerup\", onPointerUp);\r\n            window.removeEventListener(\"pointercancel\", onPointerCancel);\r\n            if (!isValidPressEvent(endEvent) || !isPressing.has(element)) {\r\n                return;\r\n            }\r\n            isPressing.delete(element);\r\n            if (typeof onPressEnd === \"function\") {\r\n                onPressEnd(endEvent, { success });\r\n            }\r\n        };\r\n        const onPointerUp = (upEvent) => {\r\n            onPointerEnd(upEvent, options.useGlobalTarget ||\r\n                isNodeOrChild(element, upEvent.target));\r\n        };\r\n        const onPointerCancel = (cancelEvent) => {\r\n            onPointerEnd(cancelEvent, false);\r\n        };\r\n        window.addEventListener(\"pointerup\", onPointerUp, eventOptions);\r\n        window.addEventListener(\"pointercancel\", onPointerCancel, eventOptions);\r\n    };\r\n    elements.forEach((element) => {\r\n        if (!isElementKeyboardAccessible(element) &&\r\n            element.getAttribute(\"tabindex\") === null) {\r\n            element.tabIndex = 0;\r\n        }\r\n        const target = options.useGlobalTarget ? window : element;\r\n        target.addEventListener(\"pointerdown\", startPress, eventOptions);\r\n        element.addEventListener(\"focus\", (event) => enableKeyboardPress(event, eventOptions), eventOptions);\r\n    });\r\n    return cancelEvents;\r\n}\r\n\r\nexport { press };\r\n","import { transformPropOrder } from './keys-transform.mjs';\r\n\r\nconst positionalKeys = new Set([\r\n    \"width\",\r\n    \"height\",\r\n    \"top\",\r\n    \"left\",\r\n    \"right\",\r\n    \"bottom\",\r\n    ...transformPropOrder,\r\n]);\r\n\r\nexport { positionalKeys };\r\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\r\nimport { frameData } from './frame.mjs';\r\n\r\nlet now;\r\nfunction clearTime() {\r\n    now = undefined;\r\n}\r\n/**\r\n * An eventloop-synchronous alternative to performance.now().\r\n *\r\n * Ensures that time measurements remain consistent within a synchronous context.\r\n * Usually calling performance.now() twice within the same synchronous context\r\n * will return different values which isn't useful for animations when we're usually\r\n * trying to sync animations to the same frame.\r\n */\r\nconst time = {\r\n    now: () => {\r\n        if (now === undefined) {\r\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\r\n                ? frameData.timestamp\r\n                : performance.now());\r\n        }\r\n        return now;\r\n    },\r\n    set: (newTime) => {\r\n        now = newTime;\r\n        queueMicrotask(clearTime);\r\n    },\r\n};\r\n\r\nexport { time };\r\n","function addUniqueItem(arr, item) {\r\n    if (arr.indexOf(item) === -1)\r\n        arr.push(item);\r\n}\r\nfunction removeItem(arr, item) {\r\n    const index = arr.indexOf(item);\r\n    if (index > -1)\r\n        arr.splice(index, 1);\r\n}\r\n// Adapted from array-move\r\nfunction moveItem([...arr], fromIndex, toIndex) {\r\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\r\n    if (startIndex >= 0 && startIndex < arr.length) {\r\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\r\n        const [item] = arr.splice(fromIndex, 1);\r\n        arr.splice(endIndex, 0, item);\r\n    }\r\n    return arr;\r\n}\r\n\r\nexport { addUniqueItem, moveItem, removeItem };\r\n","import { addUniqueItem, removeItem } from './array.mjs';\r\n\r\nclass SubscriptionManager {\r\n    constructor() {\r\n        this.subscriptions = [];\r\n    }\r\n    add(handler) {\r\n        addUniqueItem(this.subscriptions, handler);\r\n        return () => removeItem(this.subscriptions, handler);\r\n    }\r\n    notify(a, b, c) {\r\n        const numSubscriptions = this.subscriptions.length;\r\n        if (!numSubscriptions)\r\n            return;\r\n        if (numSubscriptions === 1) {\r\n            /**\r\n             * If there's only a single handler we can just call it without invoking a loop.\r\n             */\r\n            this.subscriptions[0](a, b, c);\r\n        }\r\n        else {\r\n            for (let i = 0; i < numSubscriptions; i++) {\r\n                /**\r\n                 * Check whether the handler exists before firing as it's possible\r\n                 * the subscriptions were modified during this loop running.\r\n                 */\r\n                const handler = this.subscriptions[i];\r\n                handler && handler(a, b, c);\r\n            }\r\n        }\r\n    }\r\n    getSize() {\r\n        return this.subscriptions.length;\r\n    }\r\n    clear() {\r\n        this.subscriptions.length = 0;\r\n    }\r\n}\r\n\r\nexport { SubscriptionManager };\r\n","/*\r\n  Convert velocity into velocity per second\r\n\r\n  @param [number]: Unit per frame\r\n  @param [number]: Frame duration in ms\r\n*/\r\nfunction velocityPerSecond(velocity, frameDuration) {\r\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\r\n}\r\n\r\nexport { velocityPerSecond };\r\n","import { time } from '../frameloop/sync-time.mjs';\r\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\r\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\r\nimport { warnOnce } from '../utils/warn-once.mjs';\r\nimport { frame } from '../frameloop/frame.mjs';\r\n\r\n/**\r\n * Maximum time between the value of two frames, beyond which we\r\n * assume the velocity has since been 0.\r\n */\r\nconst MAX_VELOCITY_DELTA = 30;\r\nconst isFloat = (value) => {\r\n    return !isNaN(parseFloat(value));\r\n};\r\nconst collectMotionValues = {\r\n    current: undefined,\r\n};\r\n/**\r\n * `MotionValue` is used to track the state and velocity of motion values.\r\n *\r\n * @public\r\n */\r\nclass MotionValue {\r\n    /**\r\n     * @param init - The initiating value\r\n     * @param config - Optional configuration options\r\n     *\r\n     * -  `transformer`: A function to transform incoming values with.\r\n     *\r\n     * @internal\r\n     */\r\n    constructor(init, options = {}) {\r\n        /**\r\n         * This will be replaced by the build step with the latest version number.\r\n         * When MotionValues are provided to motion components, warn if versions are mixed.\r\n         */\r\n        this.version = \"11.18.2\";\r\n        /**\r\n         * Tracks whether this value can output a velocity. Currently this is only true\r\n         * if the value is numerical, but we might be able to widen the scope here and support\r\n         * other value types.\r\n         *\r\n         * @internal\r\n         */\r\n        this.canTrackVelocity = null;\r\n        /**\r\n         * An object containing a SubscriptionManager for each active event.\r\n         */\r\n        this.events = {};\r\n        this.updateAndNotify = (v, render = true) => {\r\n            const currentTime = time.now();\r\n            /**\r\n             * If we're updating the value during another frame or eventloop\r\n             * than the previous frame, then the we set the previous frame value\r\n             * to current.\r\n             */\r\n            if (this.updatedAt !== currentTime) {\r\n                this.setPrevFrameValue();\r\n            }\r\n            this.prev = this.current;\r\n            this.setCurrent(v);\r\n            // Update update subscribers\r\n            if (this.current !== this.prev && this.events.change) {\r\n                this.events.change.notify(this.current);\r\n            }\r\n            // Update render subscribers\r\n            if (render && this.events.renderRequest) {\r\n                this.events.renderRequest.notify(this.current);\r\n            }\r\n        };\r\n        this.hasAnimated = false;\r\n        this.setCurrent(init);\r\n        this.owner = options.owner;\r\n    }\r\n    setCurrent(current) {\r\n        this.current = current;\r\n        this.updatedAt = time.now();\r\n        if (this.canTrackVelocity === null && current !== undefined) {\r\n            this.canTrackVelocity = isFloat(this.current);\r\n        }\r\n    }\r\n    setPrevFrameValue(prevFrameValue = this.current) {\r\n        this.prevFrameValue = prevFrameValue;\r\n        this.prevUpdatedAt = this.updatedAt;\r\n    }\r\n    /**\r\n     * Adds a function that will be notified when the `MotionValue` is updated.\r\n     *\r\n     * It returns a function that, when called, will cancel the subscription.\r\n     *\r\n     * When calling `onChange` inside a React component, it should be wrapped with the\r\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\r\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\r\n     *\r\n     * ```jsx\r\n     * export const MyComponent = () => {\r\n     *   const x = useMotionValue(0)\r\n     *   const y = useMotionValue(0)\r\n     *   const opacity = useMotionValue(1)\r\n     *\r\n     *   useEffect(() => {\r\n     *     function updateOpacity() {\r\n     *       const maxXY = Math.max(x.get(), y.get())\r\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\r\n     *       opacity.set(newOpacity)\r\n     *     }\r\n     *\r\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\r\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\r\n     *\r\n     *     return () => {\r\n     *       unsubscribeX()\r\n     *       unsubscribeY()\r\n     *     }\r\n     *   }, [])\r\n     *\r\n     *   return <motion.div style={{ x }} />\r\n     * }\r\n     * ```\r\n     *\r\n     * @param subscriber - A function that receives the latest value.\r\n     * @returns A function that, when called, will cancel this subscription.\r\n     *\r\n     * @deprecated\r\n     */\r\n    onChange(subscription) {\r\n        if (process.env.NODE_ENV !== \"production\") {\r\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\r\n        }\r\n        return this.on(\"change\", subscription);\r\n    }\r\n    on(eventName, callback) {\r\n        if (!this.events[eventName]) {\r\n            this.events[eventName] = new SubscriptionManager();\r\n        }\r\n        const unsubscribe = this.events[eventName].add(callback);\r\n        if (eventName === \"change\") {\r\n            return () => {\r\n                unsubscribe();\r\n                /**\r\n                 * If we have no more change listeners by the start\r\n                 * of the next frame, stop active animations.\r\n                 */\r\n                frame.read(() => {\r\n                    if (!this.events.change.getSize()) {\r\n                        this.stop();\r\n                    }\r\n                });\r\n            };\r\n        }\r\n        return unsubscribe;\r\n    }\r\n    clearListeners() {\r\n        for (const eventManagers in this.events) {\r\n            this.events[eventManagers].clear();\r\n        }\r\n    }\r\n    /**\r\n     * Attaches a passive effect to the `MotionValue`.\r\n     *\r\n     * @internal\r\n     */\r\n    attach(passiveEffect, stopPassiveEffect) {\r\n        this.passiveEffect = passiveEffect;\r\n        this.stopPassiveEffect = stopPassiveEffect;\r\n    }\r\n    /**\r\n     * Sets the state of the `MotionValue`.\r\n     *\r\n     * @remarks\r\n     *\r\n     * ```jsx\r\n     * const x = useMotionValue(0)\r\n     * x.set(10)\r\n     * ```\r\n     *\r\n     * @param latest - Latest value to set.\r\n     * @param render - Whether to notify render subscribers. Defaults to `true`\r\n     *\r\n     * @public\r\n     */\r\n    set(v, render = true) {\r\n        if (!render || !this.passiveEffect) {\r\n            this.updateAndNotify(v, render);\r\n        }\r\n        else {\r\n            this.passiveEffect(v, this.updateAndNotify);\r\n        }\r\n    }\r\n    setWithVelocity(prev, current, delta) {\r\n        this.set(current);\r\n        this.prev = undefined;\r\n        this.prevFrameValue = prev;\r\n        this.prevUpdatedAt = this.updatedAt - delta;\r\n    }\r\n    /**\r\n     * Set the state of the `MotionValue`, stopping any active animations,\r\n     * effects, and resets velocity to `0`.\r\n     */\r\n    jump(v, endAnimation = true) {\r\n        this.updateAndNotify(v);\r\n        this.prev = v;\r\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\r\n        endAnimation && this.stop();\r\n        if (this.stopPassiveEffect)\r\n            this.stopPassiveEffect();\r\n    }\r\n    /**\r\n     * Returns the latest state of `MotionValue`\r\n     *\r\n     * @returns - The latest state of `MotionValue`\r\n     *\r\n     * @public\r\n     */\r\n    get() {\r\n        if (collectMotionValues.current) {\r\n            collectMotionValues.current.push(this);\r\n        }\r\n        return this.current;\r\n    }\r\n    /**\r\n     * @public\r\n     */\r\n    getPrevious() {\r\n        return this.prev;\r\n    }\r\n    /**\r\n     * Returns the latest velocity of `MotionValue`\r\n     *\r\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\r\n     *\r\n     * @public\r\n     */\r\n    getVelocity() {\r\n        const currentTime = time.now();\r\n        if (!this.canTrackVelocity ||\r\n            this.prevFrameValue === undefined ||\r\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\r\n            return 0;\r\n        }\r\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\r\n        // Casts because of parseFloat's poor typing\r\n        return velocityPerSecond(parseFloat(this.current) -\r\n            parseFloat(this.prevFrameValue), delta);\r\n    }\r\n    /**\r\n     * Registers a new animation to control this `MotionValue`. Only one\r\n     * animation can drive a `MotionValue` at one time.\r\n     *\r\n     * ```jsx\r\n     * value.start()\r\n     * ```\r\n     *\r\n     * @param animation - A function that starts the provided animation\r\n     *\r\n     * @internal\r\n     */\r\n    start(startAnimation) {\r\n        this.stop();\r\n        return new Promise((resolve) => {\r\n            this.hasAnimated = true;\r\n            this.animation = startAnimation(resolve);\r\n            if (this.events.animationStart) {\r\n                this.events.animationStart.notify();\r\n            }\r\n        }).then(() => {\r\n            if (this.events.animationComplete) {\r\n                this.events.animationComplete.notify();\r\n            }\r\n            this.clearAnimation();\r\n        });\r\n    }\r\n    /**\r\n     * Stop the currently active animation.\r\n     *\r\n     * @public\r\n     */\r\n    stop() {\r\n        if (this.animation) {\r\n            this.animation.stop();\r\n            if (this.events.animationCancel) {\r\n                this.events.animationCancel.notify();\r\n            }\r\n        }\r\n        this.clearAnimation();\r\n    }\r\n    /**\r\n     * Returns `true` if this value is currently animating.\r\n     *\r\n     * @public\r\n     */\r\n    isAnimating() {\r\n        return !!this.animation;\r\n    }\r\n    clearAnimation() {\r\n        delete this.animation;\r\n    }\r\n    /**\r\n     * Destroy and clean up subscribers to this `MotionValue`.\r\n     *\r\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\r\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\r\n     * created a `MotionValue` via the `motionValue` function.\r\n     *\r\n     * @public\r\n     */\r\n    destroy() {\r\n        this.clearListeners();\r\n        this.stop();\r\n        if (this.stopPassiveEffect) {\r\n            this.stopPassiveEffect();\r\n        }\r\n    }\r\n}\r\nfunction motionValue(init, options) {\r\n    return new MotionValue(init, options);\r\n}\r\n\r\nexport { MotionValue, collectMotionValues, motionValue };\r\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\r\nimport { motionValue } from '../../value/index.mjs';\r\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\r\n\r\n/**\r\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\r\n * it doesn't exist.\r\n */\r\nfunction setMotionValue(visualElement, key, value) {\r\n    if (visualElement.hasValue(key)) {\r\n        visualElement.getValue(key).set(value);\r\n    }\r\n    else {\r\n        visualElement.addValue(key, motionValue(value));\r\n    }\r\n}\r\nfunction setTarget(visualElement, definition) {\r\n    const resolved = resolveVariant(visualElement, definition);\r\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\r\n    target = { ...target, ...transitionEnd };\r\n    for (const key in target) {\r\n        const value = resolveFinalValueInKeyframes(target[key]);\r\n        setMotionValue(visualElement, key, value);\r\n    }\r\n}\r\n\r\nexport { setTarget };\r\n","import { isWillChangeMotionValue } from './is.mjs';\r\n\r\nfunction addValueToWillChange(visualElement, key) {\r\n    const willChange = visualElement.getValue(\"willChange\");\r\n    /**\r\n     * It could be that a user has set willChange to a regular MotionValue,\r\n     * in which case we can't add the value to it.\r\n     */\r\n    if (isWillChangeMotionValue(willChange)) {\r\n        return willChange.add(key);\r\n    }\r\n}\r\n\r\nexport { addValueToWillChange };\r\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\r\n\r\nfunction isWillChangeMotionValue(value) {\r\n    return Boolean(isMotionValue(value) && value.add);\r\n}\r\n\r\nexport { isWillChangeMotionValue };\r\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\r\n\r\nfunction getOptimisedAppearId(visualElement) {\r\n    return visualElement.props[optimizedAppearDataAttribute];\r\n}\r\n\r\nexport { getOptimisedAppearId };\r\n","import { noop } from 'motion-utils';\r\n\r\n/*\r\n  Bezier function generator\r\n  This has been modified from Gaëtan Renaudeau's BezierEasing\r\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\r\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\r\n  \r\n  I've removed the newtonRaphsonIterate algo because in benchmarking it\r\n  wasn't noticiably faster than binarySubdivision, indeed removing it\r\n  usually improved times, depending on the curve.\r\n  I also removed the lookup table, as for the added bundle size and loop we're\r\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\r\n  to 12 to compensate and this still tended to be faster for no perceivable\r\n  loss in accuracy.\r\n  Usage\r\n    const easeOut = cubicBezier(.17,.67,.83,.67);\r\n    const x = easeOut(0.5); // returns 0.627...\r\n*/\r\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\r\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\r\n    t;\r\nconst subdivisionPrecision = 0.0000001;\r\nconst subdivisionMaxIterations = 12;\r\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\r\n    let currentX;\r\n    let currentT;\r\n    let i = 0;\r\n    do {\r\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\r\n        currentX = calcBezier(currentT, mX1, mX2) - x;\r\n        if (currentX > 0.0) {\r\n            upperBound = currentT;\r\n        }\r\n        else {\r\n            lowerBound = currentT;\r\n        }\r\n    } while (Math.abs(currentX) > subdivisionPrecision &&\r\n        ++i < subdivisionMaxIterations);\r\n    return currentT;\r\n}\r\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\r\n    // If this is a linear gradient, return linear easing\r\n    if (mX1 === mY1 && mX2 === mY2)\r\n        return noop;\r\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\r\n    // If animation is at start/end, return t without easing\r\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\r\n}\r\n\r\nexport { cubicBezier };\r\n","// Accepts an easing function and returns a new one that outputs mirrored values for\r\n// the second half of the animation. Turns easeIn into easeInOut.\r\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\r\n\r\nexport { mirrorEasing };\r\n","// Accepts an easing function and returns a new one that outputs reversed values.\r\n// Turns easeIn into easeOut.\r\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\r\n\r\nexport { reverseEasing };\r\n","import { cubicBezier } from './cubic-bezier.mjs';\r\nimport { mirrorEasing } from './modifiers/mirror.mjs';\r\nimport { reverseEasing } from './modifiers/reverse.mjs';\r\n\r\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\r\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\r\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\r\n\r\nexport { backIn, backInOut, backOut };\r\n","import { backIn } from './back.mjs';\r\n\r\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\r\n\r\nexport { anticipate };\r\n","import { mirrorEasing } from './modifiers/mirror.mjs';\r\nimport { reverseEasing } from './modifiers/reverse.mjs';\r\n\r\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\r\nconst circOut = reverseEasing(circIn);\r\nconst circInOut = mirrorEasing(circIn);\r\n\r\nexport { circIn, circInOut, circOut };\r\n","/**\r\n * Check if the value is a zero value string like \"0px\" or \"0%\"\r\n */\r\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\r\n\r\nexport { isZeroValueString };\r\n","// If this number is a decimal, make it just five decimal places\r\n// to avoid exponents\r\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\r\n\r\nexport { sanitize };\r\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\r\n\r\nexport { floatRegex };\r\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\r\n\r\nexport { singleColorRegex };\r\n","import { floatRegex } from '../utils/float-regex.mjs';\r\nimport { isNullish } from '../utils/is-nullish.mjs';\r\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\r\n\r\n/**\r\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\r\n * but false if a number or multiple colors\r\n */\r\nconst isColorString = (type, testProp) => (v) => {\r\n    return Boolean((typeof v === \"string\" &&\r\n        singleColorRegex.test(v) &&\r\n        v.startsWith(type)) ||\r\n        (testProp &&\r\n            !isNullish(v) &&\r\n            Object.prototype.hasOwnProperty.call(v, testProp)));\r\n};\r\nconst splitColor = (aName, bName, cName) => (v) => {\r\n    if (typeof v !== \"string\")\r\n        return v;\r\n    const [a, b, c, alpha] = v.match(floatRegex);\r\n    return {\r\n        [aName]: parseFloat(a),\r\n        [bName]: parseFloat(b),\r\n        [cName]: parseFloat(c),\r\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\r\n    };\r\n};\r\n\r\nexport { isColorString, splitColor };\r\n","function isNullish(v) {\r\n    return v == null;\r\n}\r\n\r\nexport { isNullish };\r\n","import { clamp } from '../../../utils/clamp.mjs';\r\nimport { alpha, number } from '../numbers/index.mjs';\r\nimport { sanitize } from '../utils/sanitize.mjs';\r\nimport { isColorString, splitColor } from './utils.mjs';\r\n\r\nconst clampRgbUnit = (v) => clamp(0, 255, v);\r\nconst rgbUnit = {\r\n    ...number,\r\n    transform: (v) => Math.round(clampRgbUnit(v)),\r\n};\r\nconst rgba = {\r\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\r\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\r\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\r\n        rgbUnit.transform(red) +\r\n        \", \" +\r\n        rgbUnit.transform(green) +\r\n        \", \" +\r\n        rgbUnit.transform(blue) +\r\n        \", \" +\r\n        sanitize(alpha.transform(alpha$1)) +\r\n        \")\",\r\n};\r\n\r\nexport { rgbUnit, rgba };\r\n","import { rgba } from './rgba.mjs';\r\nimport { isColorString } from './utils.mjs';\r\n\r\nfunction parseHex(v) {\r\n    let r = \"\";\r\n    let g = \"\";\r\n    let b = \"\";\r\n    let a = \"\";\r\n    // If we have 6 characters, ie #FF0000\r\n    if (v.length > 5) {\r\n        r = v.substring(1, 3);\r\n        g = v.substring(3, 5);\r\n        b = v.substring(5, 7);\r\n        a = v.substring(7, 9);\r\n        // Or we have 3 characters, ie #F00\r\n    }\r\n    else {\r\n        r = v.substring(1, 2);\r\n        g = v.substring(2, 3);\r\n        b = v.substring(3, 4);\r\n        a = v.substring(4, 5);\r\n        r += r;\r\n        g += g;\r\n        b += b;\r\n        a += a;\r\n    }\r\n    return {\r\n        red: parseInt(r, 16),\r\n        green: parseInt(g, 16),\r\n        blue: parseInt(b, 16),\r\n        alpha: a ? parseInt(a, 16) / 255 : 1,\r\n    };\r\n}\r\nconst hex = {\r\n    test: /*@__PURE__*/ isColorString(\"#\"),\r\n    parse: parseHex,\r\n    transform: rgba.transform,\r\n};\r\n\r\nexport { hex };\r\n","import { alpha } from '../numbers/index.mjs';\r\nimport { percent } from '../numbers/units.mjs';\r\nimport { sanitize } from '../utils/sanitize.mjs';\r\nimport { isColorString, splitColor } from './utils.mjs';\r\n\r\nconst hsla = {\r\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\r\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\r\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\r\n        return (\"hsla(\" +\r\n            Math.round(hue) +\r\n            \", \" +\r\n            percent.transform(sanitize(saturation)) +\r\n            \", \" +\r\n            percent.transform(sanitize(lightness)) +\r\n            \", \" +\r\n            sanitize(alpha.transform(alpha$1)) +\r\n            \")\");\r\n    },\r\n};\r\n\r\nexport { hsla };\r\n","import { hex } from './hex.mjs';\r\nimport { hsla } from './hsla.mjs';\r\nimport { rgba } from './rgba.mjs';\r\n\r\nconst color = {\r\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\r\n    parse: (v) => {\r\n        if (rgba.test(v)) {\r\n            return rgba.parse(v);\r\n        }\r\n        else if (hsla.test(v)) {\r\n            return hsla.parse(v);\r\n        }\r\n        else {\r\n            return hex.parse(v);\r\n        }\r\n    },\r\n    transform: (v) => {\r\n        return typeof v === \"string\"\r\n            ? v\r\n            : v.hasOwnProperty(\"red\")\r\n                ? rgba.transform(v)\r\n                : hsla.transform(v);\r\n    },\r\n};\r\n\r\nexport { color };\r\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\r\n\r\nexport { colorRegex };\r\n","import { color } from '../color/index.mjs';\r\nimport { colorRegex } from '../utils/color-regex.mjs';\r\nimport { floatRegex } from '../utils/float-regex.mjs';\r\nimport { sanitize } from '../utils/sanitize.mjs';\r\n\r\nfunction test(v) {\r\n    var _a, _b;\r\n    return (isNaN(v) &&\r\n        typeof v === \"string\" &&\r\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\r\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\r\n            0);\r\n}\r\nconst NUMBER_TOKEN = \"number\";\r\nconst COLOR_TOKEN = \"color\";\r\nconst VAR_TOKEN = \"var\";\r\nconst VAR_FUNCTION_TOKEN = \"var(\";\r\nconst SPLIT_TOKEN = \"${}\";\r\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\r\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\r\nfunction analyseComplexValue(value) {\r\n    const originalValue = value.toString();\r\n    const values = [];\r\n    const indexes = {\r\n        color: [],\r\n        number: [],\r\n        var: [],\r\n    };\r\n    const types = [];\r\n    let i = 0;\r\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\r\n        if (color.test(parsedValue)) {\r\n            indexes.color.push(i);\r\n            types.push(COLOR_TOKEN);\r\n            values.push(color.parse(parsedValue));\r\n        }\r\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\r\n            indexes.var.push(i);\r\n            types.push(VAR_TOKEN);\r\n            values.push(parsedValue);\r\n        }\r\n        else {\r\n            indexes.number.push(i);\r\n            types.push(NUMBER_TOKEN);\r\n            values.push(parseFloat(parsedValue));\r\n        }\r\n        ++i;\r\n        return SPLIT_TOKEN;\r\n    });\r\n    const split = tokenised.split(SPLIT_TOKEN);\r\n    return { values, split, indexes, types };\r\n}\r\nfunction parseComplexValue(v) {\r\n    return analyseComplexValue(v).values;\r\n}\r\nfunction createTransformer(source) {\r\n    const { split, types } = analyseComplexValue(source);\r\n    const numSections = split.length;\r\n    return (v) => {\r\n        let output = \"\";\r\n        for (let i = 0; i < numSections; i++) {\r\n            output += split[i];\r\n            if (v[i] !== undefined) {\r\n                const type = types[i];\r\n                if (type === NUMBER_TOKEN) {\r\n                    output += sanitize(v[i]);\r\n                }\r\n                else if (type === COLOR_TOKEN) {\r\n                    output += color.transform(v[i]);\r\n                }\r\n                else {\r\n                    output += v[i];\r\n                }\r\n            }\r\n        }\r\n        return output;\r\n    };\r\n}\r\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\r\nfunction getAnimatableNone(v) {\r\n    const parsed = parseComplexValue(v);\r\n    const transformer = createTransformer(v);\r\n    return transformer(parsed.map(convertNumbersToZero));\r\n}\r\nconst complex = {\r\n    test,\r\n    parse: parseComplexValue,\r\n    createTransformer,\r\n    getAnimatableNone,\r\n};\r\n\r\nexport { analyseComplexValue, complex };\r\n","import { complex } from './index.mjs';\r\nimport { floatRegex } from '../utils/float-regex.mjs';\r\n\r\n/**\r\n * Properties that should default to 1 or 100%\r\n */\r\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\r\nfunction applyDefaultFilter(v) {\r\n    const [name, value] = v.slice(0, -1).split(\"(\");\r\n    if (name === \"drop-shadow\")\r\n        return v;\r\n    const [number] = value.match(floatRegex) || [];\r\n    if (!number)\r\n        return v;\r\n    const unit = value.replace(number, \"\");\r\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\r\n    if (number !== value)\r\n        defaultValue *= 100;\r\n    return name + \"(\" + defaultValue + unit + \")\";\r\n}\r\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\r\nconst filter = {\r\n    ...complex,\r\n    getAnimatableNone: (v) => {\r\n        const functions = v.match(functionRegex);\r\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\r\n    },\r\n};\r\n\r\nexport { filter };\r\n","import { color } from '../../../value/types/color/index.mjs';\r\nimport { filter } from '../../../value/types/complex/filter.mjs';\r\nimport { numberValueTypes } from './number.mjs';\r\n\r\n/**\r\n * A map of default value types for common values\r\n */\r\nconst defaultValueTypes = {\r\n    ...numberValueTypes,\r\n    // Color props\r\n    color,\r\n    backgroundColor: color,\r\n    outlineColor: color,\r\n    fill: color,\r\n    stroke: color,\r\n    // Border props\r\n    borderColor: color,\r\n    borderTopColor: color,\r\n    borderRightColor: color,\r\n    borderBottomColor: color,\r\n    borderLeftColor: color,\r\n    filter,\r\n    WebkitFilter: filter,\r\n};\r\n/**\r\n * Gets the default ValueType for the provided value key\r\n */\r\nconst getDefaultValueType = (key) => defaultValueTypes[key];\r\n\r\nexport { defaultValueTypes, getDefaultValueType };\r\n","import { complex } from '../../../value/types/complex/index.mjs';\r\nimport { filter } from '../../../value/types/complex/filter.mjs';\r\nimport { getDefaultValueType } from './defaults.mjs';\r\n\r\nfunction getAnimatableNone(key, value) {\r\n    let defaultValueType = getDefaultValueType(key);\r\n    if (defaultValueType !== filter)\r\n        defaultValueType = complex;\r\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\r\n    return defaultValueType.getAnimatableNone\r\n        ? defaultValueType.getAnimatableNone(value)\r\n        : undefined;\r\n}\r\n\r\nexport { getAnimatableNone };\r\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\r\nimport { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\r\n\r\n/**\r\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\r\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\r\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\r\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\r\n */\r\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\r\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\r\n    let i = 0;\r\n    let animatableTemplate = undefined;\r\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\r\n        const keyframe = unresolvedKeyframes[i];\r\n        if (typeof keyframe === \"string\" &&\r\n            !invalidTemplates.has(keyframe) &&\r\n            analyseComplexValue(keyframe).values.length) {\r\n            animatableTemplate = unresolvedKeyframes[i];\r\n        }\r\n        i++;\r\n    }\r\n    if (animatableTemplate && name) {\r\n        for (const noneIndex of noneKeyframeIndexes) {\r\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\r\n        }\r\n    }\r\n}\r\n\r\nexport { makeNoneKeyframesAnimatable };\r\n","import { number } from '../../../value/types/numbers/index.mjs';\r\nimport { px } from '../../../value/types/numbers/units.mjs';\r\nimport { transformPropOrder } from '../../html/utils/keys-transform.mjs';\r\n\r\nconst isNumOrPxType = (v) => v === number || v === px;\r\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\r\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\r\n    if (transform === \"none\" || !transform)\r\n        return 0;\r\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\r\n    if (matrix3d) {\r\n        return getPosFromMatrix(matrix3d[1], pos3);\r\n    }\r\n    else {\r\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\r\n        if (matrix) {\r\n            return getPosFromMatrix(matrix[1], pos2);\r\n        }\r\n        else {\r\n            return 0;\r\n        }\r\n    }\r\n};\r\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\r\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\r\nfunction removeNonTranslationalTransform(visualElement) {\r\n    const removedTransforms = [];\r\n    nonTranslationalTransformKeys.forEach((key) => {\r\n        const value = visualElement.getValue(key);\r\n        if (value !== undefined) {\r\n            removedTransforms.push([key, value.get()]);\r\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\r\n        }\r\n    });\r\n    return removedTransforms;\r\n}\r\nconst positionalValues = {\r\n    // Dimensions\r\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\r\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\r\n    top: (_bbox, { top }) => parseFloat(top),\r\n    left: (_bbox, { left }) => parseFloat(left),\r\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\r\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\r\n    // Transform\r\n    x: getTranslateFromMatrix(4, 13),\r\n    y: getTranslateFromMatrix(5, 14),\r\n};\r\n// Alias translate longform names\r\npositionalValues.translateX = positionalValues.x;\r\npositionalValues.translateY = positionalValues.y;\r\n\r\nexport { isNumOrPxType, positionalValues, removeNonTranslationalTransform };\r\n","import { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\r\nimport { frame } from '../../frameloop/frame.mjs';\r\n\r\nconst toResolve = new Set();\r\nlet isScheduled = false;\r\nlet anyNeedsMeasurement = false;\r\nfunction measureAllKeyframes() {\r\n    if (anyNeedsMeasurement) {\r\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\r\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\r\n        const transformsToRestore = new Map();\r\n        /**\r\n         * Write pass\r\n         * If we're measuring elements we want to remove bounding box-changing transforms.\r\n         */\r\n        elementsToMeasure.forEach((element) => {\r\n            const removedTransforms = removeNonTranslationalTransform(element);\r\n            if (!removedTransforms.length)\r\n                return;\r\n            transformsToRestore.set(element, removedTransforms);\r\n            element.render();\r\n        });\r\n        // Read\r\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\r\n        // Write\r\n        elementsToMeasure.forEach((element) => {\r\n            element.render();\r\n            const restore = transformsToRestore.get(element);\r\n            if (restore) {\r\n                restore.forEach(([key, value]) => {\r\n                    var _a;\r\n                    (_a = element.getValue(key)) === null || _a === void 0 ? void 0 : _a.set(value);\r\n                });\r\n            }\r\n        });\r\n        // Read\r\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\r\n        // Write\r\n        resolversToMeasure.forEach((resolver) => {\r\n            if (resolver.suspendedScrollY !== undefined) {\r\n                window.scrollTo(0, resolver.suspendedScrollY);\r\n            }\r\n        });\r\n    }\r\n    anyNeedsMeasurement = false;\r\n    isScheduled = false;\r\n    toResolve.forEach((resolver) => resolver.complete());\r\n    toResolve.clear();\r\n}\r\nfunction readAllKeyframes() {\r\n    toResolve.forEach((resolver) => {\r\n        resolver.readKeyframes();\r\n        if (resolver.needsMeasurement) {\r\n            anyNeedsMeasurement = true;\r\n        }\r\n    });\r\n}\r\nfunction flushKeyframeResolvers() {\r\n    readAllKeyframes();\r\n    measureAllKeyframes();\r\n}\r\nclass KeyframeResolver {\r\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\r\n        /**\r\n         * Track whether this resolver has completed. Once complete, it never\r\n         * needs to attempt keyframe resolution again.\r\n         */\r\n        this.isComplete = false;\r\n        /**\r\n         * Track whether this resolver is async. If it is, it'll be added to the\r\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\r\n         * to trigger read/write thrashing don't need to be async.\r\n         */\r\n        this.isAsync = false;\r\n        /**\r\n         * Track whether this resolver needs to perform a measurement\r\n         * to resolve its keyframes.\r\n         */\r\n        this.needsMeasurement = false;\r\n        /**\r\n         * Track whether this resolver is currently scheduled to resolve\r\n         * to allow it to be cancelled and resumed externally.\r\n         */\r\n        this.isScheduled = false;\r\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\r\n        this.onComplete = onComplete;\r\n        this.name = name;\r\n        this.motionValue = motionValue;\r\n        this.element = element;\r\n        this.isAsync = isAsync;\r\n    }\r\n    scheduleResolve() {\r\n        this.isScheduled = true;\r\n        if (this.isAsync) {\r\n            toResolve.add(this);\r\n            if (!isScheduled) {\r\n                isScheduled = true;\r\n                frame.read(readAllKeyframes);\r\n                frame.resolveKeyframes(measureAllKeyframes);\r\n            }\r\n        }\r\n        else {\r\n            this.readKeyframes();\r\n            this.complete();\r\n        }\r\n    }\r\n    readKeyframes() {\r\n        const { unresolvedKeyframes, name, element, motionValue } = this;\r\n        /**\r\n         * If a keyframe is null, we hydrate it either by reading it from\r\n         * the instance, or propagating from previous keyframes.\r\n         */\r\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\r\n            if (unresolvedKeyframes[i] === null) {\r\n                /**\r\n                 * If the first keyframe is null, we need to find its value by sampling the element\r\n                 */\r\n                if (i === 0) {\r\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\r\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\r\n                    if (currentValue !== undefined) {\r\n                        unresolvedKeyframes[0] = currentValue;\r\n                    }\r\n                    else if (element && name) {\r\n                        const valueAsRead = element.readValue(name, finalKeyframe);\r\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\r\n                            unresolvedKeyframes[0] = valueAsRead;\r\n                        }\r\n                    }\r\n                    if (unresolvedKeyframes[0] === undefined) {\r\n                        unresolvedKeyframes[0] = finalKeyframe;\r\n                    }\r\n                    if (motionValue && currentValue === undefined) {\r\n                        motionValue.set(unresolvedKeyframes[0]);\r\n                    }\r\n                }\r\n                else {\r\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    setFinalKeyframe() { }\r\n    measureInitialState() { }\r\n    renderEndStyles() { }\r\n    measureEndState() { }\r\n    complete() {\r\n        this.isComplete = true;\r\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\r\n        toResolve.delete(this);\r\n    }\r\n    cancel() {\r\n        if (!this.isComplete) {\r\n            this.isScheduled = false;\r\n            toResolve.delete(this);\r\n        }\r\n    }\r\n    resume() {\r\n        if (!this.isComplete)\r\n            this.scheduleResolve();\r\n    }\r\n}\r\n\r\nexport { KeyframeResolver, flushKeyframeResolvers };\r\n","/**\r\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\r\n */\r\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\r\n\r\nexport { isNumericalString };\r\n","import { invariant } from 'motion-utils';\r\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\r\nimport { isCSSVariableToken } from './is-css-variable.mjs';\r\n\r\n/**\r\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\r\n *\r\n * ```\r\n * `var(--foo, #fff)` => [`--foo`, '#fff']\r\n * ```\r\n *\r\n * @param current\r\n */\r\nconst splitCSSVariableRegex = \r\n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\r\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\r\nfunction parseCSSVariable(current) {\r\n    const match = splitCSSVariableRegex.exec(current);\r\n    if (!match)\r\n        return [,];\r\n    const [, token1, token2, fallback] = match;\r\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\r\n}\r\nconst maxDepth = 4;\r\nfunction getVariableValue(current, element, depth = 1) {\r\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\r\n    const [token, fallback] = parseCSSVariable(current);\r\n    // No CSS variable detected\r\n    if (!token)\r\n        return;\r\n    // Attempt to read this CSS variable off the element\r\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\r\n    if (resolved) {\r\n        const trimmed = resolved.trim();\r\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\r\n    }\r\n    return isCSSVariableToken(fallback)\r\n        ? getVariableValue(fallback, element, depth + 1)\r\n        : fallback;\r\n}\r\n\r\nexport { getVariableValue, parseCSSVariable };\r\n","/**\r\n * Tests a provided value against a ValueType\r\n */\r\nconst testValueType = (v) => (type) => type.test(v);\r\n\r\nexport { testValueType };\r\n","import { number } from '../../../value/types/numbers/index.mjs';\r\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\r\nimport { testValueType } from './test.mjs';\r\nimport { auto } from './type-auto.mjs';\r\n\r\n/**\r\n * A list of value types commonly used for dimensions\r\n */\r\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\r\n/**\r\n * Tests a dimensional value against the list of dimension ValueTypes\r\n */\r\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\r\n\r\nexport { dimensionValueTypes, findDimensionValueType };\r\n","/**\r\n * ValueType for \"auto\"\r\n */\r\nconst auto = {\r\n    test: (v) => v === \"auto\",\r\n    parse: (v) => v,\r\n};\r\n\r\nexport { auto };\r\n","import { isNone } from '../../animation/utils/is-none.mjs';\r\nimport { positionalKeys } from '../html/utils/keys-position.mjs';\r\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\r\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\r\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\r\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\r\nimport { isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\r\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\r\n\r\nclass DOMKeyframesResolver extends KeyframeResolver {\r\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\r\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\r\n    }\r\n    readKeyframes() {\r\n        const { unresolvedKeyframes, element, name } = this;\r\n        if (!element || !element.current)\r\n            return;\r\n        super.readKeyframes();\r\n        /**\r\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\r\n         */\r\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\r\n            let keyframe = unresolvedKeyframes[i];\r\n            if (typeof keyframe === \"string\") {\r\n                keyframe = keyframe.trim();\r\n                if (isCSSVariableToken(keyframe)) {\r\n                    const resolved = getVariableValue(keyframe, element.current);\r\n                    if (resolved !== undefined) {\r\n                        unresolvedKeyframes[i] = resolved;\r\n                    }\r\n                    if (i === unresolvedKeyframes.length - 1) {\r\n                        this.finalKeyframe = keyframe;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        /**\r\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\r\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\r\n         * have a far bigger performance impact.\r\n         */\r\n        this.resolveNoneKeyframes();\r\n        /**\r\n         * Check to see if unit type has changed. If so schedule jobs that will\r\n         * temporarily set styles to the destination keyframes.\r\n         * Skip if we have more than two keyframes or this isn't a positional value.\r\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\r\n         */\r\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\r\n            return;\r\n        }\r\n        const [origin, target] = unresolvedKeyframes;\r\n        const originType = findDimensionValueType(origin);\r\n        const targetType = findDimensionValueType(target);\r\n        /**\r\n         * Either we don't recognise these value types or we can animate between them.\r\n         */\r\n        if (originType === targetType)\r\n            return;\r\n        /**\r\n         * If both values are numbers or pixels, we can animate between them by\r\n         * converting them to numbers.\r\n         */\r\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\r\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\r\n                const value = unresolvedKeyframes[i];\r\n                if (typeof value === \"string\") {\r\n                    unresolvedKeyframes[i] = parseFloat(value);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            /**\r\n             * Else, the only way to resolve this is by measuring the element.\r\n             */\r\n            this.needsMeasurement = true;\r\n        }\r\n    }\r\n    resolveNoneKeyframes() {\r\n        const { unresolvedKeyframes, name } = this;\r\n        const noneKeyframeIndexes = [];\r\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\r\n            if (isNone(unresolvedKeyframes[i])) {\r\n                noneKeyframeIndexes.push(i);\r\n            }\r\n        }\r\n        if (noneKeyframeIndexes.length) {\r\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\r\n        }\r\n    }\r\n    measureInitialState() {\r\n        const { element, unresolvedKeyframes, name } = this;\r\n        if (!element || !element.current)\r\n            return;\r\n        if (name === \"height\") {\r\n            this.suspendedScrollY = window.pageYOffset;\r\n        }\r\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\r\n        unresolvedKeyframes[0] = this.measuredOrigin;\r\n        // Set final key frame to measure after next render\r\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\r\n        if (measureKeyframe !== undefined) {\r\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\r\n        }\r\n    }\r\n    measureEndState() {\r\n        var _a;\r\n        const { element, name, unresolvedKeyframes } = this;\r\n        if (!element || !element.current)\r\n            return;\r\n        const value = element.getValue(name);\r\n        value && value.jump(this.measuredOrigin, false);\r\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\r\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\r\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\r\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\r\n            this.finalKeyframe = finalKeyframe;\r\n        }\r\n        // If we removed transform values, reapply them before the next render\r\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\r\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\r\n                element\r\n                    .getValue(unsetTransformName)\r\n                    .set(unsetTransformValue);\r\n            });\r\n        }\r\n        this.resolveNoneKeyframes();\r\n    }\r\n}\r\n\r\nexport { DOMKeyframesResolver };\r\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\r\n\r\nfunction isNone(value) {\r\n    if (typeof value === \"number\") {\r\n        return value === 0;\r\n    }\r\n    else if (value !== null) {\r\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\r\n    }\r\n    else {\r\n        return true;\r\n    }\r\n}\r\n\r\nexport { isNone };\r\n","import { complex } from '../../value/types/complex/index.mjs';\r\n\r\n/**\r\n * Check if a value is animatable. Examples:\r\n *\r\n * ✅: 100, \"100px\", \"#fff\"\r\n * ❌: \"block\", \"url(2.jpg)\"\r\n * @param value\r\n *\r\n * @internal\r\n */\r\nconst isAnimatable = (value, name) => {\r\n    // If the list of keys tat might be non-animatable grows, replace with Set\r\n    if (name === \"zIndex\")\r\n        return false;\r\n    // If it's a number or a keyframes array, we can animate it. We might at some point\r\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\r\n    // but for now lets leave it like this for performance reasons\r\n    if (typeof value === \"number\" || Array.isArray(value))\r\n        return true;\r\n    if (typeof value === \"string\" && // It's animatable if we have a string\r\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\r\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\r\n    ) {\r\n        return true;\r\n    }\r\n    return false;\r\n};\r\n\r\nexport { isAnimatable };\r\n","const isNotNull = (value) => value !== null;\r\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\r\n    const resolvedKeyframes = keyframes.filter(isNotNull);\r\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\r\n        ? 0\r\n        : resolvedKeyframes.length - 1;\r\n    return !index || finalKeyframe === undefined\r\n        ? resolvedKeyframes[index]\r\n        : finalKeyframe;\r\n}\r\n\r\nexport { getFinalKeyframe };\r\n","import { time } from '../../frameloop/sync-time.mjs';\r\nimport { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\r\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\r\nimport { canAnimate } from './utils/can-animate.mjs';\r\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\r\n\r\n/**\r\n * Maximum time allowed between an animation being created and it being\r\n * resolved for us to use the latter as the start time.\r\n *\r\n * This is to ensure that while we prefer to \"start\" an animation as soon\r\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\r\n * between these two moments.\r\n */\r\nconst MAX_RESOLVE_DELAY = 40;\r\nclass BaseAnimation {\r\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\r\n        // Track whether the animation has been stopped. Stopped animations won't restart.\r\n        this.isStopped = false;\r\n        this.hasAttemptedResolve = false;\r\n        this.createdAt = time.now();\r\n        this.options = {\r\n            autoplay,\r\n            delay,\r\n            type,\r\n            repeat,\r\n            repeatDelay,\r\n            repeatType,\r\n            ...options,\r\n        };\r\n        this.updateFinishedPromise();\r\n    }\r\n    /**\r\n     * This method uses the createdAt and resolvedAt to calculate the\r\n     * animation startTime. *Ideally*, we would use the createdAt time as t=0\r\n     * as the following frame would then be the first frame of the animation in\r\n     * progress, which would feel snappier.\r\n     *\r\n     * However, if there's a delay (main thread work) between the creation of\r\n     * the animation and the first commited frame, we prefer to use resolvedAt\r\n     * to avoid a sudden jump into the animation.\r\n     */\r\n    calcStartTime() {\r\n        if (!this.resolvedAt)\r\n            return this.createdAt;\r\n        return this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\r\n            ? this.resolvedAt\r\n            : this.createdAt;\r\n    }\r\n    /**\r\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\r\n     * this.resolved will synchronously flush all pending keyframe resolvers.\r\n     * This is a deoptimisation, but at its worst still batches read/writes.\r\n     */\r\n    get resolved() {\r\n        if (!this._resolved && !this.hasAttemptedResolve) {\r\n            flushKeyframeResolvers();\r\n        }\r\n        return this._resolved;\r\n    }\r\n    /**\r\n     * A method to be called when the keyframes resolver completes. This method\r\n     * will check if its possible to run the animation and, if not, skip it.\r\n     * Otherwise, it will call initPlayback on the implementing class.\r\n     */\r\n    onKeyframesResolved(keyframes, finalKeyframe) {\r\n        this.resolvedAt = time.now();\r\n        this.hasAttemptedResolve = true;\r\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\r\n        /**\r\n         * If we can't animate this value with the resolved keyframes\r\n         * then we should complete it immediately.\r\n         */\r\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\r\n            // Finish immediately\r\n            if (instantAnimationState.current || !delay) {\r\n                onUpdate &&\r\n                    onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\r\n                onComplete && onComplete();\r\n                this.resolveFinishedPromise();\r\n                return;\r\n            }\r\n            // Finish after a delay\r\n            else {\r\n                this.options.duration = 0;\r\n            }\r\n        }\r\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\r\n        if (resolvedAnimation === false)\r\n            return;\r\n        this._resolved = {\r\n            keyframes,\r\n            finalKeyframe,\r\n            ...resolvedAnimation,\r\n        };\r\n        this.onPostResolved();\r\n    }\r\n    onPostResolved() { }\r\n    /**\r\n     * Allows the returned animation to be awaited or promise-chained. Currently\r\n     * resolves when the animation finishes at all but in a future update could/should\r\n     * reject if its cancels.\r\n     */\r\n    then(resolve, reject) {\r\n        return this.currentFinishedPromise.then(resolve, reject);\r\n    }\r\n    flatten() {\r\n        this.options.type = \"keyframes\";\r\n        this.options.ease = \"linear\";\r\n    }\r\n    updateFinishedPromise() {\r\n        this.currentFinishedPromise = new Promise((resolve) => {\r\n            this.resolveFinishedPromise = resolve;\r\n        });\r\n    }\r\n}\r\n\r\nexport { BaseAnimation };\r\n","import { isGenerator } from 'motion-dom';\r\nimport { warning } from 'motion-utils';\r\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\r\n\r\nfunction hasKeyframesChanged(keyframes) {\r\n    const current = keyframes[0];\r\n    if (keyframes.length === 1)\r\n        return true;\r\n    for (let i = 0; i < keyframes.length; i++) {\r\n        if (keyframes[i] !== current)\r\n            return true;\r\n    }\r\n}\r\nfunction canAnimate(keyframes, name, type, velocity) {\r\n    /**\r\n     * Check if we're able to animate between the start and end keyframes,\r\n     * and throw a warning if we're attempting to animate between one that's\r\n     * animatable and another that isn't.\r\n     */\r\n    const originKeyframe = keyframes[0];\r\n    if (originKeyframe === null)\r\n        return false;\r\n    /**\r\n     * These aren't traditionally animatable but we do support them.\r\n     * In future we could look into making this more generic or replacing\r\n     * this function with mix() === mixImmediate\r\n     */\r\n    if (name === \"display\" || name === \"visibility\")\r\n        return true;\r\n    const targetKeyframe = keyframes[keyframes.length - 1];\r\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\r\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\r\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\r\n    // Always skip if any of these are true\r\n    if (!isOriginAnimatable || !isTargetAnimatable) {\r\n        return false;\r\n    }\r\n    return (hasKeyframesChanged(keyframes) ||\r\n        ((type === \"spring\" || isGenerator(type)) && velocity));\r\n}\r\n\r\nexport { canAnimate };\r\n","/*\r\n  Value in range from progress\r\n\r\n  Given a lower limit and an upper limit, we return the value within\r\n  that range as expressed by progress (usually a number from 0 to 1)\r\n\r\n  So progress = 0.5 would change\r\n\r\n  from -------- to\r\n\r\n  to\r\n\r\n  from ---- to\r\n\r\n  E.g. from = 10, to = 20, progress = 0.5 => 15\r\n\r\n  @param [number]: Lower limit of range\r\n  @param [number]: Upper limit of range\r\n  @param [number]: The progress between lower and upper limits expressed 0-1\r\n  @return [number]: Value as calculated from progress within range (not limited within range)\r\n*/\r\nconst mixNumber = (from, to, progress) => {\r\n    return from + (to - from) * progress;\r\n};\r\n\r\nexport { mixNumber };\r\n","// Adapted from https://gist.github.com/mjackson/5311256\r\nfunction hueToRgb(p, q, t) {\r\n    if (t < 0)\r\n        t += 1;\r\n    if (t > 1)\r\n        t -= 1;\r\n    if (t < 1 / 6)\r\n        return p + (q - p) * 6 * t;\r\n    if (t < 1 / 2)\r\n        return q;\r\n    if (t < 2 / 3)\r\n        return p + (q - p) * (2 / 3 - t) * 6;\r\n    return p;\r\n}\r\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\r\n    hue /= 360;\r\n    saturation /= 100;\r\n    lightness /= 100;\r\n    let red = 0;\r\n    let green = 0;\r\n    let blue = 0;\r\n    if (!saturation) {\r\n        red = green = blue = lightness;\r\n    }\r\n    else {\r\n        const q = lightness < 0.5\r\n            ? lightness * (1 + saturation)\r\n            : lightness + saturation - lightness * saturation;\r\n        const p = 2 * lightness - q;\r\n        red = hueToRgb(p, q, hue + 1 / 3);\r\n        green = hueToRgb(p, q, hue);\r\n        blue = hueToRgb(p, q, hue - 1 / 3);\r\n    }\r\n    return {\r\n        red: Math.round(red * 255),\r\n        green: Math.round(green * 255),\r\n        blue: Math.round(blue * 255),\r\n        alpha,\r\n    };\r\n}\r\n\r\nexport { hslaToRgba };\r\n","function mixImmediate(a, b) {\r\n    return (p) => (p > 0 ? b : a);\r\n}\r\n\r\nexport { mixImmediate };\r\n","import { mixNumber } from './number.mjs';\r\nimport { warning } from 'motion-utils';\r\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\r\nimport { hex } from '../../value/types/color/hex.mjs';\r\nimport { rgba } from '../../value/types/color/rgba.mjs';\r\nimport { hsla } from '../../value/types/color/hsla.mjs';\r\nimport { mixImmediate } from './immediate.mjs';\r\n\r\n// Linear color space blending\r\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\r\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\r\nconst mixLinearColor = (from, to, v) => {\r\n    const fromExpo = from * from;\r\n    const expo = v * (to * to - fromExpo) + fromExpo;\r\n    return expo < 0 ? 0 : Math.sqrt(expo);\r\n};\r\nconst colorTypes = [hex, rgba, hsla];\r\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\r\nfunction asRGBA(color) {\r\n    const type = getColorType(color);\r\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\r\n    if (!Boolean(type))\r\n        return false;\r\n    let model = type.parse(color);\r\n    if (type === hsla) {\r\n        // TODO Remove this cast - needed since Motion's stricter typing\r\n        model = hslaToRgba(model);\r\n    }\r\n    return model;\r\n}\r\nconst mixColor = (from, to) => {\r\n    const fromRGBA = asRGBA(from);\r\n    const toRGBA = asRGBA(to);\r\n    if (!fromRGBA || !toRGBA) {\r\n        return mixImmediate(from, to);\r\n    }\r\n    const blended = { ...fromRGBA };\r\n    return (v) => {\r\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\r\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\r\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\r\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\r\n        return rgba.transform(blended);\r\n    };\r\n};\r\n\r\nexport { mixColor, mixLinearColor };\r\n","/**\r\n * Pipe\r\n * Compose other transformers to run linearily\r\n * pipe(min(20), max(40))\r\n * @param  {...functions} transformers\r\n * @return {function}\r\n */\r\nconst combineFunctions = (a, b) => (v) => b(a(v));\r\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\r\n\r\nexport { pipe };\r\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\r\n/**\r\n * Returns a function that, when provided a progress value between 0 and 1,\r\n * will return the \"none\" or \"hidden\" string only when the progress is that of\r\n * the origin or target.\r\n */\r\nfunction mixVisibility(origin, target) {\r\n    if (invisibleValues.has(origin)) {\r\n        return (p) => (p <= 0 ? origin : target);\r\n    }\r\n    else {\r\n        return (p) => (p >= 1 ? target : origin);\r\n    }\r\n}\r\n\r\nexport { invisibleValues, mixVisibility };\r\n","import { mixNumber as mixNumber$1 } from './number.mjs';\r\nimport { mixColor } from './color.mjs';\r\nimport { pipe } from '../pipe.mjs';\r\nimport { warning } from 'motion-utils';\r\nimport { color } from '../../value/types/color/index.mjs';\r\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\r\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\r\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\r\nimport { mixImmediate } from './immediate.mjs';\r\n\r\nfunction mixNumber(a, b) {\r\n    return (p) => mixNumber$1(a, b, p);\r\n}\r\nfunction getMixer(a) {\r\n    if (typeof a === \"number\") {\r\n        return mixNumber;\r\n    }\r\n    else if (typeof a === \"string\") {\r\n        return isCSSVariableToken(a)\r\n            ? mixImmediate\r\n            : color.test(a)\r\n                ? mixColor\r\n                : mixComplex;\r\n    }\r\n    else if (Array.isArray(a)) {\r\n        return mixArray;\r\n    }\r\n    else if (typeof a === \"object\") {\r\n        return color.test(a) ? mixColor : mixObject;\r\n    }\r\n    return mixImmediate;\r\n}\r\nfunction mixArray(a, b) {\r\n    const output = [...a];\r\n    const numValues = output.length;\r\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\r\n    return (p) => {\r\n        for (let i = 0; i < numValues; i++) {\r\n            output[i] = blendValue[i](p);\r\n        }\r\n        return output;\r\n    };\r\n}\r\nfunction mixObject(a, b) {\r\n    const output = { ...a, ...b };\r\n    const blendValue = {};\r\n    for (const key in output) {\r\n        if (a[key] !== undefined && b[key] !== undefined) {\r\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\r\n        }\r\n    }\r\n    return (v) => {\r\n        for (const key in blendValue) {\r\n            output[key] = blendValue[key](v);\r\n        }\r\n        return output;\r\n    };\r\n}\r\nfunction matchOrder(origin, target) {\r\n    var _a;\r\n    const orderedOrigin = [];\r\n    const pointers = { color: 0, var: 0, number: 0 };\r\n    for (let i = 0; i < target.values.length; i++) {\r\n        const type = target.types[i];\r\n        const originIndex = origin.indexes[type][pointers[type]];\r\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\r\n        orderedOrigin[i] = originValue;\r\n        pointers[type]++;\r\n    }\r\n    return orderedOrigin;\r\n}\r\nconst mixComplex = (origin, target) => {\r\n    const template = complex.createTransformer(target);\r\n    const originStats = analyseComplexValue(origin);\r\n    const targetStats = analyseComplexValue(target);\r\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\r\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\r\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\r\n    if (canInterpolate) {\r\n        if ((invisibleValues.has(origin) &&\r\n            !targetStats.values.length) ||\r\n            (invisibleValues.has(target) &&\r\n                !originStats.values.length)) {\r\n            return mixVisibility(origin, target);\r\n        }\r\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\r\n    }\r\n    else {\r\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\r\n        return mixImmediate(origin, target);\r\n    }\r\n};\r\n\r\nexport { getMixer, mixArray, mixComplex, mixObject };\r\n","import { getMixer } from './complex.mjs';\r\nimport { mixNumber } from './number.mjs';\r\n\r\nfunction mix(from, to, p) {\r\n    if (typeof from === \"number\" &&\r\n        typeof to === \"number\" &&\r\n        typeof p === \"number\") {\r\n        return mixNumber(from, to, p);\r\n    }\r\n    const mixer = getMixer(from);\r\n    return mixer(from, to);\r\n}\r\n\r\nexport { mix };\r\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\r\n\r\nconst velocitySampleDuration = 5; // ms\r\nfunction calcGeneratorVelocity(resolveValue, t, current) {\r\n    const prevT = Math.max(t - velocitySampleDuration, 0);\r\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\r\n}\r\n\r\nexport { calcGeneratorVelocity };\r\n","const springDefaults = {\r\n    // Default spring physics\r\n    stiffness: 100,\r\n    damping: 10,\r\n    mass: 1.0,\r\n    velocity: 0.0,\r\n    // Default duration/bounce-based options\r\n    duration: 800, // in ms\r\n    bounce: 0.3,\r\n    visualDuration: 0.3, // in seconds\r\n    // Rest thresholds\r\n    restSpeed: {\r\n        granular: 0.01,\r\n        default: 2,\r\n    },\r\n    restDelta: {\r\n        granular: 0.005,\r\n        default: 0.5,\r\n    },\r\n    // Limits\r\n    minDuration: 0.01, // in seconds\r\n    maxDuration: 10.0, // in seconds\r\n    minDamping: 0.05,\r\n    maxDamping: 1,\r\n};\r\n\r\nexport { springDefaults };\r\n","import { warning, secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\r\nimport { clamp } from '../../../utils/clamp.mjs';\r\nimport { springDefaults } from './defaults.mjs';\r\n\r\nconst safeMin = 0.001;\r\nfunction findSpring({ duration = springDefaults.duration, bounce = springDefaults.bounce, velocity = springDefaults.velocity, mass = springDefaults.mass, }) {\r\n    let envelope;\r\n    let derivative;\r\n    warning(duration <= secondsToMilliseconds(springDefaults.maxDuration), \"Spring duration must be 10 seconds or less\");\r\n    let dampingRatio = 1 - bounce;\r\n    /**\r\n     * Restrict dampingRatio and duration to within acceptable ranges.\r\n     */\r\n    dampingRatio = clamp(springDefaults.minDamping, springDefaults.maxDamping, dampingRatio);\r\n    duration = clamp(springDefaults.minDuration, springDefaults.maxDuration, millisecondsToSeconds(duration));\r\n    if (dampingRatio < 1) {\r\n        /**\r\n         * Underdamped spring\r\n         */\r\n        envelope = (undampedFreq) => {\r\n            const exponentialDecay = undampedFreq * dampingRatio;\r\n            const delta = exponentialDecay * duration;\r\n            const a = exponentialDecay - velocity;\r\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\r\n            const c = Math.exp(-delta);\r\n            return safeMin - (a / b) * c;\r\n        };\r\n        derivative = (undampedFreq) => {\r\n            const exponentialDecay = undampedFreq * dampingRatio;\r\n            const delta = exponentialDecay * duration;\r\n            const d = delta * velocity + velocity;\r\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\r\n            const f = Math.exp(-delta);\r\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\r\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\r\n            return (factor * ((d - e) * f)) / g;\r\n        };\r\n    }\r\n    else {\r\n        /**\r\n         * Critically-damped spring\r\n         */\r\n        envelope = (undampedFreq) => {\r\n            const a = Math.exp(-undampedFreq * duration);\r\n            const b = (undampedFreq - velocity) * duration + 1;\r\n            return -safeMin + a * b;\r\n        };\r\n        derivative = (undampedFreq) => {\r\n            const a = Math.exp(-undampedFreq * duration);\r\n            const b = (velocity - undampedFreq) * (duration * duration);\r\n            return a * b;\r\n        };\r\n    }\r\n    const initialGuess = 5 / duration;\r\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\r\n    duration = secondsToMilliseconds(duration);\r\n    if (isNaN(undampedFreq)) {\r\n        return {\r\n            stiffness: springDefaults.stiffness,\r\n            damping: springDefaults.damping,\r\n            duration,\r\n        };\r\n    }\r\n    else {\r\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\r\n        return {\r\n            stiffness,\r\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\r\n            duration,\r\n        };\r\n    }\r\n}\r\nconst rootIterations = 12;\r\nfunction approximateRoot(envelope, derivative, initialGuess) {\r\n    let result = initialGuess;\r\n    for (let i = 1; i < rootIterations; i++) {\r\n        result = result - envelope(result) / derivative(result);\r\n    }\r\n    return result;\r\n}\r\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\r\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\r\n}\r\n\r\nexport { calcAngularFreq, findSpring };\r\n","import { calcGeneratorDuration, maxGeneratorDuration, generateLinearEasing } from 'motion-dom';\r\nimport { millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\r\nimport { clamp } from '../../../utils/clamp.mjs';\r\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\r\nimport { springDefaults } from './defaults.mjs';\r\nimport { findSpring, calcAngularFreq } from './find.mjs';\r\n\r\nconst durationKeys = [\"duration\", \"bounce\"];\r\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\r\nfunction isSpringType(options, keys) {\r\n    return keys.some((key) => options[key] !== undefined);\r\n}\r\nfunction getSpringOptions(options) {\r\n    let springOptions = {\r\n        velocity: springDefaults.velocity,\r\n        stiffness: springDefaults.stiffness,\r\n        damping: springDefaults.damping,\r\n        mass: springDefaults.mass,\r\n        isResolvedFromDuration: false,\r\n        ...options,\r\n    };\r\n    // stiffness/damping/mass overrides duration/bounce\r\n    if (!isSpringType(options, physicsKeys) &&\r\n        isSpringType(options, durationKeys)) {\r\n        if (options.visualDuration) {\r\n            const visualDuration = options.visualDuration;\r\n            const root = (2 * Math.PI) / (visualDuration * 1.2);\r\n            const stiffness = root * root;\r\n            const damping = 2 *\r\n                clamp(0.05, 1, 1 - (options.bounce || 0)) *\r\n                Math.sqrt(stiffness);\r\n            springOptions = {\r\n                ...springOptions,\r\n                mass: springDefaults.mass,\r\n                stiffness,\r\n                damping,\r\n            };\r\n        }\r\n        else {\r\n            const derived = findSpring(options);\r\n            springOptions = {\r\n                ...springOptions,\r\n                ...derived,\r\n                mass: springDefaults.mass,\r\n            };\r\n            springOptions.isResolvedFromDuration = true;\r\n        }\r\n    }\r\n    return springOptions;\r\n}\r\nfunction spring(optionsOrVisualDuration = springDefaults.visualDuration, bounce = springDefaults.bounce) {\r\n    const options = typeof optionsOrVisualDuration !== \"object\"\r\n        ? {\r\n            visualDuration: optionsOrVisualDuration,\r\n            keyframes: [0, 1],\r\n            bounce,\r\n        }\r\n        : optionsOrVisualDuration;\r\n    let { restSpeed, restDelta } = options;\r\n    const origin = options.keyframes[0];\r\n    const target = options.keyframes[options.keyframes.length - 1];\r\n    /**\r\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\r\n     * to reduce GC during animation.\r\n     */\r\n    const state = { done: false, value: origin };\r\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\r\n        ...options,\r\n        velocity: -millisecondsToSeconds(options.velocity || 0),\r\n    });\r\n    const initialVelocity = velocity || 0.0;\r\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\r\n    const initialDelta = target - origin;\r\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\r\n    /**\r\n     * If we're working on a granular scale, use smaller defaults for determining\r\n     * when the spring is finished.\r\n     *\r\n     * These defaults have been selected emprically based on what strikes a good\r\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\r\n     */\r\n    const isGranularScale = Math.abs(initialDelta) < 5;\r\n    restSpeed || (restSpeed = isGranularScale\r\n        ? springDefaults.restSpeed.granular\r\n        : springDefaults.restSpeed.default);\r\n    restDelta || (restDelta = isGranularScale\r\n        ? springDefaults.restDelta.granular\r\n        : springDefaults.restDelta.default);\r\n    let resolveSpring;\r\n    if (dampingRatio < 1) {\r\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\r\n        // Underdamped spring\r\n        resolveSpring = (t) => {\r\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\r\n            return (target -\r\n                envelope *\r\n                    (((initialVelocity +\r\n                        dampingRatio * undampedAngularFreq * initialDelta) /\r\n                        angularFreq) *\r\n                        Math.sin(angularFreq * t) +\r\n                        initialDelta * Math.cos(angularFreq * t)));\r\n        };\r\n    }\r\n    else if (dampingRatio === 1) {\r\n        // Critically damped spring\r\n        resolveSpring = (t) => target -\r\n            Math.exp(-undampedAngularFreq * t) *\r\n                (initialDelta +\r\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\r\n    }\r\n    else {\r\n        // Overdamped spring\r\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\r\n        resolveSpring = (t) => {\r\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\r\n            // When performing sinh or cosh values can hit Infinity so we cap them here\r\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\r\n            return (target -\r\n                (envelope *\r\n                    ((initialVelocity +\r\n                        dampingRatio * undampedAngularFreq * initialDelta) *\r\n                        Math.sinh(freqForT) +\r\n                        dampedAngularFreq *\r\n                            initialDelta *\r\n                            Math.cosh(freqForT))) /\r\n                    dampedAngularFreq);\r\n        };\r\n    }\r\n    const generator = {\r\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\r\n        next: (t) => {\r\n            const current = resolveSpring(t);\r\n            if (!isResolvedFromDuration) {\r\n                let currentVelocity = 0.0;\r\n                /**\r\n                 * We only need to calculate velocity for under-damped springs\r\n                 * as over- and critically-damped springs can't overshoot, so\r\n                 * checking only for displacement is enough.\r\n                 */\r\n                if (dampingRatio < 1) {\r\n                    currentVelocity =\r\n                        t === 0\r\n                            ? secondsToMilliseconds(initialVelocity)\r\n                            : calcGeneratorVelocity(resolveSpring, t, current);\r\n                }\r\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\r\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\r\n                state.done =\r\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\r\n            }\r\n            else {\r\n                state.done = t >= duration;\r\n            }\r\n            state.value = state.done ? target : current;\r\n            return state;\r\n        },\r\n        toString: () => {\r\n            const calculatedDuration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\r\n            const easing = generateLinearEasing((progress) => generator.next(calculatedDuration * progress).value, calculatedDuration, 30);\r\n            return calculatedDuration + \"ms \" + easing;\r\n        },\r\n    };\r\n    return generator;\r\n}\r\n\r\nexport { spring };\r\n","import { spring } from './spring/index.mjs';\r\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\r\n\r\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\r\n    const origin = keyframes[0];\r\n    const state = {\r\n        done: false,\r\n        value: origin,\r\n    };\r\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\r\n    const nearestBoundary = (v) => {\r\n        if (min === undefined)\r\n            return max;\r\n        if (max === undefined)\r\n            return min;\r\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\r\n    };\r\n    let amplitude = power * velocity;\r\n    const ideal = origin + amplitude;\r\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\r\n    /**\r\n     * If the target has changed we need to re-calculate the amplitude, otherwise\r\n     * the animation will start from the wrong position.\r\n     */\r\n    if (target !== ideal)\r\n        amplitude = target - origin;\r\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\r\n    const calcLatest = (t) => target + calcDelta(t);\r\n    const applyFriction = (t) => {\r\n        const delta = calcDelta(t);\r\n        const latest = calcLatest(t);\r\n        state.done = Math.abs(delta) <= restDelta;\r\n        state.value = state.done ? target : latest;\r\n    };\r\n    /**\r\n     * Ideally this would resolve for t in a stateless way, we could\r\n     * do that by always precalculating the animation but as we know\r\n     * this will be done anyway we can assume that spring will\r\n     * be discovered during that.\r\n     */\r\n    let timeReachedBoundary;\r\n    let spring$1;\r\n    const checkCatchBoundary = (t) => {\r\n        if (!isOutOfBounds(state.value))\r\n            return;\r\n        timeReachedBoundary = t;\r\n        spring$1 = spring({\r\n            keyframes: [state.value, nearestBoundary(state.value)],\r\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\r\n            damping: bounceDamping,\r\n            stiffness: bounceStiffness,\r\n            restDelta,\r\n            restSpeed,\r\n        });\r\n    };\r\n    checkCatchBoundary(0);\r\n    return {\r\n        calculatedDuration: null,\r\n        next: (t) => {\r\n            /**\r\n             * We need to resolve the friction to figure out if we need a\r\n             * spring but we don't want to do this twice per frame. So here\r\n             * we flag if we updated for this frame and later if we did\r\n             * we can skip doing it again.\r\n             */\r\n            let hasUpdatedFrame = false;\r\n            if (!spring$1 && timeReachedBoundary === undefined) {\r\n                hasUpdatedFrame = true;\r\n                applyFriction(t);\r\n                checkCatchBoundary(t);\r\n            }\r\n            /**\r\n             * If we have a spring and the provided t is beyond the moment the friction\r\n             * animation crossed the min/max boundary, use the spring.\r\n             */\r\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\r\n                return spring$1.next(t - timeReachedBoundary);\r\n            }\r\n            else {\r\n                !hasUpdatedFrame && applyFriction(t);\r\n                return state;\r\n            }\r\n        },\r\n    };\r\n}\r\n\r\nexport { inertia };\r\n","import { cubicBezier } from './cubic-bezier.mjs';\r\n\r\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\r\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\r\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\r\n\r\nexport { easeIn, easeInOut, easeOut };\r\n","import { isBezierDefinition } from 'motion-dom';\r\nimport { invariant, noop } from 'motion-utils';\r\nimport { anticipate } from '../anticipate.mjs';\r\nimport { backIn, backInOut, backOut } from '../back.mjs';\r\nimport { circIn, circInOut, circOut } from '../circ.mjs';\r\nimport { cubicBezier } from '../cubic-bezier.mjs';\r\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\r\n\r\nconst easingLookup = {\r\n    linear: noop,\r\n    easeIn,\r\n    easeInOut,\r\n    easeOut,\r\n    circIn,\r\n    circInOut,\r\n    circOut,\r\n    backIn,\r\n    backInOut,\r\n    backOut,\r\n    anticipate,\r\n};\r\nconst easingDefinitionToFunction = (definition) => {\r\n    if (isBezierDefinition(definition)) {\r\n        // If cubic bezier definition, create bezier curve\r\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\r\n        const [x1, y1, x2, y2] = definition;\r\n        return cubicBezier(x1, y1, x2, y2);\r\n    }\r\n    else if (typeof definition === \"string\") {\r\n        // Else lookup from table\r\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\r\n        return easingLookup[definition];\r\n    }\r\n    return definition;\r\n};\r\n\r\nexport { easingDefinitionToFunction };\r\n","import { invariant, noop, progress } from 'motion-utils';\r\nimport { clamp } from './clamp.mjs';\r\nimport { mix } from './mix/index.mjs';\r\nimport { pipe } from './pipe.mjs';\r\n\r\nfunction createMixers(output, ease, customMixer) {\r\n    const mixers = [];\r\n    const mixerFactory = customMixer || mix;\r\n    const numMixers = output.length - 1;\r\n    for (let i = 0; i < numMixers; i++) {\r\n        let mixer = mixerFactory(output[i], output[i + 1]);\r\n        if (ease) {\r\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\r\n            mixer = pipe(easingFunction, mixer);\r\n        }\r\n        mixers.push(mixer);\r\n    }\r\n    return mixers;\r\n}\r\n/**\r\n * Create a function that maps from a numerical input array to a generic output array.\r\n *\r\n * Accepts:\r\n *   - Numbers\r\n *   - Colors (hex, hsl, hsla, rgb, rgba)\r\n *   - Complex (combinations of one or more numbers or strings)\r\n *\r\n * ```jsx\r\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\r\n *\r\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\r\n * ```\r\n *\r\n * TODO Revist this approach once we've moved to data models for values,\r\n * probably not needed to pregenerate mixer functions.\r\n *\r\n * @public\r\n */\r\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\r\n    const inputLength = input.length;\r\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\r\n    /**\r\n     * If we're only provided a single input, we can just make a function\r\n     * that returns the output.\r\n     */\r\n    if (inputLength === 1)\r\n        return () => output[0];\r\n    if (inputLength === 2 && output[0] === output[1])\r\n        return () => output[1];\r\n    const isZeroDeltaRange = input[0] === input[1];\r\n    // If input runs highest -> lowest, reverse both arrays\r\n    if (input[0] > input[inputLength - 1]) {\r\n        input = [...input].reverse();\r\n        output = [...output].reverse();\r\n    }\r\n    const mixers = createMixers(output, ease, mixer);\r\n    const numMixers = mixers.length;\r\n    const interpolator = (v) => {\r\n        if (isZeroDeltaRange && v < input[0])\r\n            return output[0];\r\n        let i = 0;\r\n        if (numMixers > 1) {\r\n            for (; i < input.length - 2; i++) {\r\n                if (v < input[i + 1])\r\n                    break;\r\n            }\r\n        }\r\n        const progressInRange = progress(input[i], input[i + 1], v);\r\n        return mixers[i](progressInRange);\r\n    };\r\n    return isClamp\r\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\r\n        : interpolator;\r\n}\r\n\r\nexport { interpolate };\r\n","import { fillOffset } from './fill.mjs';\r\n\r\nfunction defaultOffset(arr) {\r\n    const offset = [0];\r\n    fillOffset(offset, arr.length - 1);\r\n    return offset;\r\n}\r\n\r\nexport { defaultOffset };\r\n","import { progress } from 'motion-utils';\r\nimport { mixNumber } from '../mix/number.mjs';\r\n\r\nfunction fillOffset(offset, remaining) {\r\n    const min = offset[offset.length - 1];\r\n    for (let i = 1; i <= remaining; i++) {\r\n        const offsetProgress = progress(0, remaining, i);\r\n        offset.push(mixNumber(min, 1, offsetProgress));\r\n    }\r\n}\r\n\r\nexport { fillOffset };\r\n","import { easeInOut } from '../../easing/ease.mjs';\r\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\r\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\r\nimport { interpolate } from '../../utils/interpolate.mjs';\r\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\r\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\r\n\r\nfunction defaultEasing(values, easing) {\r\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\r\n}\r\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\r\n    /**\r\n     * Easing functions can be externally defined as strings. Here we convert them\r\n     * into actual functions.\r\n     */\r\n    const easingFunctions = isEasingArray(ease)\r\n        ? ease.map(easingDefinitionToFunction)\r\n        : easingDefinitionToFunction(ease);\r\n    /**\r\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\r\n     * to reduce GC during animation.\r\n     */\r\n    const state = {\r\n        done: false,\r\n        value: keyframeValues[0],\r\n    };\r\n    /**\r\n     * Create a times array based on the provided 0-1 offsets\r\n     */\r\n    const absoluteTimes = convertOffsetToTimes(\r\n    // Only use the provided offsets if they're the correct length\r\n    // TODO Maybe we should warn here if there's a length mismatch\r\n    times && times.length === keyframeValues.length\r\n        ? times\r\n        : defaultOffset(keyframeValues), duration);\r\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\r\n        ease: Array.isArray(easingFunctions)\r\n            ? easingFunctions\r\n            : defaultEasing(keyframeValues, easingFunctions),\r\n    });\r\n    return {\r\n        calculatedDuration: duration,\r\n        next: (t) => {\r\n            state.value = mapTimeToKeyframe(t);\r\n            state.done = t >= duration;\r\n            return state;\r\n        },\r\n    };\r\n}\r\n\r\nexport { defaultEasing, keyframes };\r\n","const isEasingArray = (ease) => {\r\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\r\n};\r\n\r\nexport { isEasingArray };\r\n","function convertOffsetToTimes(offset, duration) {\r\n    return offset.map((o) => o * duration);\r\n}\r\n\r\nexport { convertOffsetToTimes };\r\n","import { time } from '../../../frameloop/sync-time.mjs';\r\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\r\n\r\nconst frameloopDriver = (update) => {\r\n    const passTimestamp = ({ timestamp }) => update(timestamp);\r\n    return {\r\n        start: () => frame.update(passTimestamp, true),\r\n        stop: () => cancelFrame(passTimestamp),\r\n        /**\r\n         * If we're processing this frame we can use the\r\n         * framelocked timestamp to keep things in sync.\r\n         */\r\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\r\n    };\r\n};\r\n\r\nexport { frameloopDriver };\r\n","import { isGenerator, calcGeneratorDuration } from 'motion-dom';\r\nimport { invariant, millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\r\nimport { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\r\nimport { clamp } from '../../utils/clamp.mjs';\r\nimport { mix } from '../../utils/mix/index.mjs';\r\nimport { pipe } from '../../utils/pipe.mjs';\r\nimport { inertia } from '../generators/inertia.mjs';\r\nimport { keyframes } from '../generators/keyframes.mjs';\r\nimport { spring } from '../generators/spring/index.mjs';\r\nimport { BaseAnimation } from './BaseAnimation.mjs';\r\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\r\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\r\n\r\nconst generators = {\r\n    decay: inertia,\r\n    inertia,\r\n    tween: keyframes,\r\n    keyframes: keyframes,\r\n    spring,\r\n};\r\nconst percentToProgress = (percent) => percent / 100;\r\n/**\r\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\r\n * features we expose publically. Mostly the compatibility is to ensure visual identity\r\n * between both WAAPI and main thread animations.\r\n */\r\nclass MainThreadAnimation extends BaseAnimation {\r\n    constructor(options) {\r\n        super(options);\r\n        /**\r\n         * The time at which the animation was paused.\r\n         */\r\n        this.holdTime = null;\r\n        /**\r\n         * The time at which the animation was cancelled.\r\n         */\r\n        this.cancelTime = null;\r\n        /**\r\n         * The current time of the animation.\r\n         */\r\n        this.currentTime = 0;\r\n        /**\r\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\r\n         */\r\n        this.playbackSpeed = 1;\r\n        /**\r\n         * The state of the animation to apply when the animation is resolved. This\r\n         * allows calls to the public API to control the animation before it is resolved,\r\n         * without us having to resolve it first.\r\n         */\r\n        this.pendingPlayState = \"running\";\r\n        /**\r\n         * The time at which the animation was started.\r\n         */\r\n        this.startTime = null;\r\n        this.state = \"idle\";\r\n        /**\r\n         * This method is bound to the instance to fix a pattern where\r\n         * animation.stop is returned as a reference from a useEffect.\r\n         */\r\n        this.stop = () => {\r\n            this.resolver.cancel();\r\n            this.isStopped = true;\r\n            if (this.state === \"idle\")\r\n                return;\r\n            this.teardown();\r\n            const { onStop } = this.options;\r\n            onStop && onStop();\r\n        };\r\n        const { name, motionValue, element, keyframes } = this.options;\r\n        const KeyframeResolver$1 = (element === null || element === void 0 ? void 0 : element.KeyframeResolver) || KeyframeResolver;\r\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\r\n        this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue, element);\r\n        this.resolver.scheduleResolve();\r\n    }\r\n    flatten() {\r\n        super.flatten();\r\n        // If we've already resolved the animation, re-initialise it\r\n        if (this._resolved) {\r\n            Object.assign(this._resolved, this.initPlayback(this._resolved.keyframes));\r\n        }\r\n    }\r\n    initPlayback(keyframes$1) {\r\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\r\n        const generatorFactory = isGenerator(type)\r\n            ? type\r\n            : generators[type] || keyframes;\r\n        /**\r\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\r\n         * [0, 100] and then make a function that maps that to the actual keyframes.\r\n         *\r\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\r\n         */\r\n        let mapPercentToKeyframes;\r\n        let mirroredGenerator;\r\n        if (generatorFactory !== keyframes &&\r\n            typeof keyframes$1[0] !== \"number\") {\r\n            if (process.env.NODE_ENV !== \"production\") {\r\n                invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\r\n            }\r\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\r\n            keyframes$1 = [0, 100];\r\n        }\r\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\r\n        /**\r\n         * If we have a mirror repeat type we need to create a second generator that outputs the\r\n         * mirrored (not reversed) animation and later ping pong between the two generators.\r\n         */\r\n        if (repeatType === \"mirror\") {\r\n            mirroredGenerator = generatorFactory({\r\n                ...this.options,\r\n                keyframes: [...keyframes$1].reverse(),\r\n                velocity: -velocity,\r\n            });\r\n        }\r\n        /**\r\n         * If duration is undefined and we have repeat options,\r\n         * we need to calculate a duration from the generator.\r\n         *\r\n         * We set it to the generator itself to cache the duration.\r\n         * Any timeline resolver will need to have already precalculated\r\n         * the duration by this step.\r\n         */\r\n        if (generator.calculatedDuration === null) {\r\n            generator.calculatedDuration = calcGeneratorDuration(generator);\r\n        }\r\n        const { calculatedDuration } = generator;\r\n        const resolvedDuration = calculatedDuration + repeatDelay;\r\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\r\n        return {\r\n            generator,\r\n            mirroredGenerator,\r\n            mapPercentToKeyframes,\r\n            calculatedDuration,\r\n            resolvedDuration,\r\n            totalDuration,\r\n        };\r\n    }\r\n    onPostResolved() {\r\n        const { autoplay = true } = this.options;\r\n        this.play();\r\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\r\n            this.pause();\r\n        }\r\n        else {\r\n            this.state = this.pendingPlayState;\r\n        }\r\n    }\r\n    tick(timestamp, sample = false) {\r\n        const { resolved } = this;\r\n        // If the animations has failed to resolve, return the final keyframe.\r\n        if (!resolved) {\r\n            const { keyframes } = this.options;\r\n            return { done: true, value: keyframes[keyframes.length - 1] };\r\n        }\r\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\r\n        if (this.startTime === null)\r\n            return generator.next(0);\r\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\r\n        /**\r\n         * requestAnimationFrame timestamps can come through as lower than\r\n         * the startTime as set by performance.now(). Here we prevent this,\r\n         * though in the future it could be possible to make setting startTime\r\n         * a pending operation that gets resolved here.\r\n         */\r\n        if (this.speed > 0) {\r\n            this.startTime = Math.min(this.startTime, timestamp);\r\n        }\r\n        else if (this.speed < 0) {\r\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\r\n        }\r\n        // Update currentTime\r\n        if (sample) {\r\n            this.currentTime = timestamp;\r\n        }\r\n        else if (this.holdTime !== null) {\r\n            this.currentTime = this.holdTime;\r\n        }\r\n        else {\r\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\r\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\r\n            // example.\r\n            this.currentTime =\r\n                Math.round(timestamp - this.startTime) * this.speed;\r\n        }\r\n        // Rebase on delay\r\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\r\n        const isInDelayPhase = this.speed >= 0\r\n            ? timeWithoutDelay < 0\r\n            : timeWithoutDelay > totalDuration;\r\n        this.currentTime = Math.max(timeWithoutDelay, 0);\r\n        // If this animation has finished, set the current time  to the total duration.\r\n        if (this.state === \"finished\" && this.holdTime === null) {\r\n            this.currentTime = totalDuration;\r\n        }\r\n        let elapsed = this.currentTime;\r\n        let frameGenerator = generator;\r\n        if (repeat) {\r\n            /**\r\n             * Get the current progress (0-1) of the animation. If t is >\r\n             * than duration we'll get values like 2.5 (midway through the\r\n             * third iteration)\r\n             */\r\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\r\n            /**\r\n             * Get the current iteration (0 indexed). For instance the floor of\r\n             * 2.5 is 2.\r\n             */\r\n            let currentIteration = Math.floor(progress);\r\n            /**\r\n             * Get the current progress of the iteration by taking the remainder\r\n             * so 2.5 is 0.5 through iteration 2\r\n             */\r\n            let iterationProgress = progress % 1.0;\r\n            /**\r\n             * If iteration progress is 1 we count that as the end\r\n             * of the previous iteration.\r\n             */\r\n            if (!iterationProgress && progress >= 1) {\r\n                iterationProgress = 1;\r\n            }\r\n            iterationProgress === 1 && currentIteration--;\r\n            currentIteration = Math.min(currentIteration, repeat + 1);\r\n            /**\r\n             * Reverse progress if we're not running in \"normal\" direction\r\n             */\r\n            const isOddIteration = Boolean(currentIteration % 2);\r\n            if (isOddIteration) {\r\n                if (repeatType === \"reverse\") {\r\n                    iterationProgress = 1 - iterationProgress;\r\n                    if (repeatDelay) {\r\n                        iterationProgress -= repeatDelay / resolvedDuration;\r\n                    }\r\n                }\r\n                else if (repeatType === \"mirror\") {\r\n                    frameGenerator = mirroredGenerator;\r\n                }\r\n            }\r\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\r\n        }\r\n        /**\r\n         * If we're in negative time, set state as the initial keyframe.\r\n         * This prevents delay: x, duration: 0 animations from finishing\r\n         * instantly.\r\n         */\r\n        const state = isInDelayPhase\r\n            ? { done: false, value: keyframes[0] }\r\n            : frameGenerator.next(elapsed);\r\n        if (mapPercentToKeyframes) {\r\n            state.value = mapPercentToKeyframes(state.value);\r\n        }\r\n        let { done } = state;\r\n        if (!isInDelayPhase && calculatedDuration !== null) {\r\n            done =\r\n                this.speed >= 0\r\n                    ? this.currentTime >= totalDuration\r\n                    : this.currentTime <= 0;\r\n        }\r\n        const isAnimationFinished = this.holdTime === null &&\r\n            (this.state === \"finished\" || (this.state === \"running\" && done));\r\n        if (isAnimationFinished && finalKeyframe !== undefined) {\r\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\r\n        }\r\n        if (onUpdate) {\r\n            onUpdate(state.value);\r\n        }\r\n        if (isAnimationFinished) {\r\n            this.finish();\r\n        }\r\n        return state;\r\n    }\r\n    get duration() {\r\n        const { resolved } = this;\r\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\r\n    }\r\n    get time() {\r\n        return millisecondsToSeconds(this.currentTime);\r\n    }\r\n    set time(newTime) {\r\n        newTime = secondsToMilliseconds(newTime);\r\n        this.currentTime = newTime;\r\n        if (this.holdTime !== null || this.speed === 0) {\r\n            this.holdTime = newTime;\r\n        }\r\n        else if (this.driver) {\r\n            this.startTime = this.driver.now() - newTime / this.speed;\r\n        }\r\n    }\r\n    get speed() {\r\n        return this.playbackSpeed;\r\n    }\r\n    set speed(newSpeed) {\r\n        const hasChanged = this.playbackSpeed !== newSpeed;\r\n        this.playbackSpeed = newSpeed;\r\n        if (hasChanged) {\r\n            this.time = millisecondsToSeconds(this.currentTime);\r\n        }\r\n    }\r\n    play() {\r\n        if (!this.resolver.isScheduled) {\r\n            this.resolver.resume();\r\n        }\r\n        if (!this._resolved) {\r\n            this.pendingPlayState = \"running\";\r\n            return;\r\n        }\r\n        if (this.isStopped)\r\n            return;\r\n        const { driver = frameloopDriver, onPlay, startTime } = this.options;\r\n        if (!this.driver) {\r\n            this.driver = driver((timestamp) => this.tick(timestamp));\r\n        }\r\n        onPlay && onPlay();\r\n        const now = this.driver.now();\r\n        if (this.holdTime !== null) {\r\n            this.startTime = now - this.holdTime;\r\n        }\r\n        else if (!this.startTime) {\r\n            this.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\r\n        }\r\n        else if (this.state === \"finished\") {\r\n            this.startTime = now;\r\n        }\r\n        if (this.state === \"finished\") {\r\n            this.updateFinishedPromise();\r\n        }\r\n        this.cancelTime = this.startTime;\r\n        this.holdTime = null;\r\n        /**\r\n         * Set playState to running only after we've used it in\r\n         * the previous logic.\r\n         */\r\n        this.state = \"running\";\r\n        this.driver.start();\r\n    }\r\n    pause() {\r\n        var _a;\r\n        if (!this._resolved) {\r\n            this.pendingPlayState = \"paused\";\r\n            return;\r\n        }\r\n        this.state = \"paused\";\r\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\r\n    }\r\n    complete() {\r\n        if (this.state !== \"running\") {\r\n            this.play();\r\n        }\r\n        this.pendingPlayState = this.state = \"finished\";\r\n        this.holdTime = null;\r\n    }\r\n    finish() {\r\n        this.teardown();\r\n        this.state = \"finished\";\r\n        const { onComplete } = this.options;\r\n        onComplete && onComplete();\r\n    }\r\n    cancel() {\r\n        if (this.cancelTime !== null) {\r\n            this.tick(this.cancelTime);\r\n        }\r\n        this.teardown();\r\n        this.updateFinishedPromise();\r\n    }\r\n    teardown() {\r\n        this.state = \"idle\";\r\n        this.stopDriver();\r\n        this.resolveFinishedPromise();\r\n        this.updateFinishedPromise();\r\n        this.startTime = this.cancelTime = null;\r\n        this.resolver.cancel();\r\n    }\r\n    stopDriver() {\r\n        if (!this.driver)\r\n            return;\r\n        this.driver.stop();\r\n        this.driver = undefined;\r\n    }\r\n    sample(time) {\r\n        this.startTime = 0;\r\n        return this.tick(time, true);\r\n    }\r\n}\r\n// Legacy interface\r\nfunction animateValue(options) {\r\n    return new MainThreadAnimation(options);\r\n}\r\n\r\nexport { MainThreadAnimation, animateValue };\r\n","/**\r\n * A list of values that can be hardware-accelerated.\r\n */\r\nconst acceleratedValues = new Set([\r\n    \"opacity\",\r\n    \"clipPath\",\r\n    \"filter\",\r\n    \"transform\",\r\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\r\n    // or until we implement support for linear() easing.\r\n    // \"background-color\"\r\n]);\r\n\r\nexport { acceleratedValues };\r\n","import { mapEasingToNativeEasing } from 'motion-dom';\r\n\r\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease = \"easeInOut\", times, } = {}) {\r\n    const keyframeOptions = { [valueName]: keyframes };\r\n    if (times)\r\n        keyframeOptions.offset = times;\r\n    const easing = mapEasingToNativeEasing(ease, duration);\r\n    /**\r\n     * If this is an easing array, apply to keyframes, not animation as a whole\r\n     */\r\n    if (Array.isArray(easing))\r\n        keyframeOptions.easing = easing;\r\n    return element.animate(keyframeOptions, {\r\n        delay,\r\n        duration,\r\n        easing: !Array.isArray(easing) ? easing : \"linear\",\r\n        fill: \"both\",\r\n        iterations: repeat + 1,\r\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\r\n    });\r\n}\r\n\r\nexport { startWaapiAnimation };\r\n","import { memo } from 'motion-utils';\r\n\r\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\r\n\r\nexport { supportsWaapi };\r\n","import { supportsLinearEasing, attachTimeline, isGenerator, isWaapiSupportedEasing } from 'motion-dom';\r\nimport { millisecondsToSeconds, secondsToMilliseconds, noop } from 'motion-utils';\r\nimport { anticipate } from '../../easing/anticipate.mjs';\r\nimport { backInOut } from '../../easing/back.mjs';\r\nimport { circInOut } from '../../easing/circ.mjs';\r\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\r\nimport { BaseAnimation } from './BaseAnimation.mjs';\r\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\r\nimport { acceleratedValues } from './utils/accelerated-values.mjs';\r\nimport { startWaapiAnimation } from './waapi/index.mjs';\r\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\r\nimport { supportsWaapi } from './waapi/utils/supports-waapi.mjs';\r\n\r\n/**\r\n * 10ms is chosen here as it strikes a balance between smooth\r\n * results (more than one keyframe per frame at 60fps) and\r\n * keyframe quantity.\r\n */\r\nconst sampleDelta = 10; //ms\r\n/**\r\n * Implement a practical max duration for keyframe generation\r\n * to prevent infinite loops\r\n */\r\nconst maxDuration = 20000;\r\n/**\r\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\r\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\r\n * handing off.\r\n */\r\nfunction requiresPregeneratedKeyframes(options) {\r\n    return (isGenerator(options.type) ||\r\n        options.type === \"spring\" ||\r\n        !isWaapiSupportedEasing(options.ease));\r\n}\r\nfunction pregenerateKeyframes(keyframes, options) {\r\n    /**\r\n     * Create a main-thread animation to pregenerate keyframes.\r\n     * We sample this at regular intervals to generate keyframes that we then\r\n     * linearly interpolate between.\r\n     */\r\n    const sampleAnimation = new MainThreadAnimation({\r\n        ...options,\r\n        keyframes,\r\n        repeat: 0,\r\n        delay: 0,\r\n        isGenerator: true,\r\n    });\r\n    let state = { done: false, value: keyframes[0] };\r\n    const pregeneratedKeyframes = [];\r\n    /**\r\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\r\n     * we're heading for an infinite loop.\r\n     */\r\n    let t = 0;\r\n    while (!state.done && t < maxDuration) {\r\n        state = sampleAnimation.sample(t);\r\n        pregeneratedKeyframes.push(state.value);\r\n        t += sampleDelta;\r\n    }\r\n    return {\r\n        times: undefined,\r\n        keyframes: pregeneratedKeyframes,\r\n        duration: t - sampleDelta,\r\n        ease: \"linear\",\r\n    };\r\n}\r\nconst unsupportedEasingFunctions = {\r\n    anticipate,\r\n    backInOut,\r\n    circInOut,\r\n};\r\nfunction isUnsupportedEase(key) {\r\n    return key in unsupportedEasingFunctions;\r\n}\r\nclass AcceleratedAnimation extends BaseAnimation {\r\n    constructor(options) {\r\n        super(options);\r\n        const { name, motionValue, element, keyframes } = this.options;\r\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue, element);\r\n        this.resolver.scheduleResolve();\r\n    }\r\n    initPlayback(keyframes, finalKeyframe) {\r\n        let { duration = 300, times, ease, type, motionValue, name, startTime, } = this.options;\r\n        /**\r\n         * If element has since been unmounted, return false to indicate\r\n         * the animation failed to initialised.\r\n         */\r\n        if (!motionValue.owner || !motionValue.owner.current) {\r\n            return false;\r\n        }\r\n        /**\r\n         * If the user has provided an easing function name that isn't supported\r\n         * by WAAPI (like \"anticipate\"), we need to provide the corressponding\r\n         * function. This will later get converted to a linear() easing function.\r\n         */\r\n        if (typeof ease === \"string\" &&\r\n            supportsLinearEasing() &&\r\n            isUnsupportedEase(ease)) {\r\n            ease = unsupportedEasingFunctions[ease];\r\n        }\r\n        /**\r\n         * If this animation needs pre-generated keyframes then generate.\r\n         */\r\n        if (requiresPregeneratedKeyframes(this.options)) {\r\n            const { onComplete, onUpdate, motionValue, element, ...options } = this.options;\r\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\r\n            keyframes = pregeneratedAnimation.keyframes;\r\n            // If this is a very short animation, ensure we have\r\n            // at least two keyframes to animate between as older browsers\r\n            // can't animate between a single keyframe.\r\n            if (keyframes.length === 1) {\r\n                keyframes[1] = keyframes[0];\r\n            }\r\n            duration = pregeneratedAnimation.duration;\r\n            times = pregeneratedAnimation.times;\r\n            ease = pregeneratedAnimation.ease;\r\n            type = \"keyframes\";\r\n        }\r\n        const animation = startWaapiAnimation(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\r\n        // Override the browser calculated startTime with one synchronised to other JS\r\n        // and WAAPI animations starting this event loop.\r\n        animation.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\r\n        if (this.pendingTimeline) {\r\n            attachTimeline(animation, this.pendingTimeline);\r\n            this.pendingTimeline = undefined;\r\n        }\r\n        else {\r\n            /**\r\n             * Prefer the `onfinish` prop as it's more widely supported than\r\n             * the `finished` promise.\r\n             *\r\n             * Here, we synchronously set the provided MotionValue to the end\r\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\r\n             * be removed from the element which would then revert to its old styles.\r\n             */\r\n            animation.onfinish = () => {\r\n                const { onComplete } = this.options;\r\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\r\n                onComplete && onComplete();\r\n                this.cancel();\r\n                this.resolveFinishedPromise();\r\n            };\r\n        }\r\n        return {\r\n            animation,\r\n            duration,\r\n            times,\r\n            type,\r\n            ease,\r\n            keyframes: keyframes,\r\n        };\r\n    }\r\n    get duration() {\r\n        const { resolved } = this;\r\n        if (!resolved)\r\n            return 0;\r\n        const { duration } = resolved;\r\n        return millisecondsToSeconds(duration);\r\n    }\r\n    get time() {\r\n        const { resolved } = this;\r\n        if (!resolved)\r\n            return 0;\r\n        const { animation } = resolved;\r\n        return millisecondsToSeconds(animation.currentTime || 0);\r\n    }\r\n    set time(newTime) {\r\n        const { resolved } = this;\r\n        if (!resolved)\r\n            return;\r\n        const { animation } = resolved;\r\n        animation.currentTime = secondsToMilliseconds(newTime);\r\n    }\r\n    get speed() {\r\n        const { resolved } = this;\r\n        if (!resolved)\r\n            return 1;\r\n        const { animation } = resolved;\r\n        return animation.playbackRate;\r\n    }\r\n    set speed(newSpeed) {\r\n        const { resolved } = this;\r\n        if (!resolved)\r\n            return;\r\n        const { animation } = resolved;\r\n        animation.playbackRate = newSpeed;\r\n    }\r\n    get state() {\r\n        const { resolved } = this;\r\n        if (!resolved)\r\n            return \"idle\";\r\n        const { animation } = resolved;\r\n        return animation.playState;\r\n    }\r\n    get startTime() {\r\n        const { resolved } = this;\r\n        if (!resolved)\r\n            return null;\r\n        const { animation } = resolved;\r\n        // Coerce to number as TypeScript incorrectly types this\r\n        // as CSSNumberish\r\n        return animation.startTime;\r\n    }\r\n    /**\r\n     * Replace the default DocumentTimeline with another AnimationTimeline.\r\n     * Currently used for scroll animations.\r\n     */\r\n    attachTimeline(timeline) {\r\n        if (!this._resolved) {\r\n            this.pendingTimeline = timeline;\r\n        }\r\n        else {\r\n            const { resolved } = this;\r\n            if (!resolved)\r\n                return noop;\r\n            const { animation } = resolved;\r\n            attachTimeline(animation, timeline);\r\n        }\r\n        return noop;\r\n    }\r\n    play() {\r\n        if (this.isStopped)\r\n            return;\r\n        const { resolved } = this;\r\n        if (!resolved)\r\n            return;\r\n        const { animation } = resolved;\r\n        if (animation.playState === \"finished\") {\r\n            this.updateFinishedPromise();\r\n        }\r\n        animation.play();\r\n    }\r\n    pause() {\r\n        const { resolved } = this;\r\n        if (!resolved)\r\n            return;\r\n        const { animation } = resolved;\r\n        animation.pause();\r\n    }\r\n    stop() {\r\n        this.resolver.cancel();\r\n        this.isStopped = true;\r\n        if (this.state === \"idle\")\r\n            return;\r\n        this.resolveFinishedPromise();\r\n        this.updateFinishedPromise();\r\n        const { resolved } = this;\r\n        if (!resolved)\r\n            return;\r\n        const { animation, keyframes, duration, type, ease, times } = resolved;\r\n        if (animation.playState === \"idle\" ||\r\n            animation.playState === \"finished\") {\r\n            return;\r\n        }\r\n        /**\r\n         * WAAPI doesn't natively have any interruption capabilities.\r\n         *\r\n         * Rather than read commited styles back out of the DOM, we can\r\n         * create a renderless JS animation and sample it twice to calculate\r\n         * its current value, \"previous\" value, and therefore allow\r\n         * Motion to calculate velocity for any subsequent animation.\r\n         */\r\n        if (this.time) {\r\n            const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\r\n            const sampleAnimation = new MainThreadAnimation({\r\n                ...options,\r\n                keyframes,\r\n                duration,\r\n                type,\r\n                ease,\r\n                times,\r\n                isGenerator: true,\r\n            });\r\n            const sampleTime = secondsToMilliseconds(this.time);\r\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\r\n        }\r\n        const { onStop } = this.options;\r\n        onStop && onStop();\r\n        this.cancel();\r\n    }\r\n    complete() {\r\n        const { resolved } = this;\r\n        if (!resolved)\r\n            return;\r\n        resolved.animation.finish();\r\n    }\r\n    cancel() {\r\n        const { resolved } = this;\r\n        if (!resolved)\r\n            return;\r\n        resolved.animation.cancel();\r\n    }\r\n    static supports(options) {\r\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\r\n        if (!motionValue ||\r\n            !motionValue.owner ||\r\n            !(motionValue.owner.current instanceof HTMLElement)) {\r\n            return false;\r\n        }\r\n        const { onUpdate, transformTemplate } = motionValue.owner.getProps();\r\n        return (supportsWaapi() &&\r\n            name &&\r\n            acceleratedValues.has(name) &&\r\n            /**\r\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\r\n             * no way to read the value from WAAPI every frame.\r\n             */\r\n            !onUpdate &&\r\n            !transformTemplate &&\r\n            !repeatDelay &&\r\n            repeatType !== \"mirror\" &&\r\n            damping !== 0 &&\r\n            type !== \"inertia\");\r\n    }\r\n}\r\n\r\nexport { AcceleratedAnimation };\r\n","import { transformProps } from '../../render/html/utils/keys-transform.mjs';\r\n\r\nconst underDampedSpring = {\r\n    type: \"spring\",\r\n    stiffness: 500,\r\n    damping: 25,\r\n    restSpeed: 10,\r\n};\r\nconst criticallyDampedSpring = (target) => ({\r\n    type: \"spring\",\r\n    stiffness: 550,\r\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\r\n    restSpeed: 10,\r\n});\r\nconst keyframesTransition = {\r\n    type: \"keyframes\",\r\n    duration: 0.8,\r\n};\r\n/**\r\n * Default easing curve is a slightly shallower version of\r\n * the default browser easing curve.\r\n */\r\nconst ease = {\r\n    type: \"keyframes\",\r\n    ease: [0.25, 0.1, 0.35, 1],\r\n    duration: 0.3,\r\n};\r\nconst getDefaultTransition = (valueKey, { keyframes }) => {\r\n    if (keyframes.length > 2) {\r\n        return keyframesTransition;\r\n    }\r\n    else if (transformProps.has(valueKey)) {\r\n        return valueKey.startsWith(\"scale\")\r\n            ? criticallyDampedSpring(keyframes[1])\r\n            : underDampedSpring;\r\n    }\r\n    return ease;\r\n};\r\n\r\nexport { getDefaultTransition };\r\n","import { getValueTransition, GroupPlaybackControls } from 'motion-dom';\r\nimport { secondsToMilliseconds } from 'motion-utils';\r\nimport { frame } from '../../frameloop/frame.mjs';\r\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\r\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\r\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\r\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\r\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\r\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\r\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\r\n\r\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\r\n    const valueTransition = getValueTransition(transition, name) || {};\r\n    /**\r\n     * Most transition values are currently completely overwritten by value-specific\r\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\r\n     * delay actually does inherit from the root transition if not value-specific.\r\n     */\r\n    const delay = valueTransition.delay || transition.delay || 0;\r\n    /**\r\n     * Elapsed isn't a public transition option but can be passed through from\r\n     * optimized appear effects in milliseconds.\r\n     */\r\n    let { elapsed = 0 } = transition;\r\n    elapsed = elapsed - secondsToMilliseconds(delay);\r\n    let options = {\r\n        keyframes: Array.isArray(target) ? target : [null, target],\r\n        ease: \"easeOut\",\r\n        velocity: value.getVelocity(),\r\n        ...valueTransition,\r\n        delay: -elapsed,\r\n        onUpdate: (v) => {\r\n            value.set(v);\r\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\r\n        },\r\n        onComplete: () => {\r\n            onComplete();\r\n            valueTransition.onComplete && valueTransition.onComplete();\r\n        },\r\n        name,\r\n        motionValue: value,\r\n        element: isHandoff ? undefined : element,\r\n    };\r\n    /**\r\n     * If there's no transition defined for this value, we can generate\r\n     * unqiue transition settings for this value.\r\n     */\r\n    if (!isTransitionDefined(valueTransition)) {\r\n        options = {\r\n            ...options,\r\n            ...getDefaultTransition(name, options),\r\n        };\r\n    }\r\n    /**\r\n     * Both WAAPI and our internal animation functions use durations\r\n     * as defined by milliseconds, while our external API defines them\r\n     * as seconds.\r\n     */\r\n    if (options.duration) {\r\n        options.duration = secondsToMilliseconds(options.duration);\r\n    }\r\n    if (options.repeatDelay) {\r\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\r\n    }\r\n    if (options.from !== undefined) {\r\n        options.keyframes[0] = options.from;\r\n    }\r\n    let shouldSkip = false;\r\n    if (options.type === false ||\r\n        (options.duration === 0 && !options.repeatDelay)) {\r\n        options.duration = 0;\r\n        if (options.delay === 0) {\r\n            shouldSkip = true;\r\n        }\r\n    }\r\n    if (instantAnimationState.current ||\r\n        MotionGlobalConfig.skipAnimations) {\r\n        shouldSkip = true;\r\n        options.duration = 0;\r\n        options.delay = 0;\r\n    }\r\n    /**\r\n     * If we can or must skip creating the animation, and apply only\r\n     * the final keyframe, do so. We also check once keyframes are resolved but\r\n     * this early check prevents the need to create an animation at all.\r\n     */\r\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\r\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\r\n        if (finalKeyframe !== undefined) {\r\n            frame.update(() => {\r\n                options.onUpdate(finalKeyframe);\r\n                options.onComplete();\r\n            });\r\n            // We still want to return some animation controls here rather\r\n            // than returning undefined\r\n            return new GroupPlaybackControls([]);\r\n        }\r\n    }\r\n    /**\r\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\r\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\r\n     * optimised animation.\r\n     */\r\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\r\n        return new AcceleratedAnimation(options);\r\n    }\r\n    else {\r\n        return new MainThreadAnimation(options);\r\n    }\r\n};\r\n\r\nexport { animateMotionValue };\r\n","/**\r\n * Decide whether a transition is defined on a given Transition.\r\n * This filters out orchestration options and returns true\r\n * if any options are left.\r\n */\r\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\r\n    return !!Object.keys(transition).length;\r\n}\r\n\r\nexport { isTransitionDefined };\r\n","import { getValueTransition } from 'motion-dom';\r\nimport { positionalKeys } from '../../render/html/utils/keys-position.mjs';\r\nimport { setTarget } from '../../render/utils/setters.mjs';\r\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\r\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\r\nimport { animateMotionValue } from './motion-value.mjs';\r\nimport { frame } from '../../frameloop/frame.mjs';\r\n\r\n/**\r\n * Decide whether we should block this animation. Previously, we achieved this\r\n * just by checking whether the key was listed in protectedKeys, but this\r\n * posed problems if an animation was triggered by afterChildren and protectedKeys\r\n * had been set to true in the meantime.\r\n */\r\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\r\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\r\n    needsAnimating[key] = false;\r\n    return shouldBlock;\r\n}\r\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\r\n    var _a;\r\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\r\n    if (transitionOverride)\r\n        transition = transitionOverride;\r\n    const animations = [];\r\n    const animationTypeState = type &&\r\n        visualElement.animationState &&\r\n        visualElement.animationState.getState()[type];\r\n    for (const key in target) {\r\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\r\n        const valueTarget = target[key];\r\n        if (valueTarget === undefined ||\r\n            (animationTypeState &&\r\n                shouldBlockAnimation(animationTypeState, key))) {\r\n            continue;\r\n        }\r\n        const valueTransition = {\r\n            delay,\r\n            ...getValueTransition(transition || {}, key),\r\n        };\r\n        /**\r\n         * If this is the first time a value is being animated, check\r\n         * to see if we're handling off from an existing animation.\r\n         */\r\n        let isHandoff = false;\r\n        if (window.MotionHandoffAnimation) {\r\n            const appearId = getOptimisedAppearId(visualElement);\r\n            if (appearId) {\r\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\r\n                if (startTime !== null) {\r\n                    valueTransition.startTime = startTime;\r\n                    isHandoff = true;\r\n                }\r\n            }\r\n        }\r\n        addValueToWillChange(visualElement, key);\r\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && positionalKeys.has(key)\r\n            ? { type: false }\r\n            : valueTransition, visualElement, isHandoff));\r\n        const animation = value.animation;\r\n        if (animation) {\r\n            animations.push(animation);\r\n        }\r\n    }\r\n    if (transitionEnd) {\r\n        Promise.all(animations).then(() => {\r\n            frame.update(() => {\r\n                transitionEnd && setTarget(visualElement, transitionEnd);\r\n            });\r\n        });\r\n    }\r\n    return animations;\r\n}\r\n\r\nexport { animateTarget };\r\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\r\nimport { animateTarget } from './visual-element-target.mjs';\r\n\r\nfunction animateVariant(visualElement, variant, options = {}) {\r\n    var _a;\r\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\r\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\r\n        : undefined);\r\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\r\n    if (options.transitionOverride) {\r\n        transition = options.transitionOverride;\r\n    }\r\n    /**\r\n     * If we have a variant, create a callback that runs it as an animation.\r\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\r\n     */\r\n    const getAnimation = resolved\r\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\r\n        : () => Promise.resolve();\r\n    /**\r\n     * If we have children, create a callback that runs all their animations.\r\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\r\n     */\r\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\r\n        ? (forwardDelay = 0) => {\r\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\r\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\r\n        }\r\n        : () => Promise.resolve();\r\n    /**\r\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\r\n     * this animation or all children animations before playing the other.\r\n     */\r\n    const { when } = transition;\r\n    if (when) {\r\n        const [first, last] = when === \"beforeChildren\"\r\n            ? [getAnimation, getChildAnimations]\r\n            : [getChildAnimations, getAnimation];\r\n        return first().then(() => last());\r\n    }\r\n    else {\r\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\r\n    }\r\n}\r\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\r\n    const animations = [];\r\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\r\n    const generateStaggerDuration = staggerDirection === 1\r\n        ? (i = 0) => i * staggerChildren\r\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\r\n    Array.from(visualElement.variantChildren)\r\n        .sort(sortByTreeOrder)\r\n        .forEach((child, i) => {\r\n        child.notify(\"AnimationStart\", variant);\r\n        animations.push(animateVariant(child, variant, {\r\n            ...options,\r\n            delay: delayChildren + generateStaggerDuration(i),\r\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\r\n    });\r\n    return Promise.all(animations);\r\n}\r\nfunction sortByTreeOrder(a, b) {\r\n    return a.sortNodePosition(b);\r\n}\r\n\r\nexport { animateVariant, sortByTreeOrder };\r\n","import { isVariantLabel } from './is-variant-label.mjs';\r\nimport { variantProps } from './variant-props.mjs';\r\n\r\nconst numVariantProps = variantProps.length;\r\nfunction getVariantContext(visualElement) {\r\n    if (!visualElement)\r\n        return undefined;\r\n    if (!visualElement.isControllingVariants) {\r\n        const context = visualElement.parent\r\n            ? getVariantContext(visualElement.parent) || {}\r\n            : {};\r\n        if (visualElement.props.initial !== undefined) {\r\n            context.initial = visualElement.props.initial;\r\n        }\r\n        return context;\r\n    }\r\n    const context = {};\r\n    for (let i = 0; i < numVariantProps; i++) {\r\n        const name = variantProps[i];\r\n        const prop = visualElement.props[name];\r\n        if (isVariantLabel(prop) || prop === false) {\r\n            context[name] = prop;\r\n        }\r\n    }\r\n    return context;\r\n}\r\n\r\nexport { getVariantContext };\r\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\r\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\r\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\r\nimport { isVariantLabel } from './is-variant-label.mjs';\r\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\r\nimport { variantPriorityOrder } from './variant-props.mjs';\r\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\r\nimport { getVariantContext } from './get-variant-context.mjs';\r\n\r\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\r\nconst numAnimationTypes = variantPriorityOrder.length;\r\nfunction animateList(visualElement) {\r\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\r\n}\r\nfunction createAnimationState(visualElement) {\r\n    let animate = animateList(visualElement);\r\n    let state = createState();\r\n    let isInitialRender = true;\r\n    /**\r\n     * This function will be used to reduce the animation definitions for\r\n     * each active animation type into an object of resolved values for it.\r\n     */\r\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\r\n        var _a;\r\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\r\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\r\n            : undefined);\r\n        if (resolved) {\r\n            const { transition, transitionEnd, ...target } = resolved;\r\n            acc = { ...acc, ...target, ...transitionEnd };\r\n        }\r\n        return acc;\r\n    };\r\n    /**\r\n     * This just allows us to inject mocked animation functions\r\n     * @internal\r\n     */\r\n    function setAnimateFunction(makeAnimator) {\r\n        animate = makeAnimator(visualElement);\r\n    }\r\n    /**\r\n     * When we receive new props, we need to:\r\n     * 1. Create a list of protected keys for each type. This is a directory of\r\n     *    value keys that are currently being \"handled\" by types of a higher priority\r\n     *    so that whenever an animation is played of a given type, these values are\r\n     *    protected from being animated.\r\n     * 2. Determine if an animation type needs animating.\r\n     * 3. Determine if any values have been removed from a type and figure out\r\n     *    what to animate those to.\r\n     */\r\n    function animateChanges(changedActiveType) {\r\n        const { props } = visualElement;\r\n        const context = getVariantContext(visualElement.parent) || {};\r\n        /**\r\n         * A list of animations that we'll build into as we iterate through the animation\r\n         * types. This will get executed at the end of the function.\r\n         */\r\n        const animations = [];\r\n        /**\r\n         * Keep track of which values have been removed. Then, as we hit lower priority\r\n         * animation types, we can check if they contain removed values and animate to that.\r\n         */\r\n        const removedKeys = new Set();\r\n        /**\r\n         * A dictionary of all encountered keys. This is an object to let us build into and\r\n         * copy it without iteration. Each time we hit an animation type we set its protected\r\n         * keys - the keys its not allowed to animate - to the latest version of this object.\r\n         */\r\n        let encounteredKeys = {};\r\n        /**\r\n         * If a variant has been removed at a given index, and this component is controlling\r\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\r\n         */\r\n        let removedVariantIndex = Infinity;\r\n        /**\r\n         * Iterate through all animation types in reverse priority order. For each, we want to\r\n         * detect which values it's handling and whether or not they've changed (and therefore\r\n         * need to be animated). If any values have been removed, we want to detect those in\r\n         * lower priority props and flag for animation.\r\n         */\r\n        for (let i = 0; i < numAnimationTypes; i++) {\r\n            const type = reversePriorityOrder[i];\r\n            const typeState = state[type];\r\n            const prop = props[type] !== undefined\r\n                ? props[type]\r\n                : context[type];\r\n            const propIsVariant = isVariantLabel(prop);\r\n            /**\r\n             * If this type has *just* changed isActive status, set activeDelta\r\n             * to that status. Otherwise set to null.\r\n             */\r\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\r\n            if (activeDelta === false)\r\n                removedVariantIndex = i;\r\n            /**\r\n             * If this prop is an inherited variant, rather than been set directly on the\r\n             * component itself, we want to make sure we allow the parent to trigger animations.\r\n             *\r\n             * TODO: Can probably change this to a !isControllingVariants check\r\n             */\r\n            let isInherited = prop === context[type] &&\r\n                prop !== props[type] &&\r\n                propIsVariant;\r\n            /**\r\n             *\r\n             */\r\n            if (isInherited &&\r\n                isInitialRender &&\r\n                visualElement.manuallyAnimateOnMount) {\r\n                isInherited = false;\r\n            }\r\n            /**\r\n             * Set all encountered keys so far as the protected keys for this type. This will\r\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\r\n             */\r\n            typeState.protectedKeys = { ...encounteredKeys };\r\n            // Check if we can skip analysing this prop early\r\n            if (\r\n            // If it isn't active and hasn't *just* been set as inactive\r\n            (!typeState.isActive && activeDelta === null) ||\r\n                // If we didn't and don't have any defined prop for this animation type\r\n                (!prop && !typeState.prevProp) ||\r\n                // Or if the prop doesn't define an animation\r\n                isAnimationControls(prop) ||\r\n                typeof prop === \"boolean\") {\r\n                continue;\r\n            }\r\n            /**\r\n             * As we go look through the values defined on this type, if we detect\r\n             * a changed value or a value that was removed in a higher priority, we set\r\n             * this to true and add this prop to the animation list.\r\n             */\r\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\r\n            let shouldAnimateType = variantDidChange ||\r\n                // If we're making this variant active, we want to always make it active\r\n                (type === changedActiveType &&\r\n                    typeState.isActive &&\r\n                    !isInherited &&\r\n                    propIsVariant) ||\r\n                // If we removed a higher-priority variant (i is in reverse order)\r\n                (i > removedVariantIndex && propIsVariant);\r\n            let handledRemovedValues = false;\r\n            /**\r\n             * As animations can be set as variant lists, variants or target objects, we\r\n             * coerce everything to an array if it isn't one already\r\n             */\r\n            const definitionList = Array.isArray(prop) ? prop : [prop];\r\n            /**\r\n             * Build an object of all the resolved values. We'll use this in the subsequent\r\n             * animateChanges calls to determine whether a value has changed.\r\n             */\r\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\r\n            if (activeDelta === false)\r\n                resolvedValues = {};\r\n            /**\r\n             * Now we need to loop through all the keys in the prev prop and this prop,\r\n             * and decide:\r\n             * 1. If the value has changed, and needs animating\r\n             * 2. If it has been removed, and needs adding to the removedKeys set\r\n             * 3. If it has been removed in a higher priority type and needs animating\r\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\r\n             *    needs adding to the type's protectedKeys list.\r\n             */\r\n            const { prevResolvedValues = {} } = typeState;\r\n            const allKeys = {\r\n                ...prevResolvedValues,\r\n                ...resolvedValues,\r\n            };\r\n            const markToAnimate = (key) => {\r\n                shouldAnimateType = true;\r\n                if (removedKeys.has(key)) {\r\n                    handledRemovedValues = true;\r\n                    removedKeys.delete(key);\r\n                }\r\n                typeState.needsAnimating[key] = true;\r\n                const motionValue = visualElement.getValue(key);\r\n                if (motionValue)\r\n                    motionValue.liveStyle = false;\r\n            };\r\n            for (const key in allKeys) {\r\n                const next = resolvedValues[key];\r\n                const prev = prevResolvedValues[key];\r\n                // If we've already handled this we can just skip ahead\r\n                if (encounteredKeys.hasOwnProperty(key))\r\n                    continue;\r\n                /**\r\n                 * If the value has changed, we probably want to animate it.\r\n                 */\r\n                let valueHasChanged = false;\r\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\r\n                    valueHasChanged = !shallowCompare(next, prev);\r\n                }\r\n                else {\r\n                    valueHasChanged = next !== prev;\r\n                }\r\n                if (valueHasChanged) {\r\n                    if (next !== undefined && next !== null) {\r\n                        // If next is defined and doesn't equal prev, it needs animating\r\n                        markToAnimate(key);\r\n                    }\r\n                    else {\r\n                        // If it's undefined, it's been removed.\r\n                        removedKeys.add(key);\r\n                    }\r\n                }\r\n                else if (next !== undefined && removedKeys.has(key)) {\r\n                    /**\r\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\r\n                     * been removed by a higher priority\r\n                     */\r\n                    markToAnimate(key);\r\n                }\r\n                else {\r\n                    /**\r\n                     * If it hasn't changed, we add it to the list of protected values\r\n                     * to ensure it doesn't get animated.\r\n                     */\r\n                    typeState.protectedKeys[key] = true;\r\n                }\r\n            }\r\n            /**\r\n             * Update the typeState so next time animateChanges is called we can compare the\r\n             * latest prop and resolvedValues to these.\r\n             */\r\n            typeState.prevProp = prop;\r\n            typeState.prevResolvedValues = resolvedValues;\r\n            /**\r\n             *\r\n             */\r\n            if (typeState.isActive) {\r\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\r\n            }\r\n            if (isInitialRender && visualElement.blockInitialAnimation) {\r\n                shouldAnimateType = false;\r\n            }\r\n            /**\r\n             * If this is an inherited prop we want to skip this animation\r\n             * unless the inherited variants haven't changed on this render.\r\n             */\r\n            const willAnimateViaParent = isInherited && variantDidChange;\r\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\r\n            if (shouldAnimateType && needsAnimating) {\r\n                animations.push(...definitionList.map((animation) => ({\r\n                    animation: animation,\r\n                    options: { type },\r\n                })));\r\n            }\r\n        }\r\n        /**\r\n         * If there are some removed value that haven't been dealt with,\r\n         * we need to create a new animation that falls back either to the value\r\n         * defined in the style prop, or the last read value.\r\n         */\r\n        if (removedKeys.size) {\r\n            const fallbackAnimation = {};\r\n            removedKeys.forEach((key) => {\r\n                const fallbackTarget = visualElement.getBaseTarget(key);\r\n                const motionValue = visualElement.getValue(key);\r\n                if (motionValue)\r\n                    motionValue.liveStyle = true;\r\n                // @ts-expect-error - @mattgperry to figure if we should do something here\r\n                fallbackAnimation[key] = fallbackTarget !== null && fallbackTarget !== void 0 ? fallbackTarget : null;\r\n            });\r\n            animations.push({ animation: fallbackAnimation });\r\n        }\r\n        let shouldAnimate = Boolean(animations.length);\r\n        if (isInitialRender &&\r\n            (props.initial === false || props.initial === props.animate) &&\r\n            !visualElement.manuallyAnimateOnMount) {\r\n            shouldAnimate = false;\r\n        }\r\n        isInitialRender = false;\r\n        return shouldAnimate ? animate(animations) : Promise.resolve();\r\n    }\r\n    /**\r\n     * Change whether a certain animation type is active.\r\n     */\r\n    function setActive(type, isActive) {\r\n        var _a;\r\n        // If the active state hasn't changed, we can safely do nothing here\r\n        if (state[type].isActive === isActive)\r\n            return Promise.resolve();\r\n        // Propagate active change to children\r\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\r\n        state[type].isActive = isActive;\r\n        const animations = animateChanges(type);\r\n        for (const key in state) {\r\n            state[key].protectedKeys = {};\r\n        }\r\n        return animations;\r\n    }\r\n    return {\r\n        animateChanges,\r\n        setActive,\r\n        setAnimateFunction,\r\n        getState: () => state,\r\n        reset: () => {\r\n            state = createState();\r\n            isInitialRender = true;\r\n        },\r\n    };\r\n}\r\nfunction checkVariantsDidChange(prev, next) {\r\n    if (typeof next === \"string\") {\r\n        return next !== prev;\r\n    }\r\n    else if (Array.isArray(next)) {\r\n        return !shallowCompare(next, prev);\r\n    }\r\n    return false;\r\n}\r\nfunction createTypeState(isActive = false) {\r\n    return {\r\n        isActive,\r\n        protectedKeys: {},\r\n        needsAnimating: {},\r\n        prevResolvedValues: {},\r\n    };\r\n}\r\nfunction createState() {\r\n    return {\r\n        animate: createTypeState(true),\r\n        whileInView: createTypeState(),\r\n        whileHover: createTypeState(),\r\n        whileTap: createTypeState(),\r\n        whileDrag: createTypeState(),\r\n        whileFocus: createTypeState(),\r\n        exit: createTypeState(),\r\n    };\r\n}\r\n\r\nexport { checkVariantsDidChange, createAnimationState };\r\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\r\nimport { animateTarget } from './visual-element-target.mjs';\r\nimport { animateVariant } from './visual-element-variant.mjs';\r\n\r\nfunction animateVisualElement(visualElement, definition, options = {}) {\r\n    visualElement.notify(\"AnimationStart\", definition);\r\n    let animation;\r\n    if (Array.isArray(definition)) {\r\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\r\n        animation = Promise.all(animations);\r\n    }\r\n    else if (typeof definition === \"string\") {\r\n        animation = animateVariant(visualElement, definition, options);\r\n    }\r\n    else {\r\n        const resolvedDefinition = typeof definition === \"function\"\r\n            ? resolveVariant(visualElement, definition, options.custom)\r\n            : definition;\r\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\r\n    }\r\n    return animation.then(() => {\r\n        visualElement.notify(\"AnimationComplete\", definition);\r\n    });\r\n}\r\n\r\nexport { animateVisualElement };\r\n","class Feature {\r\n    constructor(node) {\r\n        this.isMounted = false;\r\n        this.node = node;\r\n    }\r\n    update() { }\r\n}\r\n\r\nexport { Feature };\r\n","import { Feature } from '../Feature.mjs';\r\n\r\nlet id = 0;\r\nclass ExitAnimationFeature extends Feature {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.id = id++;\r\n    }\r\n    update() {\r\n        if (!this.node.presenceContext)\r\n            return;\r\n        const { isPresent, onExitComplete } = this.node.presenceContext;\r\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\r\n        if (!this.node.animationState || isPresent === prevIsPresent) {\r\n            return;\r\n        }\r\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\r\n        if (onExitComplete && !isPresent) {\r\n            exitAnimation.then(() => onExitComplete(this.id));\r\n        }\r\n    }\r\n    mount() {\r\n        const { register } = this.node.presenceContext || {};\r\n        if (register) {\r\n            this.unmount = register(this.id);\r\n        }\r\n    }\r\n    unmount() { }\r\n}\r\n\r\nexport { ExitAnimationFeature };\r\n","import { AnimationFeature } from './animation/index.mjs';\r\nimport { ExitAnimationFeature } from './animation/exit.mjs';\r\n\r\nconst animations = {\r\n    animation: {\r\n        Feature: AnimationFeature,\r\n    },\r\n    exit: {\r\n        Feature: ExitAnimationFeature,\r\n    },\r\n};\r\n\r\nexport { animations };\r\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\r\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\r\nimport { Feature } from '../Feature.mjs';\r\n\r\nclass AnimationFeature extends Feature {\r\n    /**\r\n     * We dynamically generate the AnimationState manager as it contains a reference\r\n     * to the underlying animation library. We only want to load that if we load this,\r\n     * so people can optionally code split it out using the `m` component.\r\n     */\r\n    constructor(node) {\r\n        super(node);\r\n        node.animationState || (node.animationState = createAnimationState(node));\r\n    }\r\n    updateAnimationControlsSubscription() {\r\n        const { animate } = this.node.getProps();\r\n        if (isAnimationControls(animate)) {\r\n            this.unmountControls = animate.subscribe(this.node);\r\n        }\r\n    }\r\n    /**\r\n     * Subscribe any provided AnimationControls to the component's VisualElement\r\n     */\r\n    mount() {\r\n        this.updateAnimationControlsSubscription();\r\n    }\r\n    update() {\r\n        const { animate } = this.node.getProps();\r\n        const { animate: prevAnimate } = this.node.prevProps || {};\r\n        if (animate !== prevAnimate) {\r\n            this.updateAnimationControlsSubscription();\r\n        }\r\n    }\r\n    unmount() {\r\n        var _a;\r\n        this.node.animationState.reset();\r\n        (_a = this.unmountControls) === null || _a === void 0 ? void 0 : _a.call(this);\r\n    }\r\n}\r\n\r\nexport { AnimationFeature };\r\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\r\n    target.addEventListener(eventName, handler, options);\r\n    return () => target.removeEventListener(eventName, handler);\r\n}\r\n\r\nexport { addDomEvent };\r\n","import { isPrimaryPointer } from 'motion-dom';\r\n\r\nfunction extractEventInfo(event) {\r\n    return {\r\n        point: {\r\n            x: event.pageX,\r\n            y: event.pageY,\r\n        },\r\n    };\r\n}\r\nconst addPointerInfo = (handler) => {\r\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\r\n};\r\n\r\nexport { addPointerInfo, extractEventInfo };\r\n","import { addDomEvent } from './add-dom-event.mjs';\r\nimport { addPointerInfo } from './event-info.mjs';\r\n\r\nfunction addPointerEvent(target, eventName, handler, options) {\r\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\r\n}\r\n\r\nexport { addPointerEvent };\r\n","const distance = (a, b) => Math.abs(a - b);\r\nfunction distance2D(a, b) {\r\n    // Multi-dimensional\r\n    const xDelta = distance(a.x, b.x);\r\n    const yDelta = distance(a.y, b.y);\r\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\r\n}\r\n\r\nexport { distance, distance2D };\r\n","import { isPrimaryPointer } from 'motion-dom';\r\nimport { secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\r\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\r\nimport { extractEventInfo } from '../../events/event-info.mjs';\r\nimport { distance2D } from '../../utils/distance.mjs';\r\nimport { pipe } from '../../utils/pipe.mjs';\r\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\r\n\r\n/**\r\n * @internal\r\n */\r\nclass PanSession {\r\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false, } = {}) {\r\n        /**\r\n         * @internal\r\n         */\r\n        this.startEvent = null;\r\n        /**\r\n         * @internal\r\n         */\r\n        this.lastMoveEvent = null;\r\n        /**\r\n         * @internal\r\n         */\r\n        this.lastMoveEventInfo = null;\r\n        /**\r\n         * @internal\r\n         */\r\n        this.handlers = {};\r\n        /**\r\n         * @internal\r\n         */\r\n        this.contextWindow = window;\r\n        this.updatePoint = () => {\r\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\r\n                return;\r\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\r\n            const isPanStarted = this.startEvent !== null;\r\n            // Only start panning if the offset is larger than 3 pixels. If we make it\r\n            // any larger than this we'll want to reset the pointer history\r\n            // on the first update to avoid visual snapping to the cursoe.\r\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\r\n            if (!isPanStarted && !isDistancePastThreshold)\r\n                return;\r\n            const { point } = info;\r\n            const { timestamp } = frameData;\r\n            this.history.push({ ...point, timestamp });\r\n            const { onStart, onMove } = this.handlers;\r\n            if (!isPanStarted) {\r\n                onStart && onStart(this.lastMoveEvent, info);\r\n                this.startEvent = this.lastMoveEvent;\r\n            }\r\n            onMove && onMove(this.lastMoveEvent, info);\r\n        };\r\n        this.handlePointerMove = (event, info) => {\r\n            this.lastMoveEvent = event;\r\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\r\n            // Throttle mouse move event to once per frame\r\n            frame.update(this.updatePoint, true);\r\n        };\r\n        this.handlePointerUp = (event, info) => {\r\n            this.end();\r\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\r\n            if (this.dragSnapToOrigin)\r\n                resumeAnimation && resumeAnimation();\r\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\r\n                return;\r\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\r\n                ? this.lastMoveEventInfo\r\n                : transformPoint(info, this.transformPagePoint), this.history);\r\n            if (this.startEvent && onEnd) {\r\n                onEnd(event, panInfo);\r\n            }\r\n            onSessionEnd && onSessionEnd(event, panInfo);\r\n        };\r\n        // If we have more than one touch, don't start detecting this gesture\r\n        if (!isPrimaryPointer(event))\r\n            return;\r\n        this.dragSnapToOrigin = dragSnapToOrigin;\r\n        this.handlers = handlers;\r\n        this.transformPagePoint = transformPagePoint;\r\n        this.contextWindow = contextWindow || window;\r\n        const info = extractEventInfo(event);\r\n        const initialInfo = transformPoint(info, this.transformPagePoint);\r\n        const { point } = initialInfo;\r\n        const { timestamp } = frameData;\r\n        this.history = [{ ...point, timestamp }];\r\n        const { onSessionStart } = handlers;\r\n        onSessionStart &&\r\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\r\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\r\n    }\r\n    updateHandlers(handlers) {\r\n        this.handlers = handlers;\r\n    }\r\n    end() {\r\n        this.removeListeners && this.removeListeners();\r\n        cancelFrame(this.updatePoint);\r\n    }\r\n}\r\nfunction transformPoint(info, transformPagePoint) {\r\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\r\n}\r\nfunction subtractPoint(a, b) {\r\n    return { x: a.x - b.x, y: a.y - b.y };\r\n}\r\nfunction getPanInfo({ point }, history) {\r\n    return {\r\n        point,\r\n        delta: subtractPoint(point, lastDevicePoint(history)),\r\n        offset: subtractPoint(point, startDevicePoint(history)),\r\n        velocity: getVelocity(history, 0.1),\r\n    };\r\n}\r\nfunction startDevicePoint(history) {\r\n    return history[0];\r\n}\r\nfunction lastDevicePoint(history) {\r\n    return history[history.length - 1];\r\n}\r\nfunction getVelocity(history, timeDelta) {\r\n    if (history.length < 2) {\r\n        return { x: 0, y: 0 };\r\n    }\r\n    let i = history.length - 1;\r\n    let timestampedPoint = null;\r\n    const lastPoint = lastDevicePoint(history);\r\n    while (i >= 0) {\r\n        timestampedPoint = history[i];\r\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\r\n            secondsToMilliseconds(timeDelta)) {\r\n            break;\r\n        }\r\n        i--;\r\n    }\r\n    if (!timestampedPoint) {\r\n        return { x: 0, y: 0 };\r\n    }\r\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\r\n    if (time === 0) {\r\n        return { x: 0, y: 0 };\r\n    }\r\n    const currentVelocity = {\r\n        x: (lastPoint.x - timestampedPoint.x) / time,\r\n        y: (lastPoint.y - timestampedPoint.y) / time,\r\n    };\r\n    if (currentVelocity.x === Infinity) {\r\n        currentVelocity.x = 0;\r\n    }\r\n    if (currentVelocity.y === Infinity) {\r\n        currentVelocity.y = 0;\r\n    }\r\n    return currentVelocity;\r\n}\r\n\r\nexport { PanSession };\r\n","import { mixNumber } from '../../utils/mix/number.mjs';\r\n\r\nconst SCALE_PRECISION = 0.0001;\r\nconst SCALE_MIN = 1 - SCALE_PRECISION;\r\nconst SCALE_MAX = 1 + SCALE_PRECISION;\r\nconst TRANSLATE_PRECISION = 0.01;\r\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\r\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\r\nfunction calcLength(axis) {\r\n    return axis.max - axis.min;\r\n}\r\nfunction isNear(value, target, maxDistance) {\r\n    return Math.abs(value - target) <= maxDistance;\r\n}\r\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\r\n    delta.origin = origin;\r\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\r\n    delta.scale = calcLength(target) / calcLength(source);\r\n    delta.translate =\r\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\r\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\r\n        isNaN(delta.scale)) {\r\n        delta.scale = 1.0;\r\n    }\r\n    if ((delta.translate >= TRANSLATE_MIN &&\r\n        delta.translate <= TRANSLATE_MAX) ||\r\n        isNaN(delta.translate)) {\r\n        delta.translate = 0.0;\r\n    }\r\n}\r\nfunction calcBoxDelta(delta, source, target, origin) {\r\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\r\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\r\n}\r\nfunction calcRelativeAxis(target, relative, parent) {\r\n    target.min = parent.min + relative.min;\r\n    target.max = target.min + calcLength(relative);\r\n}\r\nfunction calcRelativeBox(target, relative, parent) {\r\n    calcRelativeAxis(target.x, relative.x, parent.x);\r\n    calcRelativeAxis(target.y, relative.y, parent.y);\r\n}\r\nfunction calcRelativeAxisPosition(target, layout, parent) {\r\n    target.min = layout.min - parent.min;\r\n    target.max = target.min + calcLength(layout);\r\n}\r\nfunction calcRelativePosition(target, layout, parent) {\r\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\r\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\r\n}\r\n\r\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\r\n","import { progress } from 'motion-utils';\r\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\r\nimport { clamp } from '../../../utils/clamp.mjs';\r\nimport { mixNumber } from '../../../utils/mix/number.mjs';\r\n\r\n/**\r\n * Apply constraints to a point. These constraints are both physical along an\r\n * axis, and an elastic factor that determines how much to constrain the point\r\n * by if it does lie outside the defined parameters.\r\n */\r\nfunction applyConstraints(point, { min, max }, elastic) {\r\n    if (min !== undefined && point < min) {\r\n        // If we have a min point defined, and this is outside of that, constrain\r\n        point = elastic\r\n            ? mixNumber(min, point, elastic.min)\r\n            : Math.max(point, min);\r\n    }\r\n    else if (max !== undefined && point > max) {\r\n        // If we have a max point defined, and this is outside of that, constrain\r\n        point = elastic\r\n            ? mixNumber(max, point, elastic.max)\r\n            : Math.min(point, max);\r\n    }\r\n    return point;\r\n}\r\n/**\r\n * Calculate constraints in terms of the viewport when defined relatively to the\r\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\r\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\r\n */\r\nfunction calcRelativeAxisConstraints(axis, min, max) {\r\n    return {\r\n        min: min !== undefined ? axis.min + min : undefined,\r\n        max: max !== undefined\r\n            ? axis.max + max - (axis.max - axis.min)\r\n            : undefined,\r\n    };\r\n}\r\n/**\r\n * Calculate constraints in terms of the viewport when\r\n * defined relatively to the measured bounding box.\r\n */\r\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\r\n    return {\r\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\r\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\r\n    };\r\n}\r\n/**\r\n * Calculate viewport constraints when defined as another viewport-relative axis\r\n */\r\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\r\n    let min = constraintsAxis.min - layoutAxis.min;\r\n    let max = constraintsAxis.max - layoutAxis.max;\r\n    // If the constraints axis is actually smaller than the layout axis then we can\r\n    // flip the constraints\r\n    if (constraintsAxis.max - constraintsAxis.min <\r\n        layoutAxis.max - layoutAxis.min) {\r\n        [min, max] = [max, min];\r\n    }\r\n    return { min, max };\r\n}\r\n/**\r\n * Calculate viewport constraints when defined as another viewport-relative box\r\n */\r\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\r\n    return {\r\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\r\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\r\n    };\r\n}\r\n/**\r\n * Calculate a transform origin relative to the source axis, between 0-1, that results\r\n * in an asthetically pleasing scale/transform needed to project from source to target.\r\n */\r\nfunction calcOrigin(source, target) {\r\n    let origin = 0.5;\r\n    const sourceLength = calcLength(source);\r\n    const targetLength = calcLength(target);\r\n    if (targetLength > sourceLength) {\r\n        origin = progress(target.min, target.max - sourceLength, source.min);\r\n    }\r\n    else if (sourceLength > targetLength) {\r\n        origin = progress(source.min, source.max - targetLength, target.min);\r\n    }\r\n    return clamp(0, 1, origin);\r\n}\r\n/**\r\n * Rebase the calculated viewport constraints relative to the layout.min point.\r\n */\r\nfunction rebaseAxisConstraints(layout, constraints) {\r\n    const relativeConstraints = {};\r\n    if (constraints.min !== undefined) {\r\n        relativeConstraints.min = constraints.min - layout.min;\r\n    }\r\n    if (constraints.max !== undefined) {\r\n        relativeConstraints.max = constraints.max - layout.min;\r\n    }\r\n    return relativeConstraints;\r\n}\r\nconst defaultElastic = 0.35;\r\n/**\r\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\r\n */\r\nfunction resolveDragElastic(dragElastic = defaultElastic) {\r\n    if (dragElastic === false) {\r\n        dragElastic = 0;\r\n    }\r\n    else if (dragElastic === true) {\r\n        dragElastic = defaultElastic;\r\n    }\r\n    return {\r\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\r\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\r\n    };\r\n}\r\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\r\n    return {\r\n        min: resolvePointElastic(dragElastic, minLabel),\r\n        max: resolvePointElastic(dragElastic, maxLabel),\r\n    };\r\n}\r\nfunction resolvePointElastic(dragElastic, label) {\r\n    return typeof dragElastic === \"number\"\r\n        ? dragElastic\r\n        : dragElastic[label] || 0;\r\n}\r\n\r\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\r\n","const createAxisDelta = () => ({\r\n    translate: 0,\r\n    scale: 1,\r\n    origin: 0,\r\n    originPoint: 0,\r\n});\r\nconst createDelta = () => ({\r\n    x: createAxisDelta(),\r\n    y: createAxisDelta(),\r\n});\r\nconst createAxis = () => ({ min: 0, max: 0 });\r\nconst createBox = () => ({\r\n    x: createAxis(),\r\n    y: createAxis(),\r\n});\r\n\r\nexport { createAxis, createAxisDelta, createBox, createDelta };\r\n","function eachAxis(callback) {\r\n    return [callback(\"x\"), callback(\"y\")];\r\n}\r\n\r\nexport { eachAxis };\r\n","/**\r\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\r\n * it's easier to consider each axis individually. This function returns a bounding box\r\n * as a map of single-axis min/max values.\r\n */\r\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\r\n    return {\r\n        x: { min: left, max: right },\r\n        y: { min: top, max: bottom },\r\n    };\r\n}\r\nfunction convertBoxToBoundingBox({ x, y }) {\r\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\r\n}\r\n/**\r\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\r\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\r\n * when measuring DOM elements and DOM event points.\r\n */\r\nfunction transformBoxPoints(point, transformPoint) {\r\n    if (!transformPoint)\r\n        return point;\r\n    const topLeft = transformPoint({ x: point.left, y: point.top });\r\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\r\n    return {\r\n        top: topLeft.y,\r\n        left: topLeft.x,\r\n        bottom: bottomRight.y,\r\n        right: bottomRight.x,\r\n    };\r\n}\r\n\r\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\r\n","function isIdentityScale(scale) {\r\n    return scale === undefined || scale === 1;\r\n}\r\nfunction hasScale({ scale, scaleX, scaleY }) {\r\n    return (!isIdentityScale(scale) ||\r\n        !isIdentityScale(scaleX) ||\r\n        !isIdentityScale(scaleY));\r\n}\r\nfunction hasTransform(values) {\r\n    return (hasScale(values) ||\r\n        has2DTranslate(values) ||\r\n        values.z ||\r\n        values.rotate ||\r\n        values.rotateX ||\r\n        values.rotateY ||\r\n        values.skewX ||\r\n        values.skewY);\r\n}\r\nfunction has2DTranslate(values) {\r\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\r\n}\r\nfunction is2DTranslate(value) {\r\n    return value && value !== \"0%\";\r\n}\r\n\r\nexport { has2DTranslate, hasScale, hasTransform };\r\n","import { mixNumber } from '../../utils/mix/number.mjs';\r\nimport { hasTransform } from '../utils/has-transform.mjs';\r\n\r\n/**\r\n * Scales a point based on a factor and an originPoint\r\n */\r\nfunction scalePoint(point, scale, originPoint) {\r\n    const distanceFromOrigin = point - originPoint;\r\n    const scaled = scale * distanceFromOrigin;\r\n    return originPoint + scaled;\r\n}\r\n/**\r\n * Applies a translate/scale delta to a point\r\n */\r\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\r\n    if (boxScale !== undefined) {\r\n        point = scalePoint(point, boxScale, originPoint);\r\n    }\r\n    return scalePoint(point, scale, originPoint) + translate;\r\n}\r\n/**\r\n * Applies a translate/scale delta to an axis\r\n */\r\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\r\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\r\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\r\n}\r\n/**\r\n * Applies a translate/scale delta to a box\r\n */\r\nfunction applyBoxDelta(box, { x, y }) {\r\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\r\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\r\n}\r\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\r\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\r\n/**\r\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\r\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\r\n *\r\n * This is the final nested loop within updateLayoutDelta for future refactoring\r\n */\r\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\r\n    const treeLength = treePath.length;\r\n    if (!treeLength)\r\n        return;\r\n    // Reset the treeScale\r\n    treeScale.x = treeScale.y = 1;\r\n    let node;\r\n    let delta;\r\n    for (let i = 0; i < treeLength; i++) {\r\n        node = treePath[i];\r\n        delta = node.projectionDelta;\r\n        /**\r\n         * TODO: Prefer to remove this, but currently we have motion components with\r\n         * display: contents in Framer.\r\n         */\r\n        const { visualElement } = node.options;\r\n        if (visualElement &&\r\n            visualElement.props.style &&\r\n            visualElement.props.style.display === \"contents\") {\r\n            continue;\r\n        }\r\n        if (isSharedTransition &&\r\n            node.options.layoutScroll &&\r\n            node.scroll &&\r\n            node !== node.root) {\r\n            transformBox(box, {\r\n                x: -node.scroll.offset.x,\r\n                y: -node.scroll.offset.y,\r\n            });\r\n        }\r\n        if (delta) {\r\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\r\n            treeScale.x *= delta.x.scale;\r\n            treeScale.y *= delta.y.scale;\r\n            // Apply each ancestor's calculated delta into this component's recorded layout box\r\n            applyBoxDelta(box, delta);\r\n        }\r\n        if (isSharedTransition && hasTransform(node.latestValues)) {\r\n            transformBox(box, node.latestValues);\r\n        }\r\n    }\r\n    /**\r\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\r\n     * This will help reduce useless scales getting rendered.\r\n     */\r\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\r\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\r\n        treeScale.x = 1.0;\r\n    }\r\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\r\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\r\n        treeScale.y = 1.0;\r\n    }\r\n}\r\nfunction translateAxis(axis, distance) {\r\n    axis.min = axis.min + distance;\r\n    axis.max = axis.max + distance;\r\n}\r\n/**\r\n * Apply a transform to an axis from the latest resolved motion values.\r\n * This function basically acts as a bridge between a flat motion value map\r\n * and applyAxisDelta\r\n */\r\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\r\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\r\n    // Apply the axis delta to the final axis\r\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\r\n}\r\n/**\r\n * Apply a transform to a box from the latest resolved motion values.\r\n */\r\nfunction transformBox(box, transform) {\r\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\r\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\r\n}\r\n\r\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\r\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\r\nimport { translateAxis } from '../geometry/delta-apply.mjs';\r\n\r\nfunction measureViewportBox(instance, transformPoint) {\r\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\r\n}\r\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\r\n    const viewportBox = measureViewportBox(element, transformPagePoint);\r\n    const { scroll } = rootProjectionNode;\r\n    if (scroll) {\r\n        translateAxis(viewportBox.x, scroll.offset.x);\r\n        translateAxis(viewportBox.y, scroll.offset.y);\r\n    }\r\n    return viewportBox;\r\n}\r\n\r\nexport { measurePageBox, measureViewportBox };\r\n","// Fixes https://github.com/motiondivision/motion/issues/2270\r\nconst getContextWindow = ({ current }) => {\r\n    return current ? current.ownerDocument.defaultView : null;\r\n};\r\n\r\nexport { getContextWindow };\r\n","import { invariant } from 'motion-utils';\r\nimport { setDragLock } from 'motion-dom';\r\nimport { PanSession } from '../pan/PanSession.mjs';\r\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\r\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\r\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\r\nimport { createBox } from '../../projection/geometry/models.mjs';\r\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\r\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\r\nimport { extractEventInfo } from '../../events/event-info.mjs';\r\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\r\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\r\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\r\nimport { mixNumber } from '../../utils/mix/number.mjs';\r\nimport { percent } from '../../value/types/numbers/units.mjs';\r\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\r\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\r\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\r\nimport { frame } from '../../frameloop/frame.mjs';\r\n\r\nconst elementDragControls = new WeakMap();\r\n/**\r\n *\r\n */\r\n// let latestPointerEvent: PointerEvent\r\nclass VisualElementDragControls {\r\n    constructor(visualElement) {\r\n        this.openDragLock = null;\r\n        this.isDragging = false;\r\n        this.currentDirection = null;\r\n        this.originPoint = { x: 0, y: 0 };\r\n        /**\r\n         * The permitted boundaries of travel, in pixels.\r\n         */\r\n        this.constraints = false;\r\n        this.hasMutatedConstraints = false;\r\n        /**\r\n         * The per-axis resolved elastic values.\r\n         */\r\n        this.elastic = createBox();\r\n        this.visualElement = visualElement;\r\n    }\r\n    start(originEvent, { snapToCursor = false } = {}) {\r\n        /**\r\n         * Don't start dragging if this component is exiting\r\n         */\r\n        const { presenceContext } = this.visualElement;\r\n        if (presenceContext && presenceContext.isPresent === false)\r\n            return;\r\n        const onSessionStart = (event) => {\r\n            const { dragSnapToOrigin } = this.getProps();\r\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\r\n            // the component.\r\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\r\n            if (snapToCursor) {\r\n                this.snapToCursor(extractEventInfo(event).point);\r\n            }\r\n        };\r\n        const onStart = (event, info) => {\r\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\r\n            const { drag, dragPropagation, onDragStart } = this.getProps();\r\n            if (drag && !dragPropagation) {\r\n                if (this.openDragLock)\r\n                    this.openDragLock();\r\n                this.openDragLock = setDragLock(drag);\r\n                // If we don 't have the lock, don't start dragging\r\n                if (!this.openDragLock)\r\n                    return;\r\n            }\r\n            this.isDragging = true;\r\n            this.currentDirection = null;\r\n            this.resolveConstraints();\r\n            if (this.visualElement.projection) {\r\n                this.visualElement.projection.isAnimationBlocked = true;\r\n                this.visualElement.projection.target = undefined;\r\n            }\r\n            /**\r\n             * Record gesture origin\r\n             */\r\n            eachAxis((axis) => {\r\n                let current = this.getAxisMotionValue(axis).get() || 0;\r\n                /**\r\n                 * If the MotionValue is a percentage value convert to px\r\n                 */\r\n                if (percent.test(current)) {\r\n                    const { projection } = this.visualElement;\r\n                    if (projection && projection.layout) {\r\n                        const measuredAxis = projection.layout.layoutBox[axis];\r\n                        if (measuredAxis) {\r\n                            const length = calcLength(measuredAxis);\r\n                            current = length * (parseFloat(current) / 100);\r\n                        }\r\n                    }\r\n                }\r\n                this.originPoint[axis] = current;\r\n            });\r\n            // Fire onDragStart event\r\n            if (onDragStart) {\r\n                frame.postRender(() => onDragStart(event, info));\r\n            }\r\n            addValueToWillChange(this.visualElement, \"transform\");\r\n            const { animationState } = this.visualElement;\r\n            animationState && animationState.setActive(\"whileDrag\", true);\r\n        };\r\n        const onMove = (event, info) => {\r\n            // latestPointerEvent = event\r\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\r\n            // If we didn't successfully receive the gesture lock, early return.\r\n            if (!dragPropagation && !this.openDragLock)\r\n                return;\r\n            const { offset } = info;\r\n            // Attempt to detect drag direction if directionLock is true\r\n            if (dragDirectionLock && this.currentDirection === null) {\r\n                this.currentDirection = getCurrentDirection(offset);\r\n                // If we've successfully set a direction, notify listener\r\n                if (this.currentDirection !== null) {\r\n                    onDirectionLock && onDirectionLock(this.currentDirection);\r\n                }\r\n                return;\r\n            }\r\n            // Update each point with the latest position\r\n            this.updateAxis(\"x\", info.point, offset);\r\n            this.updateAxis(\"y\", info.point, offset);\r\n            /**\r\n             * Ideally we would leave the renderer to fire naturally at the end of\r\n             * this frame but if the element is about to change layout as the result\r\n             * of a re-render we want to ensure the browser can read the latest\r\n             * bounding box to ensure the pointer and element don't fall out of sync.\r\n             */\r\n            this.visualElement.render();\r\n            /**\r\n             * This must fire after the render call as it might trigger a state\r\n             * change which itself might trigger a layout update.\r\n             */\r\n            onDrag && onDrag(event, info);\r\n        };\r\n        const onSessionEnd = (event, info) => this.stop(event, info);\r\n        const resumeAnimation = () => eachAxis((axis) => {\r\n            var _a;\r\n            return this.getAnimationState(axis) === \"paused\" &&\r\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\r\n        });\r\n        const { dragSnapToOrigin } = this.getProps();\r\n        this.panSession = new PanSession(originEvent, {\r\n            onSessionStart,\r\n            onStart,\r\n            onMove,\r\n            onSessionEnd,\r\n            resumeAnimation,\r\n        }, {\r\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\r\n            dragSnapToOrigin,\r\n            contextWindow: getContextWindow(this.visualElement),\r\n        });\r\n    }\r\n    stop(event, info) {\r\n        const isDragging = this.isDragging;\r\n        this.cancel();\r\n        if (!isDragging)\r\n            return;\r\n        const { velocity } = info;\r\n        this.startAnimation(velocity);\r\n        const { onDragEnd } = this.getProps();\r\n        if (onDragEnd) {\r\n            frame.postRender(() => onDragEnd(event, info));\r\n        }\r\n    }\r\n    cancel() {\r\n        this.isDragging = false;\r\n        const { projection, animationState } = this.visualElement;\r\n        if (projection) {\r\n            projection.isAnimationBlocked = false;\r\n        }\r\n        this.panSession && this.panSession.end();\r\n        this.panSession = undefined;\r\n        const { dragPropagation } = this.getProps();\r\n        if (!dragPropagation && this.openDragLock) {\r\n            this.openDragLock();\r\n            this.openDragLock = null;\r\n        }\r\n        animationState && animationState.setActive(\"whileDrag\", false);\r\n    }\r\n    updateAxis(axis, _point, offset) {\r\n        const { drag } = this.getProps();\r\n        // If we're not dragging this axis, do an early return.\r\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\r\n            return;\r\n        const axisValue = this.getAxisMotionValue(axis);\r\n        let next = this.originPoint[axis] + offset[axis];\r\n        // Apply constraints\r\n        if (this.constraints && this.constraints[axis]) {\r\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\r\n        }\r\n        axisValue.set(next);\r\n    }\r\n    resolveConstraints() {\r\n        var _a;\r\n        const { dragConstraints, dragElastic } = this.getProps();\r\n        const layout = this.visualElement.projection &&\r\n            !this.visualElement.projection.layout\r\n            ? this.visualElement.projection.measure(false)\r\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\r\n        const prevConstraints = this.constraints;\r\n        if (dragConstraints && isRefObject(dragConstraints)) {\r\n            if (!this.constraints) {\r\n                this.constraints = this.resolveRefConstraints();\r\n            }\r\n        }\r\n        else {\r\n            if (dragConstraints && layout) {\r\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\r\n            }\r\n            else {\r\n                this.constraints = false;\r\n            }\r\n        }\r\n        this.elastic = resolveDragElastic(dragElastic);\r\n        /**\r\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\r\n         * from viewport-relative to component-relative.\r\n         */\r\n        if (prevConstraints !== this.constraints &&\r\n            layout &&\r\n            this.constraints &&\r\n            !this.hasMutatedConstraints) {\r\n            eachAxis((axis) => {\r\n                if (this.constraints !== false &&\r\n                    this.getAxisMotionValue(axis)) {\r\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    resolveRefConstraints() {\r\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\r\n        if (!constraints || !isRefObject(constraints))\r\n            return false;\r\n        const constraintsElement = constraints.current;\r\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\r\n        const { projection } = this.visualElement;\r\n        // TODO\r\n        if (!projection || !projection.layout)\r\n            return false;\r\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\r\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\r\n        /**\r\n         * If there's an onMeasureDragConstraints listener we call it and\r\n         * if different constraints are returned, set constraints to that\r\n         */\r\n        if (onMeasureDragConstraints) {\r\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\r\n            this.hasMutatedConstraints = !!userConstraints;\r\n            if (userConstraints) {\r\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\r\n            }\r\n        }\r\n        return measuredConstraints;\r\n    }\r\n    startAnimation(velocity) {\r\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\r\n        const constraints = this.constraints || {};\r\n        const momentumAnimations = eachAxis((axis) => {\r\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\r\n                return;\r\n            }\r\n            let transition = (constraints && constraints[axis]) || {};\r\n            if (dragSnapToOrigin)\r\n                transition = { min: 0, max: 0 };\r\n            /**\r\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\r\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\r\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\r\n             * using the value of `dragElastic`.\r\n             */\r\n            const bounceStiffness = dragElastic ? 200 : 1000000;\r\n            const bounceDamping = dragElastic ? 40 : 10000000;\r\n            const inertia = {\r\n                type: \"inertia\",\r\n                velocity: dragMomentum ? velocity[axis] : 0,\r\n                bounceStiffness,\r\n                bounceDamping,\r\n                timeConstant: 750,\r\n                restDelta: 1,\r\n                restSpeed: 10,\r\n                ...dragTransition,\r\n                ...transition,\r\n            };\r\n            // If we're not animating on an externally-provided `MotionValue` we can use the\r\n            // component's animation controls which will handle interactions with whileHover (etc),\r\n            // otherwise we just have to animate the `MotionValue` itself.\r\n            return this.startAxisValueAnimation(axis, inertia);\r\n        });\r\n        // Run all animations and then resolve the new drag constraints.\r\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\r\n    }\r\n    startAxisValueAnimation(axis, transition) {\r\n        const axisValue = this.getAxisMotionValue(axis);\r\n        addValueToWillChange(this.visualElement, axis);\r\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false));\r\n    }\r\n    stopAnimation() {\r\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\r\n    }\r\n    pauseAnimation() {\r\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\r\n    }\r\n    getAnimationState(axis) {\r\n        var _a;\r\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\r\n    }\r\n    /**\r\n     * Drag works differently depending on which props are provided.\r\n     *\r\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\r\n     * - Otherwise, we apply the delta to the x/y motion values.\r\n     */\r\n    getAxisMotionValue(axis) {\r\n        const dragKey = `_drag${axis.toUpperCase()}`;\r\n        const props = this.visualElement.getProps();\r\n        const externalMotionValue = props[dragKey];\r\n        return externalMotionValue\r\n            ? externalMotionValue\r\n            : this.visualElement.getValue(axis, (props.initial\r\n                ? props.initial[axis]\r\n                : undefined) || 0);\r\n    }\r\n    snapToCursor(point) {\r\n        eachAxis((axis) => {\r\n            const { drag } = this.getProps();\r\n            // If we're not dragging this axis, do an early return.\r\n            if (!shouldDrag(axis, drag, this.currentDirection))\r\n                return;\r\n            const { projection } = this.visualElement;\r\n            const axisValue = this.getAxisMotionValue(axis);\r\n            if (projection && projection.layout) {\r\n                const { min, max } = projection.layout.layoutBox[axis];\r\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * When the viewport resizes we want to check if the measured constraints\r\n     * have changed and, if so, reposition the element within those new constraints\r\n     * relative to where it was before the resize.\r\n     */\r\n    scalePositionWithinConstraints() {\r\n        if (!this.visualElement.current)\r\n            return;\r\n        const { drag, dragConstraints } = this.getProps();\r\n        const { projection } = this.visualElement;\r\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\r\n            return;\r\n        /**\r\n         * Stop current animations as there can be visual glitching if we try to do\r\n         * this mid-animation\r\n         */\r\n        this.stopAnimation();\r\n        /**\r\n         * Record the relative position of the dragged element relative to the\r\n         * constraints box and save as a progress value.\r\n         */\r\n        const boxProgress = { x: 0, y: 0 };\r\n        eachAxis((axis) => {\r\n            const axisValue = this.getAxisMotionValue(axis);\r\n            if (axisValue && this.constraints !== false) {\r\n                const latest = axisValue.get();\r\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\r\n            }\r\n        });\r\n        /**\r\n         * Update the layout of this element and resolve the latest drag constraints\r\n         */\r\n        const { transformTemplate } = this.visualElement.getProps();\r\n        this.visualElement.current.style.transform = transformTemplate\r\n            ? transformTemplate({}, \"\")\r\n            : \"none\";\r\n        projection.root && projection.root.updateScroll();\r\n        projection.updateLayout();\r\n        this.resolveConstraints();\r\n        /**\r\n         * For each axis, calculate the current progress of the layout axis\r\n         * within the new constraints.\r\n         */\r\n        eachAxis((axis) => {\r\n            if (!shouldDrag(axis, drag, null))\r\n                return;\r\n            /**\r\n             * Calculate a new transform based on the previous box progress\r\n             */\r\n            const axisValue = this.getAxisMotionValue(axis);\r\n            const { min, max } = this.constraints[axis];\r\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\r\n        });\r\n    }\r\n    addListeners() {\r\n        if (!this.visualElement.current)\r\n            return;\r\n        elementDragControls.set(this.visualElement, this);\r\n        const element = this.visualElement.current;\r\n        /**\r\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\r\n         */\r\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\r\n            const { drag, dragListener = true } = this.getProps();\r\n            drag && dragListener && this.start(event);\r\n        });\r\n        const measureDragConstraints = () => {\r\n            const { dragConstraints } = this.getProps();\r\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\r\n                this.constraints = this.resolveRefConstraints();\r\n            }\r\n        };\r\n        const { projection } = this.visualElement;\r\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\r\n        if (projection && !projection.layout) {\r\n            projection.root && projection.root.updateScroll();\r\n            projection.updateLayout();\r\n        }\r\n        frame.read(measureDragConstraints);\r\n        /**\r\n         * Attach a window resize listener to scale the draggable target within its defined\r\n         * constraints as the window resizes.\r\n         */\r\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\r\n        /**\r\n         * If the element's layout changes, calculate the delta and apply that to\r\n         * the drag gesture's origin point.\r\n         */\r\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\r\n            if (this.isDragging && hasLayoutChanged) {\r\n                eachAxis((axis) => {\r\n                    const motionValue = this.getAxisMotionValue(axis);\r\n                    if (!motionValue)\r\n                        return;\r\n                    this.originPoint[axis] += delta[axis].translate;\r\n                    motionValue.set(motionValue.get() + delta[axis].translate);\r\n                });\r\n                this.visualElement.render();\r\n            }\r\n        }));\r\n        return () => {\r\n            stopResizeListener();\r\n            stopPointerListener();\r\n            stopMeasureLayoutListener();\r\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\r\n        };\r\n    }\r\n    getProps() {\r\n        const props = this.visualElement.getProps();\r\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\r\n        return {\r\n            ...props,\r\n            drag,\r\n            dragDirectionLock,\r\n            dragPropagation,\r\n            dragConstraints,\r\n            dragElastic,\r\n            dragMomentum,\r\n        };\r\n    }\r\n}\r\nfunction shouldDrag(direction, drag, currentDirection) {\r\n    return ((drag === true || drag === direction) &&\r\n        (currentDirection === null || currentDirection === direction));\r\n}\r\n/**\r\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\r\n * than the provided threshold, return `null`.\r\n *\r\n * @param offset - The x/y offset from origin.\r\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\r\n */\r\nfunction getCurrentDirection(offset, lockThreshold = 10) {\r\n    let direction = null;\r\n    if (Math.abs(offset.y) > lockThreshold) {\r\n        direction = \"y\";\r\n    }\r\n    else if (Math.abs(offset.x) > lockThreshold) {\r\n        direction = \"x\";\r\n    }\r\n    return direction;\r\n}\r\n\r\nexport { VisualElementDragControls, elementDragControls };\r\n","import { isDragging } from './is-active.mjs';\r\n\r\nfunction setDragLock(axis) {\r\n    if (axis === \"x\" || axis === \"y\") {\r\n        if (isDragging[axis]) {\r\n            return null;\r\n        }\r\n        else {\r\n            isDragging[axis] = true;\r\n            return () => {\r\n                isDragging[axis] = false;\r\n            };\r\n        }\r\n    }\r\n    else {\r\n        if (isDragging.x || isDragging.y) {\r\n            return null;\r\n        }\r\n        else {\r\n            isDragging.x = isDragging.y = true;\r\n            return () => {\r\n                isDragging.x = isDragging.y = false;\r\n            };\r\n        }\r\n    }\r\n}\r\n\r\nexport { setDragLock };\r\n","import { PanSession } from './PanSession.mjs';\r\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\r\nimport { Feature } from '../../motion/features/Feature.mjs';\r\nimport { noop } from 'motion-utils';\r\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\r\nimport { frame } from '../../frameloop/frame.mjs';\r\n\r\nconst asyncHandler = (handler) => (event, info) => {\r\n    if (handler) {\r\n        frame.postRender(() => handler(event, info));\r\n    }\r\n};\r\nclass PanGesture extends Feature {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.removePointerDownListener = noop;\r\n    }\r\n    onPointerDown(pointerDownEvent) {\r\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\r\n            transformPagePoint: this.node.getTransformPagePoint(),\r\n            contextWindow: getContextWindow(this.node),\r\n        });\r\n    }\r\n    createPanHandlers() {\r\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\r\n        return {\r\n            onSessionStart: asyncHandler(onPanSessionStart),\r\n            onStart: asyncHandler(onPanStart),\r\n            onMove: onPan,\r\n            onEnd: (event, info) => {\r\n                delete this.session;\r\n                if (onPanEnd) {\r\n                    frame.postRender(() => onPanEnd(event, info));\r\n                }\r\n            },\r\n        };\r\n    }\r\n    mount() {\r\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\r\n    }\r\n    update() {\r\n        this.session && this.session.updateHandlers(this.createPanHandlers());\r\n    }\r\n    unmount() {\r\n        this.removePointerDownListener();\r\n        this.session && this.session.end();\r\n    }\r\n}\r\n\r\nexport { PanGesture };\r\n","/**\r\n * This should only ever be modified on the client otherwise it'll\r\n * persist through server requests. If we need instanced states we\r\n * could lazy-init via root.\r\n */\r\nconst globalProjectionState = {\r\n    /**\r\n     * Global flag as to whether the tree has animated since the last time\r\n     * we resized the window\r\n     */\r\n    hasAnimatedSinceResize: true,\r\n    /**\r\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\r\n     * update will be given a `data-projection-id` attribute.\r\n     */\r\n    hasEverUpdated: false,\r\n};\r\n\r\nexport { globalProjectionState };\r\n","import { px } from '../../value/types/numbers/units.mjs';\r\n\r\nfunction pixelsToPercent(pixels, axis) {\r\n    if (axis.max === axis.min)\r\n        return 0;\r\n    return (pixels / (axis.max - axis.min)) * 100;\r\n}\r\n/**\r\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\r\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\r\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\r\n * borderRadius in both states. If we animate between the two in pixels that will trigger\r\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\r\n */\r\nconst correctBorderRadius = {\r\n    correct: (latest, node) => {\r\n        if (!node.target)\r\n            return latest;\r\n        /**\r\n         * If latest is a string, if it's a percentage we can return immediately as it's\r\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\r\n         */\r\n        if (typeof latest === \"string\") {\r\n            if (px.test(latest)) {\r\n                latest = parseFloat(latest);\r\n            }\r\n            else {\r\n                return latest;\r\n            }\r\n        }\r\n        /**\r\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\r\n         * pixel value as a percentage of each axis\r\n         */\r\n        const x = pixelsToPercent(latest, node.target.x);\r\n        const y = pixelsToPercent(latest, node.target.y);\r\n        return `${x}% ${y}%`;\r\n    },\r\n};\r\n\r\nexport { correctBorderRadius, pixelsToPercent };\r\n","import { mixNumber } from '../../utils/mix/number.mjs';\r\nimport { complex } from '../../value/types/complex/index.mjs';\r\n\r\nconst correctBoxShadow = {\r\n    correct: (latest, { treeScale, projectionDelta }) => {\r\n        const original = latest;\r\n        const shadow = complex.parse(latest);\r\n        // TODO: Doesn't support multiple shadows\r\n        if (shadow.length > 5)\r\n            return original;\r\n        const template = complex.createTransformer(latest);\r\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\r\n        // Calculate the overall context scale\r\n        const xScale = projectionDelta.x.scale * treeScale.x;\r\n        const yScale = projectionDelta.y.scale * treeScale.y;\r\n        shadow[0 + offset] /= xScale;\r\n        shadow[1 + offset] /= yScale;\r\n        /**\r\n         * Ideally we'd correct x and y scales individually, but because blur and\r\n         * spread apply to both we have to take a scale average and apply that instead.\r\n         * We could potentially improve the outcome of this by incorporating the ratio between\r\n         * the two scales.\r\n         */\r\n        const averageScale = mixNumber(xScale, yScale, 0.5);\r\n        // Blur\r\n        if (typeof shadow[2 + offset] === \"number\")\r\n            shadow[2 + offset] /= averageScale;\r\n        // Spread\r\n        if (typeof shadow[3 + offset] === \"number\")\r\n            shadow[3 + offset] /= averageScale;\r\n        return template(shadow);\r\n    },\r\n};\r\n\r\nexport { correctBoxShadow };\r\n","\"use client\";\r\nimport { jsx } from 'react/jsx-runtime';\r\nimport { useContext, Component } from 'react';\r\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\r\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\r\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\r\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\r\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\r\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\r\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\r\nimport { microtask } from '../../../frameloop/microtask.mjs';\r\nimport { frame } from '../../../frameloop/frame.mjs';\r\n\r\nclass MeasureLayoutWithContext extends Component {\r\n    /**\r\n     * This only mounts projection nodes for components that\r\n     * need measuring, we might want to do it for all components\r\n     * in order to incorporate transforms\r\n     */\r\n    componentDidMount() {\r\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\r\n        const { projection } = visualElement;\r\n        addScaleCorrector(defaultScaleCorrectors);\r\n        if (projection) {\r\n            if (layoutGroup.group)\r\n                layoutGroup.group.add(projection);\r\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\r\n                switchLayoutGroup.register(projection);\r\n            }\r\n            projection.root.didUpdate();\r\n            projection.addEventListener(\"animationComplete\", () => {\r\n                this.safeToRemove();\r\n            });\r\n            projection.setOptions({\r\n                ...projection.options,\r\n                onExitComplete: () => this.safeToRemove(),\r\n            });\r\n        }\r\n        globalProjectionState.hasEverUpdated = true;\r\n    }\r\n    getSnapshotBeforeUpdate(prevProps) {\r\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\r\n        const projection = visualElement.projection;\r\n        if (!projection)\r\n            return null;\r\n        /**\r\n         * TODO: We use this data in relegate to determine whether to\r\n         * promote a previous element. There's no guarantee its presence data\r\n         * will have updated by this point - if a bug like this arises it will\r\n         * have to be that we markForRelegation and then find a new lead some other way,\r\n         * perhaps in didUpdate\r\n         */\r\n        projection.isPresent = isPresent;\r\n        if (drag ||\r\n            prevProps.layoutDependency !== layoutDependency ||\r\n            layoutDependency === undefined) {\r\n            projection.willUpdate();\r\n        }\r\n        else {\r\n            this.safeToRemove();\r\n        }\r\n        if (prevProps.isPresent !== isPresent) {\r\n            if (isPresent) {\r\n                projection.promote();\r\n            }\r\n            else if (!projection.relegate()) {\r\n                /**\r\n                 * If there's another stack member taking over from this one,\r\n                 * it's in charge of the exit animation and therefore should\r\n                 * be in charge of the safe to remove. Otherwise we call it here.\r\n                 */\r\n                frame.postRender(() => {\r\n                    const stack = projection.getStack();\r\n                    if (!stack || !stack.members.length) {\r\n                        this.safeToRemove();\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    componentDidUpdate() {\r\n        const { projection } = this.props.visualElement;\r\n        if (projection) {\r\n            projection.root.didUpdate();\r\n            microtask.postRender(() => {\r\n                if (!projection.currentAnimation && projection.isLead()) {\r\n                    this.safeToRemove();\r\n                }\r\n            });\r\n        }\r\n    }\r\n    componentWillUnmount() {\r\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\r\n        const { projection } = visualElement;\r\n        if (projection) {\r\n            projection.scheduleCheckAfterUnmount();\r\n            if (layoutGroup && layoutGroup.group)\r\n                layoutGroup.group.remove(projection);\r\n            if (promoteContext && promoteContext.deregister)\r\n                promoteContext.deregister(projection);\r\n        }\r\n    }\r\n    safeToRemove() {\r\n        const { safeToRemove } = this.props;\r\n        safeToRemove && safeToRemove();\r\n    }\r\n    render() {\r\n        return null;\r\n    }\r\n}\r\nfunction MeasureLayout(props) {\r\n    const [isPresent, safeToRemove] = usePresence();\r\n    const layoutGroup = useContext(LayoutGroupContext);\r\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\r\n}\r\nconst defaultScaleCorrectors = {\r\n    borderRadius: {\r\n        ...correctBorderRadius,\r\n        applyTo: [\r\n            \"borderTopLeftRadius\",\r\n            \"borderTopRightRadius\",\r\n            \"borderBottomLeftRadius\",\r\n            \"borderBottomRightRadius\",\r\n        ],\r\n    },\r\n    borderTopLeftRadius: correctBorderRadius,\r\n    borderTopRightRadius: correctBorderRadius,\r\n    borderBottomLeftRadius: correctBorderRadius,\r\n    borderBottomRightRadius: correctBorderRadius,\r\n    boxShadow: correctBoxShadow,\r\n};\r\n\r\nexport { MeasureLayout };\r\n","const compareByDepth = (a, b) => a.depth - b.depth;\r\n\r\nexport { compareByDepth };\r\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\r\nimport { compareByDepth } from './compare-by-depth.mjs';\r\n\r\nclass FlatTree {\r\n    constructor() {\r\n        this.children = [];\r\n        this.isDirty = false;\r\n    }\r\n    add(child) {\r\n        addUniqueItem(this.children, child);\r\n        this.isDirty = true;\r\n    }\r\n    remove(child) {\r\n        removeItem(this.children, child);\r\n        this.isDirty = true;\r\n    }\r\n    forEach(callback) {\r\n        this.isDirty && this.children.sort(compareByDepth);\r\n        this.isDirty = false;\r\n        this.children.forEach(callback);\r\n    }\r\n}\r\n\r\nexport { FlatTree };\r\n","import { progress, noop } from 'motion-utils';\r\nimport { circOut } from '../../easing/circ.mjs';\r\nimport { mixNumber } from '../../utils/mix/number.mjs';\r\nimport { percent, px } from '../../value/types/numbers/units.mjs';\r\n\r\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\r\nconst numBorders = borders.length;\r\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\r\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\r\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\r\n    if (shouldCrossfadeOpacity) {\r\n        target.opacity = mixNumber(0, \r\n        // TODO Reinstate this if only child\r\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\r\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\r\n    }\r\n    else if (isOnlyMember) {\r\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\r\n    }\r\n    /**\r\n     * Mix border radius\r\n     */\r\n    for (let i = 0; i < numBorders; i++) {\r\n        const borderLabel = `border${borders[i]}Radius`;\r\n        let followRadius = getRadius(follow, borderLabel);\r\n        let leadRadius = getRadius(lead, borderLabel);\r\n        if (followRadius === undefined && leadRadius === undefined)\r\n            continue;\r\n        followRadius || (followRadius = 0);\r\n        leadRadius || (leadRadius = 0);\r\n        const canMix = followRadius === 0 ||\r\n            leadRadius === 0 ||\r\n            isPx(followRadius) === isPx(leadRadius);\r\n        if (canMix) {\r\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\r\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\r\n                target[borderLabel] += \"%\";\r\n            }\r\n        }\r\n        else {\r\n            target[borderLabel] = leadRadius;\r\n        }\r\n    }\r\n    /**\r\n     * Mix rotation\r\n     */\r\n    if (follow.rotate || lead.rotate) {\r\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\r\n    }\r\n}\r\nfunction getRadius(values, radiusName) {\r\n    return values[radiusName] !== undefined\r\n        ? values[radiusName]\r\n        : values.borderRadius;\r\n}\r\n// /**\r\n//  * We only want to mix the background color if there's a follow element\r\n//  * that we're not crossfading opacity between. For instance with switch\r\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\r\n//  * element being animated but also cuts down on the number of paints triggered\r\n//  * for elements where opacity is doing that work for us.\r\n//  */\r\n// if (\r\n//     !hasFollowElement &&\r\n//     latestLeadValues.backgroundColor &&\r\n//     latestFollowValues.backgroundColor\r\n// ) {\r\n//     /**\r\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\r\n//      * We could probably create a mixer that runs at the start of the animation but\r\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\r\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\r\n//      */\r\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\r\n//         latestFollowValues.backgroundColor as string,\r\n//         latestLeadValues.backgroundColor as string\r\n//     )(p)\r\n// }\r\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\r\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\r\nfunction compress(min, max, easing) {\r\n    return (p) => {\r\n        // Could replace ifs with clamp\r\n        if (p < min)\r\n            return 0;\r\n        if (p > max)\r\n            return 1;\r\n        return easing(progress(min, max, p));\r\n    };\r\n}\r\n\r\nexport { mixValues };\r\n","/**\r\n * Reset an axis to the provided origin box.\r\n *\r\n * This is a mutative operation.\r\n */\r\nfunction copyAxisInto(axis, originAxis) {\r\n    axis.min = originAxis.min;\r\n    axis.max = originAxis.max;\r\n}\r\n/**\r\n * Reset a box to the provided origin box.\r\n *\r\n * This is a mutative operation.\r\n */\r\nfunction copyBoxInto(box, originBox) {\r\n    copyAxisInto(box.x, originBox.x);\r\n    copyAxisInto(box.y, originBox.y);\r\n}\r\n/**\r\n * Reset a delta to the provided origin box.\r\n *\r\n * This is a mutative operation.\r\n */\r\nfunction copyAxisDeltaInto(delta, originDelta) {\r\n    delta.translate = originDelta.translate;\r\n    delta.scale = originDelta.scale;\r\n    delta.originPoint = originDelta.originPoint;\r\n    delta.origin = originDelta.origin;\r\n}\r\n\r\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\r\n","import { mixNumber } from '../../utils/mix/number.mjs';\r\nimport { percent } from '../../value/types/numbers/units.mjs';\r\nimport { scalePoint } from './delta-apply.mjs';\r\n\r\n/**\r\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\r\n */\r\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\r\n    point -= translate;\r\n    point = scalePoint(point, 1 / scale, originPoint);\r\n    if (boxScale !== undefined) {\r\n        point = scalePoint(point, 1 / boxScale, originPoint);\r\n    }\r\n    return point;\r\n}\r\n/**\r\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\r\n */\r\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\r\n    if (percent.test(translate)) {\r\n        translate = parseFloat(translate);\r\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\r\n        translate = relativeProgress - sourceAxis.min;\r\n    }\r\n    if (typeof translate !== \"number\")\r\n        return;\r\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\r\n    if (axis === originAxis)\r\n        originPoint -= translate;\r\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\r\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\r\n}\r\n/**\r\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\r\n * and acts as a bridge between motion values and removeAxisDelta\r\n */\r\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\r\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\r\n}\r\n/**\r\n * The names of the motion values we want to apply as translation, scale and origin.\r\n */\r\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\r\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\r\n/**\r\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\r\n * and acts as a bridge between motion values and removeAxisDelta\r\n */\r\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\r\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\r\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\r\n}\r\n\r\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\r\n","import { calcLength } from './delta-calc.mjs';\r\n\r\nfunction isAxisDeltaZero(delta) {\r\n    return delta.translate === 0 && delta.scale === 1;\r\n}\r\nfunction isDeltaZero(delta) {\r\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\r\n}\r\nfunction axisEquals(a, b) {\r\n    return a.min === b.min && a.max === b.max;\r\n}\r\nfunction boxEquals(a, b) {\r\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\r\n}\r\nfunction axisEqualsRounded(a, b) {\r\n    return (Math.round(a.min) === Math.round(b.min) &&\r\n        Math.round(a.max) === Math.round(b.max));\r\n}\r\nfunction boxEqualsRounded(a, b) {\r\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\r\n}\r\nfunction aspectRatio(box) {\r\n    return calcLength(box.x) / calcLength(box.y);\r\n}\r\nfunction axisDeltaEquals(a, b) {\r\n    return (a.translate === b.translate &&\r\n        a.scale === b.scale &&\r\n        a.originPoint === b.originPoint);\r\n}\r\n\r\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\r\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\r\n\r\nclass NodeStack {\r\n    constructor() {\r\n        this.members = [];\r\n    }\r\n    add(node) {\r\n        addUniqueItem(this.members, node);\r\n        node.scheduleRender();\r\n    }\r\n    remove(node) {\r\n        removeItem(this.members, node);\r\n        if (node === this.prevLead) {\r\n            this.prevLead = undefined;\r\n        }\r\n        if (node === this.lead) {\r\n            const prevLead = this.members[this.members.length - 1];\r\n            if (prevLead) {\r\n                this.promote(prevLead);\r\n            }\r\n        }\r\n    }\r\n    relegate(node) {\r\n        const indexOfNode = this.members.findIndex((member) => node === member);\r\n        if (indexOfNode === 0)\r\n            return false;\r\n        /**\r\n         * Find the next projection node that is present\r\n         */\r\n        let prevLead;\r\n        for (let i = indexOfNode; i >= 0; i--) {\r\n            const member = this.members[i];\r\n            if (member.isPresent !== false) {\r\n                prevLead = member;\r\n                break;\r\n            }\r\n        }\r\n        if (prevLead) {\r\n            this.promote(prevLead);\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n    promote(node, preserveFollowOpacity) {\r\n        const prevLead = this.lead;\r\n        if (node === prevLead)\r\n            return;\r\n        this.prevLead = prevLead;\r\n        this.lead = node;\r\n        node.show();\r\n        if (prevLead) {\r\n            prevLead.instance && prevLead.scheduleRender();\r\n            node.scheduleRender();\r\n            node.resumeFrom = prevLead;\r\n            if (preserveFollowOpacity) {\r\n                node.resumeFrom.preserveOpacity = true;\r\n            }\r\n            if (prevLead.snapshot) {\r\n                node.snapshot = prevLead.snapshot;\r\n                node.snapshot.latestValues =\r\n                    prevLead.animationValues || prevLead.latestValues;\r\n            }\r\n            if (node.root && node.root.isUpdating) {\r\n                node.isLayoutDirty = true;\r\n            }\r\n            const { crossfade } = node.options;\r\n            if (crossfade === false) {\r\n                prevLead.hide();\r\n            }\r\n            /**\r\n             * TODO:\r\n             *   - Test border radius when previous node was deleted\r\n             *   - boxShadow mixing\r\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\r\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\r\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\r\n             * ---\r\n             *   - Crossfade opacity of root nodes\r\n             *   - layoutId changes after animation\r\n             *   - layoutId changes mid animation\r\n             */\r\n        }\r\n    }\r\n    exitAnimationComplete() {\r\n        this.members.forEach((node) => {\r\n            const { options, resumingFrom } = node;\r\n            options.onExitComplete && options.onExitComplete();\r\n            if (resumingFrom) {\r\n                resumingFrom.options.onExitComplete &&\r\n                    resumingFrom.options.onExitComplete();\r\n            }\r\n        });\r\n    }\r\n    scheduleRender() {\r\n        this.members.forEach((node) => {\r\n            node.instance && node.scheduleRender(false);\r\n        });\r\n    }\r\n    /**\r\n     * Clear any leads that have been removed this render to prevent them from being\r\n     * used in future animations and to prevent memory leaks\r\n     */\r\n    removeLeadSnapshot() {\r\n        if (this.lead && this.lead.snapshot) {\r\n            this.lead.snapshot = undefined;\r\n        }\r\n    }\r\n}\r\n\r\nexport { NodeStack };\r\n","import { getValueTransition } from 'motion-dom';\r\nimport { noop } from 'motion-utils';\r\nimport { animateSingleValue } from '../../animation/animate/single-value.mjs';\r\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\r\nimport { cancelFrame, frameData, frameSteps, frame } from '../../frameloop/frame.mjs';\r\nimport { microtask } from '../../frameloop/microtask.mjs';\r\nimport { time } from '../../frameloop/sync-time.mjs';\r\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\r\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\r\nimport { clamp } from '../../utils/clamp.mjs';\r\nimport { delay } from '../../utils/delay.mjs';\r\nimport { mixNumber } from '../../utils/mix/number.mjs';\r\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\r\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\r\nimport { mixValues } from '../animation/mix-values.mjs';\r\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\r\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\r\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\r\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\r\nimport { createBox, createDelta } from '../geometry/models.mjs';\r\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\r\nimport { NodeStack } from '../shared/stack.mjs';\r\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\r\nimport { buildProjectionTransform } from '../styles/transform.mjs';\r\nimport { eachAxis } from '../utils/each-axis.mjs';\r\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\r\nimport { globalProjectionState } from './state.mjs';\r\n\r\nconst metrics = {\r\n    type: \"projectionFrame\",\r\n    totalNodes: 0,\r\n    resolvedTargetDeltas: 0,\r\n    recalculatedProjection: 0,\r\n};\r\nconst isDebug = typeof window !== \"undefined\" && window.MotionDebug !== undefined;\r\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\r\nconst hiddenVisibility = { visibility: \"hidden\" };\r\n/**\r\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\r\n * which has a noticeable difference in spring animations\r\n */\r\nconst animationTarget = 1000;\r\nlet id = 0;\r\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\r\n    const { latestValues } = visualElement;\r\n    // Record the distorting transform and then temporarily set it to 0\r\n    if (latestValues[key]) {\r\n        values[key] = latestValues[key];\r\n        visualElement.setStaticValue(key, 0);\r\n        if (sharedAnimationValues) {\r\n            sharedAnimationValues[key] = 0;\r\n        }\r\n    }\r\n}\r\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\r\n    projectionNode.hasCheckedOptimisedAppear = true;\r\n    if (projectionNode.root === projectionNode)\r\n        return;\r\n    const { visualElement } = projectionNode.options;\r\n    if (!visualElement)\r\n        return;\r\n    const appearId = getOptimisedAppearId(visualElement);\r\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\r\n        const { layout, layoutId } = projectionNode.options;\r\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\r\n    }\r\n    const { parent } = projectionNode;\r\n    if (parent && !parent.hasCheckedOptimisedAppear) {\r\n        cancelTreeOptimisedTransformAnimations(parent);\r\n    }\r\n}\r\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\r\n    return class ProjectionNode {\r\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\r\n            /**\r\n             * A unique ID generated for every projection node.\r\n             */\r\n            this.id = id++;\r\n            /**\r\n             * An id that represents a unique session instigated by startUpdate.\r\n             */\r\n            this.animationId = 0;\r\n            /**\r\n             * A Set containing all this component's children. This is used to iterate\r\n             * through the children.\r\n             *\r\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\r\n             */\r\n            this.children = new Set();\r\n            /**\r\n             * Options for the node. We use this to configure what kind of layout animations\r\n             * we should perform (if any).\r\n             */\r\n            this.options = {};\r\n            /**\r\n             * We use this to detect when its safe to shut down part of a projection tree.\r\n             * We have to keep projecting children for scale correction and relative projection\r\n             * until all their parents stop performing layout animations.\r\n             */\r\n            this.isTreeAnimating = false;\r\n            this.isAnimationBlocked = false;\r\n            /**\r\n             * Flag to true if we think this layout has been changed. We can't always know this,\r\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\r\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\r\n             * and if one node is dirtied, they all are.\r\n             */\r\n            this.isLayoutDirty = false;\r\n            /**\r\n             * Flag to true if we think the projection calculations for this node needs\r\n             * recalculating as a result of an updated transform or layout animation.\r\n             */\r\n            this.isProjectionDirty = false;\r\n            /**\r\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\r\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\r\n             */\r\n            this.isSharedProjectionDirty = false;\r\n            /**\r\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\r\n             * respected by shared nodes.\r\n             */\r\n            this.isTransformDirty = false;\r\n            /**\r\n             * Block layout updates for instant layout transitions throughout the tree.\r\n             */\r\n            this.updateManuallyBlocked = false;\r\n            this.updateBlockedByResize = false;\r\n            /**\r\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\r\n             * call.\r\n             */\r\n            this.isUpdating = false;\r\n            /**\r\n             * If this is an SVG element we currently disable projection transforms\r\n             */\r\n            this.isSVG = false;\r\n            /**\r\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\r\n             * its projection styles.\r\n             */\r\n            this.needsReset = false;\r\n            /**\r\n             * Flags whether this node should have its transform reset prior to measuring.\r\n             */\r\n            this.shouldResetTransform = false;\r\n            /**\r\n             * Store whether this node has been checked for optimised appear animations. As\r\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\r\n             * this makes sure we only check each path once, stopping at nodes that\r\n             * have already been checked.\r\n             */\r\n            this.hasCheckedOptimisedAppear = false;\r\n            /**\r\n             * An object representing the calculated contextual/accumulated/tree scale.\r\n             * This will be used to scale calculcated projection transforms, as these are\r\n             * calculated in screen-space but need to be scaled for elements to layoutly\r\n             * make it to their calculated destinations.\r\n             *\r\n             * TODO: Lazy-init\r\n             */\r\n            this.treeScale = { x: 1, y: 1 };\r\n            /**\r\n             *\r\n             */\r\n            this.eventHandlers = new Map();\r\n            this.hasTreeAnimated = false;\r\n            // Note: Currently only running on root node\r\n            this.updateScheduled = false;\r\n            this.scheduleUpdate = () => this.update();\r\n            this.projectionUpdateScheduled = false;\r\n            this.checkUpdateFailed = () => {\r\n                if (this.isUpdating) {\r\n                    this.isUpdating = false;\r\n                    this.clearAllSnapshots();\r\n                }\r\n            };\r\n            /**\r\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\r\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\r\n             * the next step.\r\n             */\r\n            this.updateProjection = () => {\r\n                this.projectionUpdateScheduled = false;\r\n                /**\r\n                 * Reset debug counts. Manually resetting rather than creating a new\r\n                 * object each frame.\r\n                 */\r\n                if (isDebug) {\r\n                    metrics.totalNodes =\r\n                        metrics.resolvedTargetDeltas =\r\n                            metrics.recalculatedProjection =\r\n                                0;\r\n                }\r\n                this.nodes.forEach(propagateDirtyNodes);\r\n                this.nodes.forEach(resolveTargetDelta);\r\n                this.nodes.forEach(calcProjection);\r\n                this.nodes.forEach(cleanDirtyNodes);\r\n                if (isDebug) {\r\n                    window.MotionDebug.record(metrics);\r\n                }\r\n            };\r\n            /**\r\n             * Frame calculations\r\n             */\r\n            this.resolvedRelativeTargetAt = 0.0;\r\n            this.hasProjected = false;\r\n            this.isVisible = true;\r\n            this.animationProgress = 0;\r\n            /**\r\n             * Shared layout\r\n             */\r\n            // TODO Only running on root node\r\n            this.sharedNodes = new Map();\r\n            this.latestValues = latestValues;\r\n            this.root = parent ? parent.root || parent : this;\r\n            this.path = parent ? [...parent.path, parent] : [];\r\n            this.parent = parent;\r\n            this.depth = parent ? parent.depth + 1 : 0;\r\n            for (let i = 0; i < this.path.length; i++) {\r\n                this.path[i].shouldResetTransform = true;\r\n            }\r\n            if (this.root === this)\r\n                this.nodes = new FlatTree();\r\n        }\r\n        addEventListener(name, handler) {\r\n            if (!this.eventHandlers.has(name)) {\r\n                this.eventHandlers.set(name, new SubscriptionManager());\r\n            }\r\n            return this.eventHandlers.get(name).add(handler);\r\n        }\r\n        notifyListeners(name, ...args) {\r\n            const subscriptionManager = this.eventHandlers.get(name);\r\n            subscriptionManager && subscriptionManager.notify(...args);\r\n        }\r\n        hasListeners(name) {\r\n            return this.eventHandlers.has(name);\r\n        }\r\n        /**\r\n         * Lifecycles\r\n         */\r\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\r\n            if (this.instance)\r\n                return;\r\n            this.isSVG = isSVGElement(instance);\r\n            this.instance = instance;\r\n            const { layoutId, layout, visualElement } = this.options;\r\n            if (visualElement && !visualElement.current) {\r\n                visualElement.mount(instance);\r\n            }\r\n            this.root.nodes.add(this);\r\n            this.parent && this.parent.children.add(this);\r\n            if (isLayoutDirty && (layout || layoutId)) {\r\n                this.isLayoutDirty = true;\r\n            }\r\n            if (attachResizeListener) {\r\n                let cancelDelay;\r\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\r\n                attachResizeListener(instance, () => {\r\n                    this.root.updateBlockedByResize = true;\r\n                    cancelDelay && cancelDelay();\r\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\r\n                    if (globalProjectionState.hasAnimatedSinceResize) {\r\n                        globalProjectionState.hasAnimatedSinceResize = false;\r\n                        this.nodes.forEach(finishAnimation);\r\n                    }\r\n                });\r\n            }\r\n            if (layoutId) {\r\n                this.root.registerSharedNode(layoutId, this);\r\n            }\r\n            // Only register the handler if it requires layout animation\r\n            if (this.options.animate !== false &&\r\n                visualElement &&\r\n                (layoutId || layout)) {\r\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\r\n                    if (this.isTreeAnimationBlocked()) {\r\n                        this.target = undefined;\r\n                        this.relativeTarget = undefined;\r\n                        return;\r\n                    }\r\n                    // TODO: Check here if an animation exists\r\n                    const layoutTransition = this.options.transition ||\r\n                        visualElement.getDefaultTransition() ||\r\n                        defaultLayoutTransition;\r\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\r\n                    /**\r\n                     * The target layout of the element might stay the same,\r\n                     * but its position relative to its parent has changed.\r\n                     */\r\n                    const targetChanged = !this.targetLayout ||\r\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\r\n                        hasRelativeTargetChanged;\r\n                    /**\r\n                     * If the layout hasn't seemed to have changed, it might be that the\r\n                     * element is visually in the same place in the document but its position\r\n                     * relative to its parent has indeed changed. So here we check for that.\r\n                     */\r\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\r\n                    if (this.options.layoutRoot ||\r\n                        (this.resumeFrom && this.resumeFrom.instance) ||\r\n                        hasOnlyRelativeTargetChanged ||\r\n                        (hasLayoutChanged &&\r\n                            (targetChanged || !this.currentAnimation))) {\r\n                        if (this.resumeFrom) {\r\n                            this.resumingFrom = this.resumeFrom;\r\n                            this.resumingFrom.resumingFrom = undefined;\r\n                        }\r\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\r\n                        const animationOptions = {\r\n                            ...getValueTransition(layoutTransition, \"layout\"),\r\n                            onPlay: onLayoutAnimationStart,\r\n                            onComplete: onLayoutAnimationComplete,\r\n                        };\r\n                        if (visualElement.shouldReduceMotion ||\r\n                            this.options.layoutRoot) {\r\n                            animationOptions.delay = 0;\r\n                            animationOptions.type = false;\r\n                        }\r\n                        this.startAnimation(animationOptions);\r\n                    }\r\n                    else {\r\n                        /**\r\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\r\n                         * finish it immediately. Otherwise it will be animating from a location\r\n                         * that was probably never commited to screen and look like a jumpy box.\r\n                         */\r\n                        if (!hasLayoutChanged) {\r\n                            finishAnimation(this);\r\n                        }\r\n                        if (this.isLead() && this.options.onExitComplete) {\r\n                            this.options.onExitComplete();\r\n                        }\r\n                    }\r\n                    this.targetLayout = newLayout;\r\n                });\r\n            }\r\n        }\r\n        unmount() {\r\n            this.options.layoutId && this.willUpdate();\r\n            this.root.nodes.remove(this);\r\n            const stack = this.getStack();\r\n            stack && stack.remove(this);\r\n            this.parent && this.parent.children.delete(this);\r\n            this.instance = undefined;\r\n            cancelFrame(this.updateProjection);\r\n        }\r\n        // only on the root\r\n        blockUpdate() {\r\n            this.updateManuallyBlocked = true;\r\n        }\r\n        unblockUpdate() {\r\n            this.updateManuallyBlocked = false;\r\n        }\r\n        isUpdateBlocked() {\r\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\r\n        }\r\n        isTreeAnimationBlocked() {\r\n            return (this.isAnimationBlocked ||\r\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\r\n                false);\r\n        }\r\n        // Note: currently only running on root node\r\n        startUpdate() {\r\n            if (this.isUpdateBlocked())\r\n                return;\r\n            this.isUpdating = true;\r\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\r\n            this.animationId++;\r\n        }\r\n        getTransformTemplate() {\r\n            const { visualElement } = this.options;\r\n            return visualElement && visualElement.getProps().transformTemplate;\r\n        }\r\n        willUpdate(shouldNotifyListeners = true) {\r\n            this.root.hasTreeAnimated = true;\r\n            if (this.root.isUpdateBlocked()) {\r\n                this.options.onExitComplete && this.options.onExitComplete();\r\n                return;\r\n            }\r\n            /**\r\n             * If we're running optimised appear animations then these must be\r\n             * cancelled before measuring the DOM. This is so we can measure\r\n             * the true layout of the element rather than the WAAPI animation\r\n             * which will be unaffected by the resetSkewAndRotate step.\r\n             *\r\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\r\n             * between other snapshot reads which will cause unnecessary style recalculations.\r\n             * This has to happen here though, as we don't yet know which nodes will need\r\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\r\n             * if a layout animation measurement is actually going to be affected by them.\r\n             */\r\n            if (window.MotionCancelOptimisedAnimation &&\r\n                !this.hasCheckedOptimisedAppear) {\r\n                cancelTreeOptimisedTransformAnimations(this);\r\n            }\r\n            !this.root.isUpdating && this.root.startUpdate();\r\n            if (this.isLayoutDirty)\r\n                return;\r\n            this.isLayoutDirty = true;\r\n            for (let i = 0; i < this.path.length; i++) {\r\n                const node = this.path[i];\r\n                node.shouldResetTransform = true;\r\n                node.updateScroll(\"snapshot\");\r\n                if (node.options.layoutRoot) {\r\n                    node.willUpdate(false);\r\n                }\r\n            }\r\n            const { layoutId, layout } = this.options;\r\n            if (layoutId === undefined && !layout)\r\n                return;\r\n            const transformTemplate = this.getTransformTemplate();\r\n            this.prevTransformTemplateValue = transformTemplate\r\n                ? transformTemplate(this.latestValues, \"\")\r\n                : undefined;\r\n            this.updateSnapshot();\r\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\r\n        }\r\n        update() {\r\n            this.updateScheduled = false;\r\n            const updateWasBlocked = this.isUpdateBlocked();\r\n            // When doing an instant transition, we skip the layout update,\r\n            // but should still clean up the measurements so that the next\r\n            // snapshot could be taken correctly.\r\n            if (updateWasBlocked) {\r\n                this.unblockUpdate();\r\n                this.clearAllSnapshots();\r\n                this.nodes.forEach(clearMeasurements);\r\n                return;\r\n            }\r\n            if (!this.isUpdating) {\r\n                this.nodes.forEach(clearIsLayoutDirty);\r\n            }\r\n            this.isUpdating = false;\r\n            /**\r\n             * Write\r\n             */\r\n            this.nodes.forEach(resetTransformStyle);\r\n            /**\r\n             * Read ==================\r\n             */\r\n            // Update layout measurements of updated children\r\n            this.nodes.forEach(updateLayout);\r\n            /**\r\n             * Write\r\n             */\r\n            // Notify listeners that the layout is updated\r\n            this.nodes.forEach(notifyLayoutUpdate);\r\n            this.clearAllSnapshots();\r\n            /**\r\n             * Manually flush any pending updates. Ideally\r\n             * we could leave this to the following requestAnimationFrame but this seems\r\n             * to leave a flash of incorrectly styled content.\r\n             */\r\n            const now = time.now();\r\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\r\n            frameData.timestamp = now;\r\n            frameData.isProcessing = true;\r\n            frameSteps.update.process(frameData);\r\n            frameSteps.preRender.process(frameData);\r\n            frameSteps.render.process(frameData);\r\n            frameData.isProcessing = false;\r\n        }\r\n        didUpdate() {\r\n            if (!this.updateScheduled) {\r\n                this.updateScheduled = true;\r\n                microtask.read(this.scheduleUpdate);\r\n            }\r\n        }\r\n        clearAllSnapshots() {\r\n            this.nodes.forEach(clearSnapshot);\r\n            this.sharedNodes.forEach(removeLeadSnapshots);\r\n        }\r\n        scheduleUpdateProjection() {\r\n            if (!this.projectionUpdateScheduled) {\r\n                this.projectionUpdateScheduled = true;\r\n                frame.preRender(this.updateProjection, false, true);\r\n            }\r\n        }\r\n        scheduleCheckAfterUnmount() {\r\n            /**\r\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\r\n             * we manually call didUpdate to give a chance to the siblings to animate.\r\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\r\n             */\r\n            frame.postRender(() => {\r\n                if (this.isLayoutDirty) {\r\n                    this.root.didUpdate();\r\n                }\r\n                else {\r\n                    this.root.checkUpdateFailed();\r\n                }\r\n            });\r\n        }\r\n        /**\r\n         * Update measurements\r\n         */\r\n        updateSnapshot() {\r\n            if (this.snapshot || !this.instance)\r\n                return;\r\n            this.snapshot = this.measure();\r\n        }\r\n        updateLayout() {\r\n            if (!this.instance)\r\n                return;\r\n            // TODO: Incorporate into a forwarded scroll offset\r\n            this.updateScroll();\r\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\r\n                !this.isLayoutDirty) {\r\n                return;\r\n            }\r\n            /**\r\n             * When a node is mounted, it simply resumes from the prevLead's\r\n             * snapshot instead of taking a new one, but the ancestors scroll\r\n             * might have updated while the prevLead is unmounted. We need to\r\n             * update the scroll again to make sure the layout we measure is\r\n             * up to date.\r\n             */\r\n            if (this.resumeFrom && !this.resumeFrom.instance) {\r\n                for (let i = 0; i < this.path.length; i++) {\r\n                    const node = this.path[i];\r\n                    node.updateScroll();\r\n                }\r\n            }\r\n            const prevLayout = this.layout;\r\n            this.layout = this.measure(false);\r\n            this.layoutCorrected = createBox();\r\n            this.isLayoutDirty = false;\r\n            this.projectionDelta = undefined;\r\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\r\n            const { visualElement } = this.options;\r\n            visualElement &&\r\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\r\n        }\r\n        updateScroll(phase = \"measure\") {\r\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\r\n            if (this.scroll &&\r\n                this.scroll.animationId === this.root.animationId &&\r\n                this.scroll.phase === phase) {\r\n                needsMeasurement = false;\r\n            }\r\n            if (needsMeasurement) {\r\n                const isRoot = checkIsScrollRoot(this.instance);\r\n                this.scroll = {\r\n                    animationId: this.root.animationId,\r\n                    phase,\r\n                    isRoot,\r\n                    offset: measureScroll(this.instance),\r\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\r\n                };\r\n            }\r\n        }\r\n        resetTransform() {\r\n            if (!resetTransform)\r\n                return;\r\n            const isResetRequested = this.isLayoutDirty ||\r\n                this.shouldResetTransform ||\r\n                this.options.alwaysMeasureLayout;\r\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\r\n            const transformTemplate = this.getTransformTemplate();\r\n            const transformTemplateValue = transformTemplate\r\n                ? transformTemplate(this.latestValues, \"\")\r\n                : undefined;\r\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\r\n            if (isResetRequested &&\r\n                (hasProjection ||\r\n                    hasTransform(this.latestValues) ||\r\n                    transformTemplateHasChanged)) {\r\n                resetTransform(this.instance, transformTemplateValue);\r\n                this.shouldResetTransform = false;\r\n                this.scheduleRender();\r\n            }\r\n        }\r\n        measure(removeTransform = true) {\r\n            const pageBox = this.measurePageBox();\r\n            let layoutBox = this.removeElementScroll(pageBox);\r\n            /**\r\n             * Measurements taken during the pre-render stage\r\n             * still have transforms applied so we remove them\r\n             * via calculation.\r\n             */\r\n            if (removeTransform) {\r\n                layoutBox = this.removeTransform(layoutBox);\r\n            }\r\n            roundBox(layoutBox);\r\n            return {\r\n                animationId: this.root.animationId,\r\n                measuredBox: pageBox,\r\n                layoutBox,\r\n                latestValues: {},\r\n                source: this.id,\r\n            };\r\n        }\r\n        measurePageBox() {\r\n            var _a;\r\n            const { visualElement } = this.options;\r\n            if (!visualElement)\r\n                return createBox();\r\n            const box = visualElement.measureViewportBox();\r\n            const wasInScrollRoot = ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) || this.path.some(checkNodeWasScrollRoot);\r\n            if (!wasInScrollRoot) {\r\n                // Remove viewport scroll to give page-relative coordinates\r\n                const { scroll } = this.root;\r\n                if (scroll) {\r\n                    translateAxis(box.x, scroll.offset.x);\r\n                    translateAxis(box.y, scroll.offset.y);\r\n                }\r\n            }\r\n            return box;\r\n        }\r\n        removeElementScroll(box) {\r\n            var _a;\r\n            const boxWithoutScroll = createBox();\r\n            copyBoxInto(boxWithoutScroll, box);\r\n            if ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) {\r\n                return boxWithoutScroll;\r\n            }\r\n            /**\r\n             * Performance TODO: Keep a cumulative scroll offset down the tree\r\n             * rather than loop back up the path.\r\n             */\r\n            for (let i = 0; i < this.path.length; i++) {\r\n                const node = this.path[i];\r\n                const { scroll, options } = node;\r\n                if (node !== this.root && scroll && options.layoutScroll) {\r\n                    /**\r\n                     * If this is a new scroll root, we want to remove all previous scrolls\r\n                     * from the viewport box.\r\n                     */\r\n                    if (scroll.wasRoot) {\r\n                        copyBoxInto(boxWithoutScroll, box);\r\n                    }\r\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\r\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\r\n                }\r\n            }\r\n            return boxWithoutScroll;\r\n        }\r\n        applyTransform(box, transformOnly = false) {\r\n            const withTransforms = createBox();\r\n            copyBoxInto(withTransforms, box);\r\n            for (let i = 0; i < this.path.length; i++) {\r\n                const node = this.path[i];\r\n                if (!transformOnly &&\r\n                    node.options.layoutScroll &&\r\n                    node.scroll &&\r\n                    node !== node.root) {\r\n                    transformBox(withTransforms, {\r\n                        x: -node.scroll.offset.x,\r\n                        y: -node.scroll.offset.y,\r\n                    });\r\n                }\r\n                if (!hasTransform(node.latestValues))\r\n                    continue;\r\n                transformBox(withTransforms, node.latestValues);\r\n            }\r\n            if (hasTransform(this.latestValues)) {\r\n                transformBox(withTransforms, this.latestValues);\r\n            }\r\n            return withTransforms;\r\n        }\r\n        removeTransform(box) {\r\n            const boxWithoutTransform = createBox();\r\n            copyBoxInto(boxWithoutTransform, box);\r\n            for (let i = 0; i < this.path.length; i++) {\r\n                const node = this.path[i];\r\n                if (!node.instance)\r\n                    continue;\r\n                if (!hasTransform(node.latestValues))\r\n                    continue;\r\n                hasScale(node.latestValues) && node.updateSnapshot();\r\n                const sourceBox = createBox();\r\n                const nodeBox = node.measurePageBox();\r\n                copyBoxInto(sourceBox, nodeBox);\r\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\r\n            }\r\n            if (hasTransform(this.latestValues)) {\r\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\r\n            }\r\n            return boxWithoutTransform;\r\n        }\r\n        setTargetDelta(delta) {\r\n            this.targetDelta = delta;\r\n            this.root.scheduleUpdateProjection();\r\n            this.isProjectionDirty = true;\r\n        }\r\n        setOptions(options) {\r\n            this.options = {\r\n                ...this.options,\r\n                ...options,\r\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\r\n            };\r\n        }\r\n        clearMeasurements() {\r\n            this.scroll = undefined;\r\n            this.layout = undefined;\r\n            this.snapshot = undefined;\r\n            this.prevTransformTemplateValue = undefined;\r\n            this.targetDelta = undefined;\r\n            this.target = undefined;\r\n            this.isLayoutDirty = false;\r\n        }\r\n        forceRelativeParentToResolveTarget() {\r\n            if (!this.relativeParent)\r\n                return;\r\n            /**\r\n             * If the parent target isn't up-to-date, force it to update.\r\n             * This is an unfortunate de-optimisation as it means any updating relative\r\n             * projection will cause all the relative parents to recalculate back\r\n             * up the tree.\r\n             */\r\n            if (this.relativeParent.resolvedRelativeTargetAt !==\r\n                frameData.timestamp) {\r\n                this.relativeParent.resolveTargetDelta(true);\r\n            }\r\n        }\r\n        resolveTargetDelta(forceRecalculation = false) {\r\n            var _a;\r\n            /**\r\n             * Once the dirty status of nodes has been spread through the tree, we also\r\n             * need to check if we have a shared node of a different depth that has itself\r\n             * been dirtied.\r\n             */\r\n            const lead = this.getLead();\r\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\r\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\r\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\r\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\r\n            /**\r\n             * We don't use transform for this step of processing so we don't\r\n             * need to check whether any nodes have changed transform.\r\n             */\r\n            const canSkip = !(forceRecalculation ||\r\n                (isShared && this.isSharedProjectionDirty) ||\r\n                this.isProjectionDirty ||\r\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\r\n                this.attemptToResolveRelativeTarget ||\r\n                this.root.updateBlockedByResize);\r\n            if (canSkip)\r\n                return;\r\n            const { layout, layoutId } = this.options;\r\n            /**\r\n             * If we have no layout, we can't perform projection, so early return\r\n             */\r\n            if (!this.layout || !(layout || layoutId))\r\n                return;\r\n            this.resolvedRelativeTargetAt = frameData.timestamp;\r\n            /**\r\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\r\n             * a relativeParent. This will allow a component to perform scale correction\r\n             * even if no animation has started.\r\n             */\r\n            if (!this.targetDelta && !this.relativeTarget) {\r\n                const relativeParent = this.getClosestProjectingParent();\r\n                if (relativeParent &&\r\n                    relativeParent.layout &&\r\n                    this.animationProgress !== 1) {\r\n                    this.relativeParent = relativeParent;\r\n                    this.forceRelativeParentToResolveTarget();\r\n                    this.relativeTarget = createBox();\r\n                    this.relativeTargetOrigin = createBox();\r\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\r\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\r\n                }\r\n                else {\r\n                    this.relativeParent = this.relativeTarget = undefined;\r\n                }\r\n            }\r\n            /**\r\n             * If we have no relative target or no target delta our target isn't valid\r\n             * for this frame.\r\n             */\r\n            if (!this.relativeTarget && !this.targetDelta)\r\n                return;\r\n            /**\r\n             * Lazy-init target data structure\r\n             */\r\n            if (!this.target) {\r\n                this.target = createBox();\r\n                this.targetWithTransforms = createBox();\r\n            }\r\n            /**\r\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\r\n             */\r\n            if (this.relativeTarget &&\r\n                this.relativeTargetOrigin &&\r\n                this.relativeParent &&\r\n                this.relativeParent.target) {\r\n                this.forceRelativeParentToResolveTarget();\r\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\r\n                /**\r\n                 * If we've only got a targetDelta, resolve it into a target\r\n                 */\r\n            }\r\n            else if (this.targetDelta) {\r\n                if (Boolean(this.resumingFrom)) {\r\n                    // TODO: This is creating a new object every frame\r\n                    this.target = this.applyTransform(this.layout.layoutBox);\r\n                }\r\n                else {\r\n                    copyBoxInto(this.target, this.layout.layoutBox);\r\n                }\r\n                applyBoxDelta(this.target, this.targetDelta);\r\n            }\r\n            else {\r\n                /**\r\n                 * If no target, use own layout as target\r\n                 */\r\n                copyBoxInto(this.target, this.layout.layoutBox);\r\n            }\r\n            /**\r\n             * If we've been told to attempt to resolve a relative target, do so.\r\n             */\r\n            if (this.attemptToResolveRelativeTarget) {\r\n                this.attemptToResolveRelativeTarget = false;\r\n                const relativeParent = this.getClosestProjectingParent();\r\n                if (relativeParent &&\r\n                    Boolean(relativeParent.resumingFrom) ===\r\n                        Boolean(this.resumingFrom) &&\r\n                    !relativeParent.options.layoutScroll &&\r\n                    relativeParent.target &&\r\n                    this.animationProgress !== 1) {\r\n                    this.relativeParent = relativeParent;\r\n                    this.forceRelativeParentToResolveTarget();\r\n                    this.relativeTarget = createBox();\r\n                    this.relativeTargetOrigin = createBox();\r\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\r\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\r\n                }\r\n                else {\r\n                    this.relativeParent = this.relativeTarget = undefined;\r\n                }\r\n            }\r\n            /**\r\n             * Increase debug counter for resolved target deltas\r\n             */\r\n            if (isDebug) {\r\n                metrics.resolvedTargetDeltas++;\r\n            }\r\n        }\r\n        getClosestProjectingParent() {\r\n            if (!this.parent ||\r\n                hasScale(this.parent.latestValues) ||\r\n                has2DTranslate(this.parent.latestValues)) {\r\n                return undefined;\r\n            }\r\n            if (this.parent.isProjecting()) {\r\n                return this.parent;\r\n            }\r\n            else {\r\n                return this.parent.getClosestProjectingParent();\r\n            }\r\n        }\r\n        isProjecting() {\r\n            return Boolean((this.relativeTarget ||\r\n                this.targetDelta ||\r\n                this.options.layoutRoot) &&\r\n                this.layout);\r\n        }\r\n        calcProjection() {\r\n            var _a;\r\n            const lead = this.getLead();\r\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\r\n            let canSkip = true;\r\n            /**\r\n             * If this is a normal layout animation and neither this node nor its nearest projecting\r\n             * is dirty then we can't skip.\r\n             */\r\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\r\n                canSkip = false;\r\n            }\r\n            /**\r\n             * If this is a shared layout animation and this node's shared projection is dirty then\r\n             * we can't skip.\r\n             */\r\n            if (isShared &&\r\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\r\n                canSkip = false;\r\n            }\r\n            /**\r\n             * If we have resolved the target this frame we must recalculate the\r\n             * projection to ensure it visually represents the internal calculations.\r\n             */\r\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\r\n                canSkip = false;\r\n            }\r\n            if (canSkip)\r\n                return;\r\n            const { layout, layoutId } = this.options;\r\n            /**\r\n             * If this section of the tree isn't animating we can\r\n             * delete our target sources for the following frame.\r\n             */\r\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\r\n                this.currentAnimation ||\r\n                this.pendingAnimation);\r\n            if (!this.isTreeAnimating) {\r\n                this.targetDelta = this.relativeTarget = undefined;\r\n            }\r\n            if (!this.layout || !(layout || layoutId))\r\n                return;\r\n            /**\r\n             * Reset the corrected box with the latest values from box, as we're then going\r\n             * to perform mutative operations on it.\r\n             */\r\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\r\n            /**\r\n             * Record previous tree scales before updating.\r\n             */\r\n            const prevTreeScaleX = this.treeScale.x;\r\n            const prevTreeScaleY = this.treeScale.y;\r\n            /**\r\n             * Apply all the parent deltas to this box to produce the corrected box. This\r\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\r\n             */\r\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\r\n            /**\r\n             * If this layer needs to perform scale correction but doesn't have a target,\r\n             * use the layout as the target.\r\n             */\r\n            if (lead.layout &&\r\n                !lead.target &&\r\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\r\n                lead.target = lead.layout.layoutBox;\r\n                lead.targetWithTransforms = createBox();\r\n            }\r\n            const { target } = lead;\r\n            if (!target) {\r\n                /**\r\n                 * If we don't have a target to project into, but we were previously\r\n                 * projecting, we want to remove the stored transform and schedule\r\n                 * a render to ensure the elements reflect the removed transform.\r\n                 */\r\n                if (this.prevProjectionDelta) {\r\n                    this.createProjectionDeltas();\r\n                    this.scheduleRender();\r\n                }\r\n                return;\r\n            }\r\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\r\n                this.createProjectionDeltas();\r\n            }\r\n            else {\r\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\r\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\r\n            }\r\n            /**\r\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\r\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\r\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\r\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\r\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\r\n             * to allow people to choose whether these styles are corrected based on just the\r\n             * layout reprojection or the final bounding box.\r\n             */\r\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\r\n            if (this.treeScale.x !== prevTreeScaleX ||\r\n                this.treeScale.y !== prevTreeScaleY ||\r\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\r\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\r\n                this.hasProjected = true;\r\n                this.scheduleRender();\r\n                this.notifyListeners(\"projectionUpdate\", target);\r\n            }\r\n            /**\r\n             * Increase debug counter for recalculated projections\r\n             */\r\n            if (isDebug) {\r\n                metrics.recalculatedProjection++;\r\n            }\r\n        }\r\n        hide() {\r\n            this.isVisible = false;\r\n            // TODO: Schedule render\r\n        }\r\n        show() {\r\n            this.isVisible = true;\r\n            // TODO: Schedule render\r\n        }\r\n        scheduleRender(notifyAll = true) {\r\n            var _a;\r\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.scheduleRender();\r\n            if (notifyAll) {\r\n                const stack = this.getStack();\r\n                stack && stack.scheduleRender();\r\n            }\r\n            if (this.resumingFrom && !this.resumingFrom.instance) {\r\n                this.resumingFrom = undefined;\r\n            }\r\n        }\r\n        createProjectionDeltas() {\r\n            this.prevProjectionDelta = createDelta();\r\n            this.projectionDelta = createDelta();\r\n            this.projectionDeltaWithTransform = createDelta();\r\n        }\r\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\r\n            const snapshot = this.snapshot;\r\n            const snapshotLatestValues = snapshot\r\n                ? snapshot.latestValues\r\n                : {};\r\n            const mixedValues = { ...this.latestValues };\r\n            const targetDelta = createDelta();\r\n            if (!this.relativeParent ||\r\n                !this.relativeParent.options.layoutRoot) {\r\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\r\n            }\r\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\r\n            const relativeLayout = createBox();\r\n            const snapshotSource = snapshot ? snapshot.source : undefined;\r\n            const layoutSource = this.layout ? this.layout.source : undefined;\r\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\r\n            const stack = this.getStack();\r\n            const isOnlyMember = !stack || stack.members.length <= 1;\r\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\r\n                !isOnlyMember &&\r\n                this.options.crossfade === true &&\r\n                !this.path.some(hasOpacityCrossfade));\r\n            this.animationProgress = 0;\r\n            let prevRelativeTarget;\r\n            this.mixTargetDelta = (latest) => {\r\n                const progress = latest / 1000;\r\n                mixAxisDelta(targetDelta.x, delta.x, progress);\r\n                mixAxisDelta(targetDelta.y, delta.y, progress);\r\n                this.setTargetDelta(targetDelta);\r\n                if (this.relativeTarget &&\r\n                    this.relativeTargetOrigin &&\r\n                    this.layout &&\r\n                    this.relativeParent &&\r\n                    this.relativeParent.layout) {\r\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\r\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\r\n                    /**\r\n                     * If this is an unchanged relative target we can consider the\r\n                     * projection not dirty.\r\n                     */\r\n                    if (prevRelativeTarget &&\r\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\r\n                        this.isProjectionDirty = false;\r\n                    }\r\n                    if (!prevRelativeTarget)\r\n                        prevRelativeTarget = createBox();\r\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\r\n                }\r\n                if (isSharedLayoutAnimation) {\r\n                    this.animationValues = mixedValues;\r\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\r\n                }\r\n                this.root.scheduleUpdateProjection();\r\n                this.scheduleRender();\r\n                this.animationProgress = progress;\r\n            };\r\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\r\n        }\r\n        startAnimation(options) {\r\n            this.notifyListeners(\"animationStart\");\r\n            this.currentAnimation && this.currentAnimation.stop();\r\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\r\n                this.resumingFrom.currentAnimation.stop();\r\n            }\r\n            if (this.pendingAnimation) {\r\n                cancelFrame(this.pendingAnimation);\r\n                this.pendingAnimation = undefined;\r\n            }\r\n            /**\r\n             * Start the animation in the next frame to have a frame with progress 0,\r\n             * where the target is the same as when the animation started, so we can\r\n             * calculate the relative positions correctly for instant transitions.\r\n             */\r\n            this.pendingAnimation = frame.update(() => {\r\n                globalProjectionState.hasAnimatedSinceResize = true;\r\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\r\n                    ...options,\r\n                    onUpdate: (latest) => {\r\n                        this.mixTargetDelta(latest);\r\n                        options.onUpdate && options.onUpdate(latest);\r\n                    },\r\n                    onComplete: () => {\r\n                        options.onComplete && options.onComplete();\r\n                        this.completeAnimation();\r\n                    },\r\n                });\r\n                if (this.resumingFrom) {\r\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\r\n                }\r\n                this.pendingAnimation = undefined;\r\n            });\r\n        }\r\n        completeAnimation() {\r\n            if (this.resumingFrom) {\r\n                this.resumingFrom.currentAnimation = undefined;\r\n                this.resumingFrom.preserveOpacity = undefined;\r\n            }\r\n            const stack = this.getStack();\r\n            stack && stack.exitAnimationComplete();\r\n            this.resumingFrom =\r\n                this.currentAnimation =\r\n                    this.animationValues =\r\n                        undefined;\r\n            this.notifyListeners(\"animationComplete\");\r\n        }\r\n        finishAnimation() {\r\n            if (this.currentAnimation) {\r\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\r\n                this.currentAnimation.stop();\r\n            }\r\n            this.completeAnimation();\r\n        }\r\n        applyTransformsToTarget() {\r\n            const lead = this.getLead();\r\n            let { targetWithTransforms, target, layout, latestValues } = lead;\r\n            if (!targetWithTransforms || !target || !layout)\r\n                return;\r\n            /**\r\n             * If we're only animating position, and this element isn't the lead element,\r\n             * then instead of projecting into the lead box we instead want to calculate\r\n             * a new target that aligns the two boxes but maintains the layout shape.\r\n             */\r\n            if (this !== lead &&\r\n                this.layout &&\r\n                layout &&\r\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\r\n                target = this.target || createBox();\r\n                const xLength = calcLength(this.layout.layoutBox.x);\r\n                target.x.min = lead.target.x.min;\r\n                target.x.max = target.x.min + xLength;\r\n                const yLength = calcLength(this.layout.layoutBox.y);\r\n                target.y.min = lead.target.y.min;\r\n                target.y.max = target.y.min + yLength;\r\n            }\r\n            copyBoxInto(targetWithTransforms, target);\r\n            /**\r\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\r\n             * This is the final box that we will then project into by calculating a transform delta and\r\n             * applying it to the corrected box.\r\n             */\r\n            transformBox(targetWithTransforms, latestValues);\r\n            /**\r\n             * Update the delta between the corrected box and the final target box, after\r\n             * user-set transforms are applied to it. This will be used by the renderer to\r\n             * create a transform style that will reproject the element from its layout layout\r\n             * into the desired bounding box.\r\n             */\r\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\r\n        }\r\n        registerSharedNode(layoutId, node) {\r\n            if (!this.sharedNodes.has(layoutId)) {\r\n                this.sharedNodes.set(layoutId, new NodeStack());\r\n            }\r\n            const stack = this.sharedNodes.get(layoutId);\r\n            stack.add(node);\r\n            const config = node.options.initialPromotionConfig;\r\n            node.promote({\r\n                transition: config ? config.transition : undefined,\r\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\r\n                    ? config.shouldPreserveFollowOpacity(node)\r\n                    : undefined,\r\n            });\r\n        }\r\n        isLead() {\r\n            const stack = this.getStack();\r\n            return stack ? stack.lead === this : true;\r\n        }\r\n        getLead() {\r\n            var _a;\r\n            const { layoutId } = this.options;\r\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\r\n        }\r\n        getPrevLead() {\r\n            var _a;\r\n            const { layoutId } = this.options;\r\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\r\n        }\r\n        getStack() {\r\n            const { layoutId } = this.options;\r\n            if (layoutId)\r\n                return this.root.sharedNodes.get(layoutId);\r\n        }\r\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\r\n            const stack = this.getStack();\r\n            if (stack)\r\n                stack.promote(this, preserveFollowOpacity);\r\n            if (needsReset) {\r\n                this.projectionDelta = undefined;\r\n                this.needsReset = true;\r\n            }\r\n            if (transition)\r\n                this.setOptions({ transition });\r\n        }\r\n        relegate() {\r\n            const stack = this.getStack();\r\n            if (stack) {\r\n                return stack.relegate(this);\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n        resetSkewAndRotation() {\r\n            const { visualElement } = this.options;\r\n            if (!visualElement)\r\n                return;\r\n            // If there's no detected skew or rotation values, we can early return without a forced render.\r\n            let hasDistortingTransform = false;\r\n            /**\r\n             * An unrolled check for rotation values. Most elements don't have any rotation and\r\n             * skipping the nested loop and new object creation is 50% faster.\r\n             */\r\n            const { latestValues } = visualElement;\r\n            if (latestValues.z ||\r\n                latestValues.rotate ||\r\n                latestValues.rotateX ||\r\n                latestValues.rotateY ||\r\n                latestValues.rotateZ ||\r\n                latestValues.skewX ||\r\n                latestValues.skewY) {\r\n                hasDistortingTransform = true;\r\n            }\r\n            // If there's no distorting values, we don't need to do any more.\r\n            if (!hasDistortingTransform)\r\n                return;\r\n            const resetValues = {};\r\n            if (latestValues.z) {\r\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\r\n            }\r\n            // Check the skew and rotate value of all axes and reset to 0\r\n            for (let i = 0; i < transformAxes.length; i++) {\r\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\r\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\r\n            }\r\n            // Force a render of this element to apply the transform with all skews and rotations\r\n            // set to 0.\r\n            visualElement.render();\r\n            // Put back all the values we reset\r\n            for (const key in resetValues) {\r\n                visualElement.setStaticValue(key, resetValues[key]);\r\n                if (this.animationValues) {\r\n                    this.animationValues[key] = resetValues[key];\r\n                }\r\n            }\r\n            // Schedule a render for the next frame. This ensures we won't visually\r\n            // see the element with the reset rotate value applied.\r\n            visualElement.scheduleRender();\r\n        }\r\n        getProjectionStyles(styleProp) {\r\n            var _a, _b;\r\n            if (!this.instance || this.isSVG)\r\n                return undefined;\r\n            if (!this.isVisible) {\r\n                return hiddenVisibility;\r\n            }\r\n            const styles = {\r\n                visibility: \"\",\r\n            };\r\n            const transformTemplate = this.getTransformTemplate();\r\n            if (this.needsReset) {\r\n                this.needsReset = false;\r\n                styles.opacity = \"\";\r\n                styles.pointerEvents =\r\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\r\n                styles.transform = transformTemplate\r\n                    ? transformTemplate(this.latestValues, \"\")\r\n                    : \"none\";\r\n                return styles;\r\n            }\r\n            const lead = this.getLead();\r\n            if (!this.projectionDelta || !this.layout || !lead.target) {\r\n                const emptyStyles = {};\r\n                if (this.options.layoutId) {\r\n                    emptyStyles.opacity =\r\n                        this.latestValues.opacity !== undefined\r\n                            ? this.latestValues.opacity\r\n                            : 1;\r\n                    emptyStyles.pointerEvents =\r\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\r\n                }\r\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\r\n                    emptyStyles.transform = transformTemplate\r\n                        ? transformTemplate({}, \"\")\r\n                        : \"none\";\r\n                    this.hasProjected = false;\r\n                }\r\n                return emptyStyles;\r\n            }\r\n            const valuesToRender = lead.animationValues || lead.latestValues;\r\n            this.applyTransformsToTarget();\r\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\r\n            if (transformTemplate) {\r\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\r\n            }\r\n            const { x, y } = this.projectionDelta;\r\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\r\n            if (lead.animationValues) {\r\n                /**\r\n                 * If the lead component is animating, assign this either the entering/leaving\r\n                 * opacity\r\n                 */\r\n                styles.opacity =\r\n                    lead === this\r\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\r\n                        : this.preserveOpacity\r\n                            ? this.latestValues.opacity\r\n                            : valuesToRender.opacityExit;\r\n            }\r\n            else {\r\n                /**\r\n                 * Or we're not animating at all, set the lead component to its layout\r\n                 * opacity and other components to hidden.\r\n                 */\r\n                styles.opacity =\r\n                    lead === this\r\n                        ? valuesToRender.opacity !== undefined\r\n                            ? valuesToRender.opacity\r\n                            : \"\"\r\n                        : valuesToRender.opacityExit !== undefined\r\n                            ? valuesToRender.opacityExit\r\n                            : 0;\r\n            }\r\n            /**\r\n             * Apply scale correction\r\n             */\r\n            for (const key in scaleCorrectors) {\r\n                if (valuesToRender[key] === undefined)\r\n                    continue;\r\n                const { correct, applyTo } = scaleCorrectors[key];\r\n                /**\r\n                 * Only apply scale correction to the value if we have an\r\n                 * active projection transform. Otherwise these values become\r\n                 * vulnerable to distortion if the element changes size without\r\n                 * a corresponding layout animation.\r\n                 */\r\n                const corrected = styles.transform === \"none\"\r\n                    ? valuesToRender[key]\r\n                    : correct(valuesToRender[key], lead);\r\n                if (applyTo) {\r\n                    const num = applyTo.length;\r\n                    for (let i = 0; i < num; i++) {\r\n                        styles[applyTo[i]] = corrected;\r\n                    }\r\n                }\r\n                else {\r\n                    styles[key] = corrected;\r\n                }\r\n            }\r\n            /**\r\n             * Disable pointer events on follow components. This is to ensure\r\n             * that if a follow component covers a lead component it doesn't block\r\n             * pointer events on the lead.\r\n             */\r\n            if (this.options.layoutId) {\r\n                styles.pointerEvents =\r\n                    lead === this\r\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\r\n                        : \"none\";\r\n            }\r\n            return styles;\r\n        }\r\n        clearSnapshot() {\r\n            this.resumeFrom = this.snapshot = undefined;\r\n        }\r\n        // Only run on root\r\n        resetTree() {\r\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\r\n            this.root.nodes.forEach(clearMeasurements);\r\n            this.root.sharedNodes.clear();\r\n        }\r\n    };\r\n}\r\nfunction updateLayout(node) {\r\n    node.updateLayout();\r\n}\r\nfunction notifyLayoutUpdate(node) {\r\n    var _a;\r\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\r\n    if (node.isLead() &&\r\n        node.layout &&\r\n        snapshot &&\r\n        node.hasListeners(\"didUpdate\")) {\r\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\r\n        const { animationType } = node.options;\r\n        const isShared = snapshot.source !== node.layout.source;\r\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\r\n        // animations for instance if layout=\"size\" and an element has only changed position\r\n        if (animationType === \"size\") {\r\n            eachAxis((axis) => {\r\n                const axisSnapshot = isShared\r\n                    ? snapshot.measuredBox[axis]\r\n                    : snapshot.layoutBox[axis];\r\n                const length = calcLength(axisSnapshot);\r\n                axisSnapshot.min = layout[axis].min;\r\n                axisSnapshot.max = axisSnapshot.min + length;\r\n            });\r\n        }\r\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\r\n            eachAxis((axis) => {\r\n                const axisSnapshot = isShared\r\n                    ? snapshot.measuredBox[axis]\r\n                    : snapshot.layoutBox[axis];\r\n                const length = calcLength(layout[axis]);\r\n                axisSnapshot.max = axisSnapshot.min + length;\r\n                /**\r\n                 * Ensure relative target gets resized and rerendererd\r\n                 */\r\n                if (node.relativeTarget && !node.currentAnimation) {\r\n                    node.isProjectionDirty = true;\r\n                    node.relativeTarget[axis].max =\r\n                        node.relativeTarget[axis].min + length;\r\n                }\r\n            });\r\n        }\r\n        const layoutDelta = createDelta();\r\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\r\n        const visualDelta = createDelta();\r\n        if (isShared) {\r\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\r\n        }\r\n        else {\r\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\r\n        }\r\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\r\n        let hasRelativeTargetChanged = false;\r\n        if (!node.resumeFrom) {\r\n            const relativeParent = node.getClosestProjectingParent();\r\n            /**\r\n             * If the relativeParent is itself resuming from a different element then\r\n             * the relative snapshot is not relavent\r\n             */\r\n            if (relativeParent && !relativeParent.resumeFrom) {\r\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\r\n                if (parentSnapshot && parentLayout) {\r\n                    const relativeSnapshot = createBox();\r\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\r\n                    const relativeLayout = createBox();\r\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\r\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\r\n                        hasRelativeTargetChanged = true;\r\n                    }\r\n                    if (relativeParent.options.layoutRoot) {\r\n                        node.relativeTarget = relativeLayout;\r\n                        node.relativeTargetOrigin = relativeSnapshot;\r\n                        node.relativeParent = relativeParent;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        node.notifyListeners(\"didUpdate\", {\r\n            layout,\r\n            snapshot,\r\n            delta: visualDelta,\r\n            layoutDelta,\r\n            hasLayoutChanged,\r\n            hasRelativeTargetChanged,\r\n        });\r\n    }\r\n    else if (node.isLead()) {\r\n        const { onExitComplete } = node.options;\r\n        onExitComplete && onExitComplete();\r\n    }\r\n    /**\r\n     * Clearing transition\r\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\r\n     * and why we need it at all\r\n     */\r\n    node.options.transition = undefined;\r\n}\r\nfunction propagateDirtyNodes(node) {\r\n    /**\r\n     * Increase debug counter for nodes encountered this frame\r\n     */\r\n    if (isDebug) {\r\n        metrics.totalNodes++;\r\n    }\r\n    if (!node.parent)\r\n        return;\r\n    /**\r\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\r\n     * no performance impact but it will allow the next child that *is* projecting\r\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\r\n     * correcting.\r\n     */\r\n    if (!node.isProjecting()) {\r\n        node.isProjectionDirty = node.parent.isProjectionDirty;\r\n    }\r\n    /**\r\n     * Propagate isSharedProjectionDirty and isTransformDirty\r\n     * throughout the whole tree. A future revision can take another look at\r\n     * this but for safety we still recalcualte shared nodes.\r\n     */\r\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\r\n        node.parent.isProjectionDirty ||\r\n        node.parent.isSharedProjectionDirty));\r\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\r\n}\r\nfunction cleanDirtyNodes(node) {\r\n    node.isProjectionDirty =\r\n        node.isSharedProjectionDirty =\r\n            node.isTransformDirty =\r\n                false;\r\n}\r\nfunction clearSnapshot(node) {\r\n    node.clearSnapshot();\r\n}\r\nfunction clearMeasurements(node) {\r\n    node.clearMeasurements();\r\n}\r\nfunction clearIsLayoutDirty(node) {\r\n    node.isLayoutDirty = false;\r\n}\r\nfunction resetTransformStyle(node) {\r\n    const { visualElement } = node.options;\r\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\r\n        visualElement.notify(\"BeforeLayoutMeasure\");\r\n    }\r\n    node.resetTransform();\r\n}\r\nfunction finishAnimation(node) {\r\n    node.finishAnimation();\r\n    node.targetDelta = node.relativeTarget = node.target = undefined;\r\n    node.isProjectionDirty = true;\r\n}\r\nfunction resolveTargetDelta(node) {\r\n    node.resolveTargetDelta();\r\n}\r\nfunction calcProjection(node) {\r\n    node.calcProjection();\r\n}\r\nfunction resetSkewAndRotation(node) {\r\n    node.resetSkewAndRotation();\r\n}\r\nfunction removeLeadSnapshots(stack) {\r\n    stack.removeLeadSnapshot();\r\n}\r\nfunction mixAxisDelta(output, delta, p) {\r\n    output.translate = mixNumber(delta.translate, 0, p);\r\n    output.scale = mixNumber(delta.scale, 1, p);\r\n    output.origin = delta.origin;\r\n    output.originPoint = delta.originPoint;\r\n}\r\nfunction mixAxis(output, from, to, p) {\r\n    output.min = mixNumber(from.min, to.min, p);\r\n    output.max = mixNumber(from.max, to.max, p);\r\n}\r\nfunction mixBox(output, from, to, p) {\r\n    mixAxis(output.x, from.x, to.x, p);\r\n    mixAxis(output.y, from.y, to.y, p);\r\n}\r\nfunction hasOpacityCrossfade(node) {\r\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\r\n}\r\nconst defaultLayoutTransition = {\r\n    duration: 0.45,\r\n    ease: [0.4, 0, 0.1, 1],\r\n};\r\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\r\n    navigator.userAgent &&\r\n    navigator.userAgent.toLowerCase().includes(string);\r\n/**\r\n * Measured bounding boxes must be rounded in Safari and\r\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\r\n * can appear to jump.\r\n */\r\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\r\n    ? Math.round\r\n    : noop;\r\nfunction roundAxis(axis) {\r\n    // Round to the nearest .5 pixels to support subpixel layouts\r\n    axis.min = roundPoint(axis.min);\r\n    axis.max = roundPoint(axis.max);\r\n}\r\nfunction roundBox(box) {\r\n    roundAxis(box.x);\r\n    roundAxis(box.y);\r\n}\r\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\r\n    return (animationType === \"position\" ||\r\n        (animationType === \"preserve-aspect\" &&\r\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\r\n}\r\nfunction checkNodeWasScrollRoot(node) {\r\n    var _a;\r\n    return node !== node.root && ((_a = node.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot);\r\n}\r\n\r\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\r\n","function isSVGElement(element) {\r\n    return element instanceof SVGElement && element.tagName !== \"svg\";\r\n}\r\n\r\nexport { isSVGElement };\r\n","import { secondsToMilliseconds } from 'motion-utils';\r\nimport { time } from '../frameloop/sync-time.mjs';\r\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\r\n\r\n/**\r\n * Timeout defined in ms\r\n */\r\nfunction delay(callback, timeout) {\r\n    const start = time.now();\r\n    const checkElapsed = ({ timestamp }) => {\r\n        const elapsed = timestamp - start;\r\n        if (elapsed >= timeout) {\r\n            cancelFrame(checkElapsed);\r\n            callback(elapsed - timeout);\r\n        }\r\n    };\r\n    frame.read(checkElapsed, true);\r\n    return () => cancelFrame(checkElapsed);\r\n}\r\nfunction delayInSeconds(callback, timeout) {\r\n    return delay(callback, secondsToMilliseconds(timeout));\r\n}\r\n\r\nexport { delay, delayInSeconds };\r\n","import { motionValue } from '../../value/index.mjs';\r\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\r\nimport { animateMotionValue } from '../interfaces/motion-value.mjs';\r\n\r\nfunction animateSingleValue(value, keyframes, options) {\r\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\r\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\r\n    return motionValue$1.animation;\r\n}\r\n\r\nexport { animateSingleValue };\r\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\r\n    let transform = \"\";\r\n    /**\r\n     * The translations we use to calculate are always relative to the viewport coordinate space.\r\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\r\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\r\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\r\n     */\r\n    const xTranslate = delta.x.translate / treeScale.x;\r\n    const yTranslate = delta.y.translate / treeScale.y;\r\n    const zTranslate = (latestTransform === null || latestTransform === void 0 ? void 0 : latestTransform.z) || 0;\r\n    if (xTranslate || yTranslate || zTranslate) {\r\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\r\n    }\r\n    /**\r\n     * Apply scale correction for the tree transform.\r\n     * This will apply scale to the screen-orientated axes.\r\n     */\r\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\r\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\r\n    }\r\n    if (latestTransform) {\r\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\r\n        if (transformPerspective)\r\n            transform = `perspective(${transformPerspective}px) ${transform}`;\r\n        if (rotate)\r\n            transform += `rotate(${rotate}deg) `;\r\n        if (rotateX)\r\n            transform += `rotateX(${rotateX}deg) `;\r\n        if (rotateY)\r\n            transform += `rotateY(${rotateY}deg) `;\r\n        if (skewX)\r\n            transform += `skewX(${skewX}deg) `;\r\n        if (skewY)\r\n            transform += `skewY(${skewY}deg) `;\r\n    }\r\n    /**\r\n     * Apply scale to match the size of the element to the size we want it.\r\n     * This will apply scale to the element-orientated axes.\r\n     */\r\n    const elementScaleX = delta.x.scale * treeScale.x;\r\n    const elementScaleY = delta.y.scale * treeScale.y;\r\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\r\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\r\n    }\r\n    return transform || \"none\";\r\n}\r\n\r\nexport { buildProjectionTransform };\r\n","import { createProjectionNode } from './create-projection-node.mjs';\r\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\r\n\r\nconst DocumentProjectionNode = createProjectionNode({\r\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\r\n    measureScroll: () => ({\r\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\r\n        y: document.documentElement.scrollTop || document.body.scrollTop,\r\n    }),\r\n    checkIsScrollRoot: () => true,\r\n});\r\n\r\nexport { DocumentProjectionNode };\r\n","import { createProjectionNode } from './create-projection-node.mjs';\r\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\r\n\r\nconst rootProjectionNode = {\r\n    current: undefined,\r\n};\r\nconst HTMLProjectionNode = createProjectionNode({\r\n    measureScroll: (instance) => ({\r\n        x: instance.scrollLeft,\r\n        y: instance.scrollTop,\r\n    }),\r\n    defaultParent: () => {\r\n        if (!rootProjectionNode.current) {\r\n            const documentNode = new DocumentProjectionNode({});\r\n            documentNode.mount(window);\r\n            documentNode.setOptions({ layoutScroll: true });\r\n            rootProjectionNode.current = documentNode;\r\n        }\r\n        return rootProjectionNode.current;\r\n    },\r\n    resetTransform: (instance, value) => {\r\n        instance.style.transform = value !== undefined ? value : \"none\";\r\n    },\r\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\r\n});\r\n\r\nexport { HTMLProjectionNode, rootProjectionNode };\r\n","import { DragGesture } from '../../gestures/drag/index.mjs';\r\nimport { PanGesture } from '../../gestures/pan/index.mjs';\r\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\r\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\r\n\r\nconst drag = {\r\n    pan: {\r\n        Feature: PanGesture,\r\n    },\r\n    drag: {\r\n        Feature: DragGesture,\r\n        ProjectionNode: HTMLProjectionNode,\r\n        MeasureLayout,\r\n    },\r\n};\r\n\r\nexport { drag };\r\n","import { Feature } from '../../motion/features/Feature.mjs';\r\nimport { noop } from 'motion-utils';\r\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\r\n\r\nclass DragGesture extends Feature {\r\n    constructor(node) {\r\n        super(node);\r\n        this.removeGroupControls = noop;\r\n        this.removeListeners = noop;\r\n        this.controls = new VisualElementDragControls(node);\r\n    }\r\n    mount() {\r\n        // If we've been provided a DragControls for manual control over the drag gesture,\r\n        // subscribe this component to it on mount.\r\n        const { dragControls } = this.node.getProps();\r\n        if (dragControls) {\r\n            this.removeGroupControls = dragControls.subscribe(this.controls);\r\n        }\r\n        this.removeListeners = this.controls.addListeners() || noop;\r\n    }\r\n    unmount() {\r\n        this.removeGroupControls();\r\n        this.removeListeners();\r\n    }\r\n}\r\n\r\nexport { DragGesture };\r\n","import { Feature } from '../motion/features/Feature.mjs';\r\nimport { hover } from 'motion-dom';\r\nimport { extractEventInfo } from '../events/event-info.mjs';\r\nimport { frame } from '../frameloop/frame.mjs';\r\n\r\nfunction handleHoverEvent(node, event, lifecycle) {\r\n    const { props } = node;\r\n    if (node.animationState && props.whileHover) {\r\n        node.animationState.setActive(\"whileHover\", lifecycle === \"Start\");\r\n    }\r\n    const eventName = (\"onHover\" + lifecycle);\r\n    const callback = props[eventName];\r\n    if (callback) {\r\n        frame.postRender(() => callback(event, extractEventInfo(event)));\r\n    }\r\n}\r\nclass HoverGesture extends Feature {\r\n    mount() {\r\n        const { current } = this.node;\r\n        if (!current)\r\n            return;\r\n        this.unmount = hover(current, (startEvent) => {\r\n            handleHoverEvent(this.node, startEvent, \"Start\");\r\n            return (endEvent) => handleHoverEvent(this.node, endEvent, \"End\");\r\n        });\r\n    }\r\n    unmount() { }\r\n}\r\n\r\nexport { HoverGesture };\r\n","import { Feature } from '../motion/features/Feature.mjs';\r\nimport { press } from 'motion-dom';\r\nimport { extractEventInfo } from '../events/event-info.mjs';\r\nimport { frame } from '../frameloop/frame.mjs';\r\n\r\nfunction handlePressEvent(node, event, lifecycle) {\r\n    const { props } = node;\r\n    if (node.animationState && props.whileTap) {\r\n        node.animationState.setActive(\"whileTap\", lifecycle === \"Start\");\r\n    }\r\n    const eventName = (\"onTap\" + (lifecycle === \"End\" ? \"\" : lifecycle));\r\n    const callback = props[eventName];\r\n    if (callback) {\r\n        frame.postRender(() => callback(event, extractEventInfo(event)));\r\n    }\r\n}\r\nclass PressGesture extends Feature {\r\n    mount() {\r\n        const { current } = this.node;\r\n        if (!current)\r\n            return;\r\n        this.unmount = press(current, (startEvent) => {\r\n            handlePressEvent(this.node, startEvent, \"Start\");\r\n            return (endEvent, { success }) => handlePressEvent(this.node, endEvent, success ? \"End\" : \"Cancel\");\r\n        }, { useGlobalTarget: this.node.props.globalTapTarget });\r\n    }\r\n    unmount() { }\r\n}\r\n\r\nexport { PressGesture };\r\n","/**\r\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\r\n * element, so even though these handlers might all be triggered by different\r\n * observers, we can keep them in the same map.\r\n */\r\nconst observerCallbacks = new WeakMap();\r\n/**\r\n * Multiple observers can be created for multiple element/document roots. Each with\r\n * different settings. So here we store dictionaries of observers to each root,\r\n * using serialised settings (threshold/margin) as lookup keys.\r\n */\r\nconst observers = new WeakMap();\r\nconst fireObserverCallback = (entry) => {\r\n    const callback = observerCallbacks.get(entry.target);\r\n    callback && callback(entry);\r\n};\r\nconst fireAllObserverCallbacks = (entries) => {\r\n    entries.forEach(fireObserverCallback);\r\n};\r\nfunction initIntersectionObserver({ root, ...options }) {\r\n    const lookupRoot = root || document;\r\n    /**\r\n     * If we don't have an observer lookup map for this root, create one.\r\n     */\r\n    if (!observers.has(lookupRoot)) {\r\n        observers.set(lookupRoot, {});\r\n    }\r\n    const rootObservers = observers.get(lookupRoot);\r\n    const key = JSON.stringify(options);\r\n    /**\r\n     * If we don't have an observer for this combination of root and settings,\r\n     * create one.\r\n     */\r\n    if (!rootObservers[key]) {\r\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\r\n    }\r\n    return rootObservers[key];\r\n}\r\nfunction observeIntersection(element, options, callback) {\r\n    const rootInteresectionObserver = initIntersectionObserver(options);\r\n    observerCallbacks.set(element, callback);\r\n    rootInteresectionObserver.observe(element);\r\n    return () => {\r\n        observerCallbacks.delete(element);\r\n        rootInteresectionObserver.unobserve(element);\r\n    };\r\n}\r\n\r\nexport { observeIntersection };\r\n","import { Feature } from '../Feature.mjs';\r\nimport { observeIntersection } from './observers.mjs';\r\n\r\nconst thresholdNames = {\r\n    some: 0,\r\n    all: 1,\r\n};\r\nclass InViewFeature extends Feature {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.hasEnteredView = false;\r\n        this.isInView = false;\r\n    }\r\n    startObserver() {\r\n        this.unmount();\r\n        const { viewport = {} } = this.node.getProps();\r\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\r\n        const options = {\r\n            root: root ? root.current : undefined,\r\n            rootMargin,\r\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\r\n        };\r\n        const onIntersectionUpdate = (entry) => {\r\n            const { isIntersecting } = entry;\r\n            /**\r\n             * If there's been no change in the viewport state, early return.\r\n             */\r\n            if (this.isInView === isIntersecting)\r\n                return;\r\n            this.isInView = isIntersecting;\r\n            /**\r\n             * Handle hasEnteredView. If this is only meant to run once, and\r\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\r\n             */\r\n            if (once && !isIntersecting && this.hasEnteredView) {\r\n                return;\r\n            }\r\n            else if (isIntersecting) {\r\n                this.hasEnteredView = true;\r\n            }\r\n            if (this.node.animationState) {\r\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\r\n            }\r\n            /**\r\n             * Use the latest committed props rather than the ones in scope\r\n             * when this observer is created\r\n             */\r\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\r\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\r\n            callback && callback(entry);\r\n        };\r\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\r\n    }\r\n    mount() {\r\n        this.startObserver();\r\n    }\r\n    update() {\r\n        if (typeof IntersectionObserver === \"undefined\")\r\n            return;\r\n        const { props, prevProps } = this.node;\r\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\r\n        if (hasOptionsChanged) {\r\n            this.startObserver();\r\n        }\r\n    }\r\n    unmount() { }\r\n}\r\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\r\n    return (name) => viewport[name] !== prevViewport[name];\r\n}\r\n\r\nexport { InViewFeature };\r\n","import { HoverGesture } from '../../gestures/hover.mjs';\r\nimport { FocusGesture } from '../../gestures/focus.mjs';\r\nimport { PressGesture } from '../../gestures/press.mjs';\r\nimport { InViewFeature } from './viewport/index.mjs';\r\n\r\nconst gestureAnimations = {\r\n    inView: {\r\n        Feature: InViewFeature,\r\n    },\r\n    tap: {\r\n        Feature: PressGesture,\r\n    },\r\n    focus: {\r\n        Feature: FocusGesture,\r\n    },\r\n    hover: {\r\n        Feature: HoverGesture,\r\n    },\r\n};\r\n\r\nexport { gestureAnimations };\r\n","import { addDomEvent } from '../events/add-dom-event.mjs';\r\nimport { Feature } from '../motion/features/Feature.mjs';\r\nimport { pipe } from '../utils/pipe.mjs';\r\n\r\nclass FocusGesture extends Feature {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.isActive = false;\r\n    }\r\n    onFocus() {\r\n        let isFocusVisible = false;\r\n        /**\r\n         * If this element doesn't match focus-visible then don't\r\n         * apply whileHover. But, if matches throws that focus-visible\r\n         * is not a valid selector then in that browser outline styles will be applied\r\n         * to the element by default and we want to match that behaviour with whileFocus.\r\n         */\r\n        try {\r\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\r\n        }\r\n        catch (e) {\r\n            isFocusVisible = true;\r\n        }\r\n        if (!isFocusVisible || !this.node.animationState)\r\n            return;\r\n        this.node.animationState.setActive(\"whileFocus\", true);\r\n        this.isActive = true;\r\n    }\r\n    onBlur() {\r\n        if (!this.isActive || !this.node.animationState)\r\n            return;\r\n        this.node.animationState.setActive(\"whileFocus\", false);\r\n        this.isActive = false;\r\n    }\r\n    mount() {\r\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\r\n    }\r\n    unmount() { }\r\n}\r\n\r\nexport { FocusGesture };\r\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\r\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\r\n\r\nconst layout = {\r\n    layout: {\r\n        ProjectionNode: HTMLProjectionNode,\r\n        MeasureLayout,\r\n    },\r\n};\r\n\r\nexport { layout };\r\n","// Does this device prefer reduced motion? Returns `null` server-side.\r\nconst prefersReducedMotion = { current: null };\r\nconst hasReducedMotionListener = { current: false };\r\n\r\nexport { hasReducedMotionListener, prefersReducedMotion };\r\n","import { color } from '../../../value/types/color/index.mjs';\r\nimport { complex } from '../../../value/types/complex/index.mjs';\r\nimport { dimensionValueTypes } from './dimensions.mjs';\r\nimport { testValueType } from './test.mjs';\r\n\r\n/**\r\n * A list of all ValueTypes\r\n */\r\nconst valueTypes = [...dimensionValueTypes, color, complex];\r\n/**\r\n * Tests a value against the list of ValueTypes\r\n */\r\nconst findValueType = (v) => valueTypes.find(testValueType(v));\r\n\r\nexport { findValueType };\r\n","const visualElementStore = new WeakMap();\r\n\r\nexport { visualElementStore };\r\n","import { time } from '../frameloop/sync-time.mjs';\r\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\r\nimport { createBox } from '../projection/geometry/models.mjs';\r\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\r\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\r\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\r\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\r\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\r\nimport { warnOnce } from '../utils/warn-once.mjs';\r\nimport { motionValue } from '../value/index.mjs';\r\nimport { complex } from '../value/types/complex/index.mjs';\r\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\r\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\r\nimport { findValueType } from './dom/value-types/find.mjs';\r\nimport { transformProps } from './html/utils/keys-transform.mjs';\r\nimport { visualElementStore } from './store.mjs';\r\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\r\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\r\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\r\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\r\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\r\n\r\nconst propEventHandlers = [\r\n    \"AnimationStart\",\r\n    \"AnimationComplete\",\r\n    \"Update\",\r\n    \"BeforeLayoutMeasure\",\r\n    \"LayoutMeasure\",\r\n    \"LayoutAnimationStart\",\r\n    \"LayoutAnimationComplete\",\r\n];\r\n/**\r\n * A VisualElement is an imperative abstraction around UI elements such as\r\n * HTMLElement, SVGElement, Three.Object3D etc.\r\n */\r\nclass VisualElement {\r\n    /**\r\n     * This method takes React props and returns found MotionValues. For example, HTML\r\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\r\n     *\r\n     * This isn't an abstract method as it needs calling in the constructor, but it is\r\n     * intended to be one.\r\n     */\r\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\r\n        return {};\r\n    }\r\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\r\n        /**\r\n         * A reference to the current underlying Instance, e.g. a HTMLElement\r\n         * or Three.Mesh etc.\r\n         */\r\n        this.current = null;\r\n        /**\r\n         * A set containing references to this VisualElement's children.\r\n         */\r\n        this.children = new Set();\r\n        /**\r\n         * Determine what role this visual element should take in the variant tree.\r\n         */\r\n        this.isVariantNode = false;\r\n        this.isControllingVariants = false;\r\n        /**\r\n         * Decides whether this VisualElement should animate in reduced motion\r\n         * mode.\r\n         *\r\n         * TODO: This is currently set on every individual VisualElement but feels\r\n         * like it could be set globally.\r\n         */\r\n        this.shouldReduceMotion = null;\r\n        /**\r\n         * A map of all motion values attached to this visual element. Motion\r\n         * values are source of truth for any given animated value. A motion\r\n         * value might be provided externally by the component via props.\r\n         */\r\n        this.values = new Map();\r\n        this.KeyframeResolver = KeyframeResolver;\r\n        /**\r\n         * Cleanup functions for active features (hover/tap/exit etc)\r\n         */\r\n        this.features = {};\r\n        /**\r\n         * A map of every subscription that binds the provided or generated\r\n         * motion values onChange listeners to this visual element.\r\n         */\r\n        this.valueSubscriptions = new Map();\r\n        /**\r\n         * A reference to the previously-provided motion values as returned\r\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\r\n         * if any motion values need to be removed after props are updated.\r\n         */\r\n        this.prevMotionValues = {};\r\n        /**\r\n         * An object containing a SubscriptionManager for each active event.\r\n         */\r\n        this.events = {};\r\n        /**\r\n         * An object containing an unsubscribe function for each prop event subscription.\r\n         * For example, every \"Update\" event can have multiple subscribers via\r\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\r\n         */\r\n        this.propEventSubscriptions = {};\r\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\r\n        this.render = () => {\r\n            if (!this.current)\r\n                return;\r\n            this.triggerBuild();\r\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\r\n        };\r\n        this.renderScheduledAt = 0.0;\r\n        this.scheduleRender = () => {\r\n            const now = time.now();\r\n            if (this.renderScheduledAt < now) {\r\n                this.renderScheduledAt = now;\r\n                frame.render(this.render, false, true);\r\n            }\r\n        };\r\n        const { latestValues, renderState, onUpdate } = visualState;\r\n        this.onUpdate = onUpdate;\r\n        this.latestValues = latestValues;\r\n        this.baseTarget = { ...latestValues };\r\n        this.initialValues = props.initial ? { ...latestValues } : {};\r\n        this.renderState = renderState;\r\n        this.parent = parent;\r\n        this.props = props;\r\n        this.presenceContext = presenceContext;\r\n        this.depth = parent ? parent.depth + 1 : 0;\r\n        this.reducedMotionConfig = reducedMotionConfig;\r\n        this.options = options;\r\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\r\n        this.isControllingVariants = isControllingVariants(props);\r\n        this.isVariantNode = isVariantNode(props);\r\n        if (this.isVariantNode) {\r\n            this.variantChildren = new Set();\r\n        }\r\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\r\n        /**\r\n         * Any motion values that are provided to the element when created\r\n         * aren't yet bound to the element, as this would technically be impure.\r\n         * However, we iterate through the motion values and set them to the\r\n         * initial values for this component.\r\n         *\r\n         * TODO: This is impure and we should look at changing this to run on mount.\r\n         * Doing so will break some tests but this isn't necessarily a breaking change,\r\n         * more a reflection of the test.\r\n         */\r\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\r\n        for (const key in initialMotionValues) {\r\n            const value = initialMotionValues[key];\r\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\r\n                value.set(latestValues[key], false);\r\n            }\r\n        }\r\n    }\r\n    mount(instance) {\r\n        this.current = instance;\r\n        visualElementStore.set(instance, this);\r\n        if (this.projection && !this.projection.instance) {\r\n            this.projection.mount(instance);\r\n        }\r\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\r\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\r\n        }\r\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\r\n        if (!hasReducedMotionListener.current) {\r\n            initPrefersReducedMotion();\r\n        }\r\n        this.shouldReduceMotion =\r\n            this.reducedMotionConfig === \"never\"\r\n                ? false\r\n                : this.reducedMotionConfig === \"always\"\r\n                    ? true\r\n                    : prefersReducedMotion.current;\r\n        if (process.env.NODE_ENV !== \"production\") {\r\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\r\n        }\r\n        if (this.parent)\r\n            this.parent.children.add(this);\r\n        this.update(this.props, this.presenceContext);\r\n    }\r\n    unmount() {\r\n        visualElementStore.delete(this.current);\r\n        this.projection && this.projection.unmount();\r\n        cancelFrame(this.notifyUpdate);\r\n        cancelFrame(this.render);\r\n        this.valueSubscriptions.forEach((remove) => remove());\r\n        this.valueSubscriptions.clear();\r\n        this.removeFromVariantTree && this.removeFromVariantTree();\r\n        this.parent && this.parent.children.delete(this);\r\n        for (const key in this.events) {\r\n            this.events[key].clear();\r\n        }\r\n        for (const key in this.features) {\r\n            const feature = this.features[key];\r\n            if (feature) {\r\n                feature.unmount();\r\n                feature.isMounted = false;\r\n            }\r\n        }\r\n        this.current = null;\r\n    }\r\n    bindToMotionValue(key, value) {\r\n        if (this.valueSubscriptions.has(key)) {\r\n            this.valueSubscriptions.get(key)();\r\n        }\r\n        const valueIsTransform = transformProps.has(key);\r\n        const removeOnChange = value.on(\"change\", (latestValue) => {\r\n            this.latestValues[key] = latestValue;\r\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\r\n            if (valueIsTransform && this.projection) {\r\n                this.projection.isTransformDirty = true;\r\n            }\r\n        });\r\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\r\n        let removeSyncCheck;\r\n        if (window.MotionCheckAppearSync) {\r\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\r\n        }\r\n        this.valueSubscriptions.set(key, () => {\r\n            removeOnChange();\r\n            removeOnRenderRequest();\r\n            if (removeSyncCheck)\r\n                removeSyncCheck();\r\n            if (value.owner)\r\n                value.stop();\r\n        });\r\n    }\r\n    sortNodePosition(other) {\r\n        /**\r\n         * If these nodes aren't even of the same type we can't compare their depth.\r\n         */\r\n        if (!this.current ||\r\n            !this.sortInstanceNodePosition ||\r\n            this.type !== other.type) {\r\n            return 0;\r\n        }\r\n        return this.sortInstanceNodePosition(this.current, other.current);\r\n    }\r\n    updateFeatures() {\r\n        let key = \"animation\";\r\n        for (key in featureDefinitions) {\r\n            const featureDefinition = featureDefinitions[key];\r\n            if (!featureDefinition)\r\n                continue;\r\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\r\n            /**\r\n             * If this feature is enabled but not active, make a new instance.\r\n             */\r\n            if (!this.features[key] &&\r\n                FeatureConstructor &&\r\n                isEnabled(this.props)) {\r\n                this.features[key] = new FeatureConstructor(this);\r\n            }\r\n            /**\r\n             * If we have a feature, mount or update it.\r\n             */\r\n            if (this.features[key]) {\r\n                const feature = this.features[key];\r\n                if (feature.isMounted) {\r\n                    feature.update();\r\n                }\r\n                else {\r\n                    feature.mount();\r\n                    feature.isMounted = true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    triggerBuild() {\r\n        this.build(this.renderState, this.latestValues, this.props);\r\n    }\r\n    /**\r\n     * Measure the current viewport box with or without transforms.\r\n     * Only measures axis-aligned boxes, rotate and skew must be manually\r\n     * removed with a re-render to work.\r\n     */\r\n    measureViewportBox() {\r\n        return this.current\r\n            ? this.measureInstanceViewportBox(this.current, this.props)\r\n            : createBox();\r\n    }\r\n    getStaticValue(key) {\r\n        return this.latestValues[key];\r\n    }\r\n    setStaticValue(key, value) {\r\n        this.latestValues[key] = value;\r\n    }\r\n    /**\r\n     * Update the provided props. Ensure any newly-added motion values are\r\n     * added to our map, old ones removed, and listeners updated.\r\n     */\r\n    update(props, presenceContext) {\r\n        if (props.transformTemplate || this.props.transformTemplate) {\r\n            this.scheduleRender();\r\n        }\r\n        this.prevProps = this.props;\r\n        this.props = props;\r\n        this.prevPresenceContext = this.presenceContext;\r\n        this.presenceContext = presenceContext;\r\n        /**\r\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\r\n         */\r\n        for (let i = 0; i < propEventHandlers.length; i++) {\r\n            const key = propEventHandlers[i];\r\n            if (this.propEventSubscriptions[key]) {\r\n                this.propEventSubscriptions[key]();\r\n                delete this.propEventSubscriptions[key];\r\n            }\r\n            const listenerName = (\"on\" + key);\r\n            const listener = props[listenerName];\r\n            if (listener) {\r\n                this.propEventSubscriptions[key] = this.on(key, listener);\r\n            }\r\n        }\r\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\r\n        if (this.handleChildMotionValue) {\r\n            this.handleChildMotionValue();\r\n        }\r\n        this.onUpdate && this.onUpdate(this);\r\n    }\r\n    getProps() {\r\n        return this.props;\r\n    }\r\n    /**\r\n     * Returns the variant definition with a given name.\r\n     */\r\n    getVariant(name) {\r\n        return this.props.variants ? this.props.variants[name] : undefined;\r\n    }\r\n    /**\r\n     * Returns the defined default transition on this component.\r\n     */\r\n    getDefaultTransition() {\r\n        return this.props.transition;\r\n    }\r\n    getTransformPagePoint() {\r\n        return this.props.transformPagePoint;\r\n    }\r\n    getClosestVariantNode() {\r\n        return this.isVariantNode\r\n            ? this\r\n            : this.parent\r\n                ? this.parent.getClosestVariantNode()\r\n                : undefined;\r\n    }\r\n    /**\r\n     * Add a child visual element to our set of children.\r\n     */\r\n    addVariantChild(child) {\r\n        const closestVariantNode = this.getClosestVariantNode();\r\n        if (closestVariantNode) {\r\n            closestVariantNode.variantChildren &&\r\n                closestVariantNode.variantChildren.add(child);\r\n            return () => closestVariantNode.variantChildren.delete(child);\r\n        }\r\n    }\r\n    /**\r\n     * Add a motion value and bind it to this visual element.\r\n     */\r\n    addValue(key, value) {\r\n        // Remove existing value if it exists\r\n        const existingValue = this.values.get(key);\r\n        if (value !== existingValue) {\r\n            if (existingValue)\r\n                this.removeValue(key);\r\n            this.bindToMotionValue(key, value);\r\n            this.values.set(key, value);\r\n            this.latestValues[key] = value.get();\r\n        }\r\n    }\r\n    /**\r\n     * Remove a motion value and unbind any active subscriptions.\r\n     */\r\n    removeValue(key) {\r\n        this.values.delete(key);\r\n        const unsubscribe = this.valueSubscriptions.get(key);\r\n        if (unsubscribe) {\r\n            unsubscribe();\r\n            this.valueSubscriptions.delete(key);\r\n        }\r\n        delete this.latestValues[key];\r\n        this.removeValueFromRenderState(key, this.renderState);\r\n    }\r\n    /**\r\n     * Check whether we have a motion value for this key\r\n     */\r\n    hasValue(key) {\r\n        return this.values.has(key);\r\n    }\r\n    getValue(key, defaultValue) {\r\n        if (this.props.values && this.props.values[key]) {\r\n            return this.props.values[key];\r\n        }\r\n        let value = this.values.get(key);\r\n        if (value === undefined && defaultValue !== undefined) {\r\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\r\n            this.addValue(key, value);\r\n        }\r\n        return value;\r\n    }\r\n    /**\r\n     * If we're trying to animate to a previously unencountered value,\r\n     * we need to check for it in our state and as a last resort read it\r\n     * directly from the instance (which might have performance implications).\r\n     */\r\n    readValue(key, target) {\r\n        var _a;\r\n        let value = this.latestValues[key] !== undefined || !this.current\r\n            ? this.latestValues[key]\r\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\r\n        if (value !== undefined && value !== null) {\r\n            if (typeof value === \"string\" &&\r\n                (isNumericalString(value) || isZeroValueString(value))) {\r\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\r\n                value = parseFloat(value);\r\n            }\r\n            else if (!findValueType(value) && complex.test(target)) {\r\n                value = getAnimatableNone(key, target);\r\n            }\r\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\r\n        }\r\n        return isMotionValue(value) ? value.get() : value;\r\n    }\r\n    /**\r\n     * Set the base target to later animate back to. This is currently\r\n     * only hydrated on creation and when we first read a value.\r\n     */\r\n    setBaseTarget(key, value) {\r\n        this.baseTarget[key] = value;\r\n    }\r\n    /**\r\n     * Find the base target for a value thats been removed from all animation\r\n     * props.\r\n     */\r\n    getBaseTarget(key) {\r\n        var _a;\r\n        const { initial } = this.props;\r\n        let valueFromInitial;\r\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\r\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\r\n            if (variant) {\r\n                valueFromInitial = variant[key];\r\n            }\r\n        }\r\n        /**\r\n         * If this value still exists in the current initial variant, read that.\r\n         */\r\n        if (initial && valueFromInitial !== undefined) {\r\n            return valueFromInitial;\r\n        }\r\n        /**\r\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\r\n         * so we can read the value from an alternative source, try that.\r\n         */\r\n        const target = this.getBaseTargetFromProps(this.props, key);\r\n        if (target !== undefined && !isMotionValue(target))\r\n            return target;\r\n        /**\r\n         * If the value was initially defined on initial, but it doesn't any more,\r\n         * return undefined. Otherwise return the value as initially read from the DOM.\r\n         */\r\n        return this.initialValues[key] !== undefined &&\r\n            valueFromInitial === undefined\r\n            ? undefined\r\n            : this.baseTarget[key];\r\n    }\r\n    on(eventName, callback) {\r\n        if (!this.events[eventName]) {\r\n            this.events[eventName] = new SubscriptionManager();\r\n        }\r\n        return this.events[eventName].add(callback);\r\n    }\r\n    notify(eventName, ...args) {\r\n        if (this.events[eventName]) {\r\n            this.events[eventName].notify(...args);\r\n        }\r\n    }\r\n}\r\n\r\nexport { VisualElement };\r\n","import { isBrowser } from '../is-browser.mjs';\r\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\r\n\r\nfunction initPrefersReducedMotion() {\r\n    hasReducedMotionListener.current = true;\r\n    if (!isBrowser)\r\n        return;\r\n    if (window.matchMedia) {\r\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\r\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\r\n        motionMediaQuery.addListener(setReducedMotionPreferences);\r\n        setReducedMotionPreferences();\r\n    }\r\n    else {\r\n        prefersReducedMotion.current = false;\r\n    }\r\n}\r\n\r\nexport { initPrefersReducedMotion };\r\n","import { warnOnce } from '../../utils/warn-once.mjs';\r\nimport { motionValue } from '../../value/index.mjs';\r\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\r\n\r\nfunction updateMotionValuesFromProps(element, next, prev) {\r\n    for (const key in next) {\r\n        const nextValue = next[key];\r\n        const prevValue = prev[key];\r\n        if (isMotionValue(nextValue)) {\r\n            /**\r\n             * If this is a motion value found in props or style, we want to add it\r\n             * to our visual element's motion value map.\r\n             */\r\n            element.addValue(key, nextValue);\r\n            /**\r\n             * Check the version of the incoming motion value with this version\r\n             * and warn against mismatches.\r\n             */\r\n            if (process.env.NODE_ENV === \"development\") {\r\n                warnOnce(nextValue.version === \"11.18.2\", `Attempting to mix Motion versions ${nextValue.version} with 11.18.2 may not work as expected.`);\r\n            }\r\n        }\r\n        else if (isMotionValue(prevValue)) {\r\n            /**\r\n             * If we're swapping from a motion value to a static value,\r\n             * create a new motion value from that\r\n             */\r\n            element.addValue(key, motionValue(nextValue, { owner: element }));\r\n        }\r\n        else if (prevValue !== nextValue) {\r\n            /**\r\n             * If this is a flat value that has changed, update the motion value\r\n             * or create one if it doesn't exist. We only want to do this if we're\r\n             * not handling the value with our animation state.\r\n             */\r\n            if (element.hasValue(key)) {\r\n                const existingValue = element.getValue(key);\r\n                if (existingValue.liveStyle === true) {\r\n                    existingValue.jump(nextValue);\r\n                }\r\n                else if (!existingValue.hasAnimated) {\r\n                    existingValue.set(nextValue);\r\n                }\r\n            }\r\n            else {\r\n                const latestValue = element.getStaticValue(key);\r\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\r\n            }\r\n        }\r\n    }\r\n    // Handle removed values\r\n    for (const key in prev) {\r\n        if (next[key] === undefined)\r\n            element.removeValue(key);\r\n    }\r\n    return next;\r\n}\r\n\r\nexport { updateMotionValuesFromProps };\r\n","import { VisualElement } from '../VisualElement.mjs';\r\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\r\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\r\n\r\nclass DOMVisualElement extends VisualElement {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.KeyframeResolver = DOMKeyframesResolver;\r\n    }\r\n    sortInstanceNodePosition(a, b) {\r\n        /**\r\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\r\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\r\n         * to true if b preceeds a.\r\n         */\r\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\r\n    }\r\n    getBaseTargetFromProps(props, key) {\r\n        return props.style\r\n            ? props.style[key]\r\n            : undefined;\r\n    }\r\n    removeValueFromRenderState(key, { vars, style }) {\r\n        delete vars[key];\r\n        delete style[key];\r\n    }\r\n    handleChildMotionValue() {\r\n        if (this.childSubscription) {\r\n            this.childSubscription();\r\n            delete this.childSubscription;\r\n        }\r\n        const { children } = this.props;\r\n        if (isMotionValue(children)) {\r\n            this.childSubscription = children.on(\"change\", (latest) => {\r\n                if (this.current) {\r\n                    this.current.textContent = `${latest}`;\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport { DOMVisualElement };\r\n","import { measureViewportBox } from '../../projection/utils/measure.mjs';\r\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\r\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\r\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\r\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\r\nimport { transformProps } from './utils/keys-transform.mjs';\r\nimport { renderHTML } from './utils/render.mjs';\r\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\r\n\r\nfunction getComputedStyle(element) {\r\n    return window.getComputedStyle(element);\r\n}\r\nclass HTMLVisualElement extends DOMVisualElement {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.type = \"html\";\r\n        this.renderInstance = renderHTML;\r\n    }\r\n    readValueFromInstance(instance, key) {\r\n        if (transformProps.has(key)) {\r\n            const defaultType = getDefaultValueType(key);\r\n            return defaultType ? defaultType.default || 0 : 0;\r\n        }\r\n        else {\r\n            const computedStyle = getComputedStyle(instance);\r\n            const value = (isCSSVariableName(key)\r\n                ? computedStyle.getPropertyValue(key)\r\n                : computedStyle[key]) || 0;\r\n            return typeof value === \"string\" ? value.trim() : value;\r\n        }\r\n    }\r\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\r\n        return measureViewportBox(instance, transformPagePoint);\r\n    }\r\n    build(renderState, latestValues, props) {\r\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\r\n    }\r\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\r\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\r\n    }\r\n}\r\n\r\nexport { HTMLVisualElement, getComputedStyle };\r\n","import { createBox } from '../../projection/geometry/models.mjs';\r\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\r\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\r\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\r\nimport { transformProps } from '../html/utils/keys-transform.mjs';\r\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\r\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\r\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\r\nimport { renderSVG } from './utils/render.mjs';\r\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\r\n\r\nclass SVGVisualElement extends DOMVisualElement {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.type = \"svg\";\r\n        this.isSVGTag = false;\r\n        this.measureInstanceViewportBox = createBox;\r\n    }\r\n    getBaseTargetFromProps(props, key) {\r\n        return props[key];\r\n    }\r\n    readValueFromInstance(instance, key) {\r\n        if (transformProps.has(key)) {\r\n            const defaultType = getDefaultValueType(key);\r\n            return defaultType ? defaultType.default || 0 : 0;\r\n        }\r\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\r\n        return instance.getAttribute(key);\r\n    }\r\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\r\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\r\n    }\r\n    build(renderState, latestValues, props) {\r\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate);\r\n    }\r\n    renderInstance(instance, renderState, styleProp, projection) {\r\n        renderSVG(instance, renderState, styleProp, projection);\r\n    }\r\n    mount(instance) {\r\n        this.isSVGTag = isSVGTag(instance.tagName);\r\n        super.mount(instance);\r\n    }\r\n}\r\n\r\nexport { SVGVisualElement };\r\n","import { Fragment } from 'react';\r\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\r\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\r\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\r\n\r\nconst createDomVisualElement = (Component, options) => {\r\n    return isSVGComponent(Component)\r\n        ? new SVGVisualElement(options)\r\n        : new HTMLVisualElement(options, {\r\n            allowProjection: Component !== Fragment,\r\n        });\r\n};\r\n\r\nexport { createDomVisualElement };\r\n","import { createDOMMotionComponentProxy } from '../create-proxy.mjs';\r\nimport { createMotionComponent } from './create.mjs';\r\n\r\nconst motion = /*@__PURE__*/ createDOMMotionComponentProxy(createMotionComponent);\r\n\r\nexport { motion };\r\n","import { animations } from '../../../motion/features/animations.mjs';\r\nimport { drag } from '../../../motion/features/drag.mjs';\r\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\r\nimport { layout } from '../../../motion/features/layout.mjs';\r\nimport { createMotionComponentFactory } from '../create-factory.mjs';\r\nimport { createDomVisualElement } from '../../dom/create-visual-element.mjs';\r\n\r\nconst createMotionComponent = /*@__PURE__*/ createMotionComponentFactory({\r\n    ...animations,\r\n    ...gestureAnimations,\r\n    ...drag,\r\n    ...layout,\r\n}, createDomVisualElement);\r\n\r\nexport { createMotionComponent };\r\n","/**\r\n * @license lucide-react v0.344.0 - ISC\r\n *\r\n * This source code is licensed under the ISC license.\r\n * See the LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nvar defaultAttributes = {\r\n  xmlns: \"http://www.w3.org/2000/svg\",\r\n  width: 24,\r\n  height: 24,\r\n  viewBox: \"0 0 24 24\",\r\n  fill: \"none\",\r\n  stroke: \"currentColor\",\r\n  strokeWidth: 2,\r\n  strokeLinecap: \"round\",\r\n  strokeLinejoin: \"round\"\r\n};\r\n\r\nexport { defaultAttributes as default };\r\n//# sourceMappingURL=defaultAttributes.js.map\r\n","/**\r\n * @license lucide-react v0.344.0 - ISC\r\n *\r\n * This source code is licensed under the ISC license.\r\n * See the LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport { forwardRef, createElement } from 'react';\r\nimport defaultAttributes from './defaultAttributes.js';\r\n\r\nconst toKebabCase = (string) => string.replace(/([a-z0-9])([A-Z])/g, \"$1-$2\").toLowerCase().trim();\r\nconst createLucideIcon = (iconName, iconNode) => {\r\n  const Component = forwardRef(\r\n    ({\r\n      color = \"currentColor\",\r\n      size = 24,\r\n      strokeWidth = 2,\r\n      absoluteStrokeWidth,\r\n      className = \"\",\r\n      children,\r\n      ...rest\r\n    }, ref) => {\r\n      return createElement(\r\n        \"svg\",\r\n        {\r\n          ref,\r\n          ...defaultAttributes,\r\n          width: size,\r\n          height: size,\r\n          stroke: color,\r\n          strokeWidth: absoluteStrokeWidth ? Number(strokeWidth) * 24 / Number(size) : strokeWidth,\r\n          className: [\"lucide\", `lucide-${toKebabCase(iconName)}`, className].join(\" \"),\r\n          ...rest\r\n        },\r\n        [\r\n          ...iconNode.map(([tag, attrs]) => createElement(tag, attrs)),\r\n          ...Array.isArray(children) ? children : [children]\r\n        ]\r\n      );\r\n    }\r\n  );\r\n  Component.displayName = `${iconName}`;\r\n  return Component;\r\n};\r\n\r\nexport { createLucideIcon as default, toKebabCase };\r\n//# sourceMappingURL=createLucideIcon.js.map\r\n","/**\r\n * @license lucide-react v0.344.0 - ISC\r\n *\r\n * This source code is licensed under the ISC license.\r\n * See the LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport createLucideIcon from '../createLucideIcon.js';\r\n\r\nconst BookOpen = createLucideIcon(\"BookOpen\", [\r\n  [\"path\", { d: \"M2 3h6a4 4 0 0 1 4 4v14a3 3 0 0 0-3-3H2z\", key: \"vv98re\" }],\r\n  [\"path\", { d: \"M22 3h-6a4 4 0 0 0-4 4v14a3 3 0 0 1 3-3h7z\", key: \"1cyq3y\" }]\r\n]);\r\n\r\nexport { BookOpen as default };\r\n//# sourceMappingURL=book-open.js.map\r\n","/**\r\n * @license lucide-react v0.344.0 - ISC\r\n *\r\n * This source code is licensed under the ISC license.\r\n * See the LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport createLucideIcon from '../createLucideIcon.js';\r\n\r\nconst Briefcase = createLucideIcon(\"Briefcase\", [\r\n  [\"rect\", { width: \"20\", height: \"14\", x: \"2\", y: \"7\", rx: \"2\", ry: \"2\", key: \"eto64e\" }],\r\n  [\"path\", { d: \"M16 21V5a2 2 0 0 0-2-2h-4a2 2 0 0 0-2 2v16\", key: \"zwj3tp\" }]\r\n]);\r\n\r\nexport { Briefcase as default };\r\n//# sourceMappingURL=briefcase.js.map\r\n","/**\r\n * @license lucide-react v0.344.0 - ISC\r\n *\r\n * This source code is licensed under the ISC license.\r\n * See the LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport createLucideIcon from '../createLucideIcon.js';\r\n\r\nconst Code = createLucideIcon(\"Code\", [\r\n  [\"polyline\", { points: \"16 18 22 12 16 6\", key: \"z7tu5w\" }],\r\n  [\"polyline\", { points: \"8 6 2 12 8 18\", key: \"1eg1df\" }]\r\n]);\r\n\r\nexport { Code as default };\r\n//# sourceMappingURL=code.js.map\r\n","/**\r\n * @license lucide-react v0.344.0 - ISC\r\n *\r\n * This source code is licensed under the ISC license.\r\n * See the LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport createLucideIcon from '../createLucideIcon.js';\r\n\r\nconst Disc = createLucideIcon(\"Disc\", [\r\n  [\"circle\", { cx: \"12\", cy: \"12\", r: \"10\", key: \"1mglay\" }],\r\n  [\"circle\", { cx: \"12\", cy: \"12\", r: \"2\", key: \"1c9p78\" }]\r\n]);\r\n\r\nexport { Disc as default };\r\n//# sourceMappingURL=disc.js.map\r\n","/**\r\n * @license lucide-react v0.344.0 - ISC\r\n *\r\n * This source code is licensed under the ISC license.\r\n * See the LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport createLucideIcon from '../createLucideIcon.js';\r\n\r\nconst ExternalLink = createLucideIcon(\"ExternalLink\", [\r\n  [\"path\", { d: \"M15 3h6v6\", key: \"1q9fwt\" }],\r\n  [\"path\", { d: \"M10 14 21 3\", key: \"gplh6r\" }],\r\n  [\"path\", { d: \"M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6\", key: \"a6xqqp\" }]\r\n]);\r\n\r\nexport { ExternalLink as default };\r\n//# sourceMappingURL=external-link.js.map\r\n","/**\r\n * @license lucide-react v0.344.0 - ISC\r\n *\r\n * This source code is licensed under the ISC license.\r\n * See the LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport createLucideIcon from '../createLucideIcon.js';\r\n\r\nconst Github = createLucideIcon(\"Github\", [\r\n  [\r\n    \"path\",\r\n    {\r\n      d: \"M15 22v-4a4.8 4.8 0 0 0-1-3.5c3 0 6-2 6-5.5.08-1.25-.27-2.48-1-3.5.28-1.15.28-2.35 0-3.5 0 0-1 0-3 1.5-2.64-.5-5.36-.5-8 0C6 2 5 2 5 2c-.3 1.15-.3 2.35 0 3.5A5.403 5.403 0 0 0 4 9c0 3.5 3 5.5 6 5.5-.39.49-.68 1.05-.85 1.65-.17.6-.22 1.23-.15 1.85v4\",\r\n      key: \"tonef\"\r\n    }\r\n  ],\r\n  [\"path\", { d: \"M9 18c-4.51 2-5-2-7-2\", key: \"9comsn\" }]\r\n]);\r\n\r\nexport { Github as default };\r\n//# sourceMappingURL=github.js.map\r\n","/**\r\n * @license lucide-react v0.344.0 - ISC\r\n *\r\n * This source code is licensed under the ISC license.\r\n * See the LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport createLucideIcon from '../createLucideIcon.js';\r\n\r\nconst GraduationCap = createLucideIcon(\"GraduationCap\", [\r\n  [\r\n    \"path\",\r\n    {\r\n      d: \"M21.42 10.922a1 1 0 0 0-.019-1.838L12.83 5.18a2 2 0 0 0-1.66 0L2.6 9.08a1 1 0 0 0 0 1.832l8.57 3.908a2 2 0 0 0 1.66 0z\",\r\n      key: \"j76jl0\"\r\n    }\r\n  ],\r\n  [\"path\", { d: \"M22 10v6\", key: \"1lu8f3\" }],\r\n  [\"path\", { d: \"M6 12.5V16a6 3 0 0 0 12 0v-3.5\", key: \"1r8lef\" }]\r\n]);\r\n\r\nexport { GraduationCap as default };\r\n//# sourceMappingURL=graduation-cap.js.map\r\n","/**\r\n * @license lucide-react v0.344.0 - ISC\r\n *\r\n * This source code is licensed under the ISC license.\r\n * See the LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport createLucideIcon from '../createLucideIcon.js';\r\n\r\nconst Linkedin = createLucideIcon(\"Linkedin\", [\r\n  [\r\n    \"path\",\r\n    {\r\n      d: \"M16 8a6 6 0 0 1 6 6v7h-4v-7a2 2 0 0 0-2-2 2 2 0 0 0-2 2v7h-4v-7a6 6 0 0 1 6-6z\",\r\n      key: \"c2jq9f\"\r\n    }\r\n  ],\r\n  [\"rect\", { width: \"4\", height: \"12\", x: \"2\", y: \"9\", key: \"mk3on5\" }],\r\n  [\"circle\", { cx: \"4\", cy: \"4\", r: \"2\", key: \"bt5ra8\" }]\r\n]);\r\n\r\nexport { Linkedin as default };\r\n//# sourceMappingURL=linkedin.js.map\r\n","/**\r\n * @license lucide-react v0.344.0 - ISC\r\n *\r\n * This source code is licensed under the ISC license.\r\n * See the LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport createLucideIcon from '../createLucideIcon.js';\r\n\r\nconst Mail = createLucideIcon(\"Mail\", [\r\n  [\"rect\", { width: \"20\", height: \"16\", x: \"2\", y: \"4\", rx: \"2\", key: \"18n3k1\" }],\r\n  [\"path\", { d: \"m22 7-8.97 5.7a1.94 1.94 0 0 1-2.06 0L2 7\", key: \"1ocrg3\" }]\r\n]);\r\n\r\nexport { Mail as default };\r\n//# sourceMappingURL=mail.js.map\r\n","/**\r\n * @license lucide-react v0.344.0 - ISC\r\n *\r\n * This source code is licensed under the ISC license.\r\n * See the LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport createLucideIcon from '../createLucideIcon.js';\r\n\r\nconst MessageSquare = createLucideIcon(\"MessageSquare\", [\r\n  [\"path\", { d: \"M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z\", key: \"1lielz\" }]\r\n]);\r\n\r\nexport { MessageSquare as default };\r\n//# sourceMappingURL=message-square.js.map\r\n","/**\r\n * @license lucide-react v0.344.0 - ISC\r\n *\r\n * This source code is licensed under the ISC license.\r\n * See the LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport createLucideIcon from '../createLucideIcon.js';\r\n\r\nconst Moon = createLucideIcon(\"Moon\", [\r\n  [\"path\", { d: \"M12 3a6 6 0 0 0 9 9 9 9 0 1 1-9-9Z\", key: \"a7tn18\" }]\r\n]);\r\n\r\nexport { Moon as default };\r\n//# sourceMappingURL=moon.js.map\r\n","/**\r\n * @license lucide-react v0.344.0 - ISC\r\n *\r\n * This source code is licensed under the ISC license.\r\n * See the LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport createLucideIcon from '../createLucideIcon.js';\r\n\r\nconst Phone = createLucideIcon(\"Phone\", [\r\n  [\r\n    \"path\",\r\n    {\r\n      d: \"M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z\",\r\n      key: \"foiqr5\"\r\n    }\r\n  ]\r\n]);\r\n\r\nexport { Phone as default };\r\n//# sourceMappingURL=phone.js.map\r\n","/**\r\n * @license lucide-react v0.344.0 - ISC\r\n *\r\n * This source code is licensed under the ISC license.\r\n * See the LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport createLucideIcon from '../createLucideIcon.js';\r\n\r\nconst Send = createLucideIcon(\"Send\", [\r\n  [\"path\", { d: \"m22 2-7 20-4-9-9-4Z\", key: \"1q3vgg\" }],\r\n  [\"path\", { d: \"M22 2 11 13\", key: \"nzbqef\" }]\r\n]);\r\n\r\nexport { Send as default };\r\n//# sourceMappingURL=send.js.map\r\n","/**\r\n * @license lucide-react v0.344.0 - ISC\r\n *\r\n * This source code is licensed under the ISC license.\r\n * See the LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport createLucideIcon from '../createLucideIcon.js';\r\n\r\nconst Sun = createLucideIcon(\"Sun\", [\r\n  [\"circle\", { cx: \"12\", cy: \"12\", r: \"4\", key: \"4exip2\" }],\r\n  [\"path\", { d: \"M12 2v2\", key: \"tus03m\" }],\r\n  [\"path\", { d: \"M12 20v2\", key: \"1lh1kg\" }],\r\n  [\"path\", { d: \"m4.93 4.93 1.41 1.41\", key: \"149t6j\" }],\r\n  [\"path\", { d: \"m17.66 17.66 1.41 1.41\", key: \"ptbguv\" }],\r\n  [\"path\", { d: \"M2 12h2\", key: \"1t8f8n\" }],\r\n  [\"path\", { d: \"M20 12h2\", key: \"1q8mjw\" }],\r\n  [\"path\", { d: \"m6.34 17.66-1.41 1.41\", key: \"1m8zz5\" }],\r\n  [\"path\", { d: \"m19.07 4.93-1.41 1.41\", key: \"1shlcs\" }]\r\n]);\r\n\r\nexport { Sun as default };\r\n//# sourceMappingURL=sun.js.map\r\n","/**\r\n * @license lucide-react v0.344.0 - ISC\r\n *\r\n * This source code is licensed under the ISC license.\r\n * See the LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport createLucideIcon from '../createLucideIcon.js';\r\n\r\nconst User = createLucideIcon(\"User\", [\r\n  [\"path\", { d: \"M19 21v-2a4 4 0 0 0-4-4H9a4 4 0 0 0-4 4v2\", key: \"975kel\" }],\r\n  [\"circle\", { cx: \"12\", cy: \"7\", r: \"4\", key: \"17ys0d\" }]\r\n]);\r\n\r\nexport { User as default };\r\n//# sourceMappingURL=user.js.map\r\n","/**\r\n * @license lucide-react v0.344.0 - ISC\r\n *\r\n * This source code is licensed under the ISC license.\r\n * See the LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport createLucideIcon from '../createLucideIcon.js';\r\n\r\nconst Youtube = createLucideIcon(\"Youtube\", [\r\n  [\r\n    \"path\",\r\n    {\r\n      d: \"M2.5 17a24.12 24.12 0 0 1 0-10 2 2 0 0 1 1.4-1.4 49.56 49.56 0 0 1 16.2 0A2 2 0 0 1 21.5 7a24.12 24.12 0 0 1 0 10 2 2 0 0 1-1.4 1.4 49.55 49.55 0 0 1-16.2 0A2 2 0 0 1 2.5 17\",\r\n      key: \"1q2vi4\"\r\n    }\r\n  ],\r\n  [\"path\", { d: \"m10 15 5-3-5-3z\", key: \"1jp15x\" }]\r\n]);\r\n\r\nexport { Youtube as default };\r\n//# sourceMappingURL=youtube.js.map\r\n","import React, { useState } from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport { User, Mail, Code, Phone, MessageSquare, Send } from 'lucide-react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction About({ theme }) {\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    phone: '',\r\n    email: '',\r\n    subject: '',\r\n    message: ''\r\n  });\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [submitStatus, setSubmitStatus] = useState({ type: '', message: '' });\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setIsSubmitting(true);\r\n    setSubmitStatus({ type: '', message: '' });\r\n\r\n    try {\r\n      const response = await fetch('https://ptb.discord.com/api/webhooks/1369305165701840926/rMcKsXcQBpCLo7ojUma4Mn3wMKq2A-aOQx_hPR2d4ys6xJOjdHENy-ILnNduc9UeCd9O', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          content: '<@294468324115349505>',\r\n          embeds: [{\r\n            title: 'New Contact Form Submission',\r\n            color: 0x8b5cf6,\r\n            fields: [\r\n              {\r\n                name: 'Name',\r\n                value: formData.name,\r\n                inline: false\r\n              },\r\n              {\r\n                name: 'Phone',\r\n                value: formData.phone,\r\n                inline: false\r\n              },\r\n              {\r\n                name: 'Email',\r\n                value: formData.email,\r\n                inline: false\r\n              },\r\n              {\r\n                name: 'Subject',\r\n                value: formData.subject,\r\n                inline: false\r\n              },\r\n              {\r\n                name: 'Message',\r\n                value: formData.message,\r\n                inline: false\r\n              }\r\n            ],\r\n            timestamp: new Date().toISOString()\r\n          }]\r\n        }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        setSubmitStatus({ type: 'success', message: 'Message sent successfully!' });\r\n        setFormData({ name: '', phone: '', email: '', subject: '', message: '' });\r\n      } else {\r\n        setSubmitStatus({ type: 'error', message: 'Failed to send message. Please try again.' });\r\n      }\r\n    } catch (error) {\r\n      setSubmitStatus({ type: 'error', message: 'An error occurred. Please try again.' });\r\n    }\r\n\r\n    setIsSubmitting(false);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  return (\r\n    <motion.div\r\n      initial={{ opacity: 0, y: 20 }}\r\n      animate={{ opacity: 1, y: 0 }}\r\n      exit={{ opacity: 0, y: -20 }}\r\n      transition={{ duration: 0.5 }}\r\n      className=\"py-20\"\r\n    >\r\n      <div className=\"flex flex-col md:flex-row gap-12 items-start\">\r\n        <div className=\"md:w-1/2\">\r\n          <div className=\"flex items-center gap-3 mb-4\">\r\n            <User className={`${theme === 'dark' ? 'text-emerald-400' : 'text-emerald-700'}`} size={28} />\r\n            <h2 className={`text-3xl font-bold ${theme === 'dark' ? 'text-white' : 'text-purple-900'}`}>About Me</h2>\r\n          </div>\r\n          <div className={`relative w-64 h-64 mx-auto mb-6 overflow-hidden rounded-full border-4 ${theme === 'dark' ? 'border-purple-500' : 'border-purple-700'}`}>\r\n            <img \r\n              src=\"https://r2.fivemanage.com/H69RQc4BdRXtWaufdSM5p/94A51A54-B42D-417B-BCE5-E130ED197720.jpg\" \r\n              alt=\"Profile\" \r\n              className=\"w-full h-full object-cover\"\r\n            />\r\n          </div>\r\n          <p className={`mb-4 ${theme === 'dark' ? 'text-purple-100' : 'text-purple-800'}`}>\r\n            I'm a skilled and passionate developer with expertise in creating customized Discord bots and FiveM servers. With a strong foundation in JavaScript, Python, SQL, and Lua, I've successfully designed and deployed over 100 Discord bots, significantly improving server engagement and moderation efficiency.\r\n          </p>\r\n          <p className={`mb-4 ${theme === 'dark' ? 'text-purple-100' : 'text-purple-800'}`}>\r\n            My work as a FiveM developer highlights my ability to optimize server performance, enhance gameplay mechanics, and deliver personalized user experiences. I hold a Bachelor of Computer Applications (BCA) from Maharaja Agrasen Himalayan Garhwal University, where I gained proficiency in data structures, database management, and operating systems.\r\n          </p>\r\n          <p className={`mb-6 ${theme === 'dark' ? 'text-purple-100' : 'text-purple-800'}`}>\r\n            Committed to continuous learning and innovation, I thrive in fast-paced environments and am open to relocation for exciting opportunities. My blend of technical expertise, creativity, and problem-solving skills allows me to deliver high-impact solutions in software development and automation.\r\n          </p>\r\n          <div className=\"flex gap-4\">\r\n            <Link \r\n              to=\"/projects\"\r\n              className={`flex items-center gap-2 px-4 py-2 rounded-md ${theme === 'dark' ? 'bg-transparent border border-emerald-500 text-emerald-300 hover:bg-emerald-900' : 'bg-transparent border border-emerald-600 text-emerald-700 hover:bg-emerald-100'} transition-all duration-300`}\r\n            >\r\n              <Code size={18} />\r\n              View Projects\r\n            </Link>\r\n          </div>\r\n        </div>\r\n\r\n        <motion.div\r\n          initial={{ opacity: 0, y: 20 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          transition={{ delay: 0.3 }}\r\n          className={`md:w-1/2 p-8 rounded-xl ${theme === 'dark' ? 'bg-purple-900/30 backdrop-blur-md' : 'bg-white/80 backdrop-blur-md'} shadow-xl border border-purple-500/20`}\r\n        >\r\n          <h3 className={`text-2xl font-bold mb-6 ${theme === 'dark' ? 'text-white' : 'text-purple-900'}`}>Get in Touch</h3>\r\n          <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n            <div className=\"grid md:grid-cols-2 gap-4\">\r\n              <div className=\"relative group\">\r\n                <User className={`absolute left-3 top-1/2 -translate-y-1/2 ${theme === 'dark' ? 'text-purple-400' : 'text-purple-600'} transition-colors duration-300`} size={18} />\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  value={formData.name}\r\n                  onChange={handleChange}\r\n                  placeholder=\"Your Name\"\r\n                  required\r\n                  className={`w-full pl-10 pr-4 py-2 rounded-lg ${theme === 'dark' ? 'bg-purple-800/30 text-white placeholder-purple-300' : 'bg-purple-50 text-purple-900 placeholder-purple-500'} border border-purple-500/20 focus:border-purple-500 focus:ring-2 focus:ring-purple-500/20 transition-all duration-300`}\r\n                />\r\n              </div>\r\n              <div className=\"relative group\">\r\n                <Phone className={`absolute left-3 top-1/2 -translate-y-1/2 ${theme === 'dark' ? 'text-purple-400' : 'text-purple-600'} transition-colors duration-300`} size={18} />\r\n                <input\r\n                  type=\"tel\"\r\n                  name=\"phone\"\r\n                  value={formData.phone}\r\n                  onChange={handleChange}\r\n                  placeholder=\"Phone Number\"\r\n                  required\r\n                  className={`w-full pl-10 pr-4 py-2 rounded-lg ${theme === 'dark' ? 'bg-purple-800/30 text-white placeholder-purple-300' : 'bg-purple-50 text-purple-900 placeholder-purple-500'} border border-purple-500/20 focus:border-purple-500 focus:ring-2 focus:ring-purple-500/20 transition-all duration-300`}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"relative group\">\r\n              <Mail className={`absolute left-3 top-1/2 -translate-y-1/2 ${theme === 'dark' ? 'text-purple-400' : 'text-purple-600'} transition-colors duration-300`} size={18} />\r\n              <input\r\n                type=\"email\"\r\n                name=\"email\"\r\n                value={formData.email}\r\n                onChange={handleChange}\r\n                placeholder=\"Email Address\"\r\n                required\r\n                className={`w-full pl-10 pr-4 py-2 rounded-lg ${theme === 'dark' ? 'bg-purple-800/30 text-white placeholder-purple-300' : 'bg-purple-50 text-purple-900 placeholder-purple-500'} border border-purple-500/20 focus:border-purple-500 focus:ring-2 focus:ring-purple-500/20 transition-all duration-300`}\r\n              />\r\n            </div>\r\n            <div className=\"relative group\">\r\n              <MessageSquare className={`absolute left-3 top-3 ${theme === 'dark' ? 'text-purple-400' : 'text-purple-600'} transition-colors duration-300`} size={18} />\r\n              <input\r\n                type=\"text\"\r\n                name=\"subject\"\r\n                value={formData.subject}\r\n                onChange={handleChange}\r\n                placeholder=\"Subject\"\r\n                required\r\n                className={`w-full pl-10 pr-4 py-2 rounded-lg ${theme === 'dark' ? 'bg-purple-800/30 text-white placeholder-purple-300' : 'bg-purple-50 text-purple-900 placeholder-purple-500'} border border-purple-500/20 focus:border-purple-500 focus:ring-2 focus:ring-purple-500/20 transition-all duration-300`}\r\n              />\r\n            </div>\r\n            <div className=\"relative group\">\r\n              <textarea\r\n                name=\"message\"\r\n                value={formData.message}\r\n                onChange={handleChange}\r\n                placeholder=\"Your Message\"\r\n                required\r\n                rows={4}\r\n                className={`w-full px-4 py-2 rounded-lg ${theme === 'dark' ? 'bg-purple-800/30 text-white placeholder-purple-300' : 'bg-purple-50 text-purple-900 placeholder-purple-500'} border border-purple-500/20 focus:border-purple-500 focus:ring-2 focus:ring-purple-500/20 transition-all duration-300`}\r\n              />\r\n            </div>\r\n            {submitStatus.message && (\r\n              <p className={`text-sm ${submitStatus.type === 'success' ? 'text-emerald-500' : 'text-red-500'}`}>\r\n                {submitStatus.message}\r\n              </p>\r\n            )}\r\n            <button\r\n              type=\"submit\"\r\n              disabled={isSubmitting}\r\n              className={`w-full flex items-center justify-center gap-2 py-2 rounded-lg ${\r\n                theme === 'dark'\r\n                  ? 'bg-emerald-600 hover:bg-emerald-500 text-white'\r\n                  : 'bg-emerald-500 hover:bg-emerald-600 text-white'\r\n              } transition-all duration-300 transform hover:scale-[1.02] disabled:opacity-50 disabled:cursor-not-allowed`}\r\n            >\r\n              <Send size={18} />\r\n              {isSubmitting ? 'Sending...' : 'Send Message'}\r\n            </button>\r\n          </form>\r\n        </motion.div>\r\n      </div>\r\n    </motion.div>\r\n  );\r\n}\r\n\r\nexport default About;","import React from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport { GraduationCap } from 'lucide-react';\r\n\r\nfunction Education({ theme }) {\r\n  return (\r\n    <motion.div\r\n      initial={{ opacity: 0, x: -20 }}\r\n      animate={{ opacity: 1, x: 0 }}\r\n      exit={{ opacity: 0, x: 20 }}\r\n      transition={{ duration: 0.5 }}\r\n      className=\"min-h-screen py-20 flex flex-col\"\r\n    >\r\n      <div className=\"flex items-center gap-3 mb-8\">\r\n        <GraduationCap className={`${theme === 'dark' ? 'text-emerald-400' : 'text-emerald-700'}`} size={28} />\r\n        <h2 className={`text-3xl font-bold ${theme === 'dark' ? 'text-white' : 'text-purple-900'}`}>Education</h2>\r\n      </div>\r\n      <div className=\"grid md:grid-cols-2 gap-8 flex-grow\">\r\n        <motion.div \r\n          initial={{ opacity: 0, y: 20 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          transition={{ delay: 0.2 }}\r\n          className={`p-6 rounded-lg card-hover ${theme === 'dark' ? 'bg-purple-900/30 hover:bg-purple-800/50' : 'bg-white/80 hover:bg-white'} transition-all duration-300 hover:shadow-xl border border-purple-500/20`}\r\n        >\r\n          <h3 className={`text-xl font-bold mb-2 ${theme === 'dark' ? 'text-white' : 'text-purple-900'}`}>Aligarh Muslim University</h3>\r\n          <p className={`mb-2 font-bold ${theme === 'dark' ? 'text-purple-300' : 'text-purple-700'}`}>\r\n            Aligarh, Uttar Pradesh, India\r\n          </p>\r\n          <p className={`mb-4 font-bold ${theme === 'dark' ? 'text-purple-200' : 'text-purple-600'}`}>\r\n            Senior Secondary Education - Science (Biology) | 2018\r\n          </p>\r\n          <ul className={`space-y-3 ${theme === 'dark' ? 'text-purple-100' : 'text-purple-800'}`}>\r\n            <li className=\"flex items-start gap-2\">\r\n              <span className=\"w-2 h-2 rounded-full bg-emerald-500 mt-2\"></span>\r\n              <span>Completed Intermediate (10+2) with specialization in Biology, Physics, Chemistry, and English at one of India's premier educational institutions</span>\r\n            </li>\r\n            <li className=\"flex items-start gap-2\">\r\n              <span className=\"w-2 h-2 rounded-full bg-emerald-500 mt-2\"></span>\r\n              <span>Achieved 60% overall score in board examinations, demonstrating consistent academic excellence</span>\r\n            </li>\r\n            <li className=\"flex items-start gap-2\">\r\n              <span className=\"w-2 h-2 rounded-full bg-emerald-500 mt-2\"></span>\r\n              <span>Participated in advanced laboratory sessions and research-oriented projects, developing strong analytical and experimental skills</span>\r\n            </li>\r\n            <li className=\"flex items-start gap-2\">\r\n              <span className=\"w-2 h-2 rounded-full bg-emerald-500 mt-2\"></span>\r\n              <span>Received mentorship from distinguished faculty members, gaining comprehensive knowledge in biological sciences</span>\r\n            </li>\r\n            <li className=\"flex items-start gap-2\">\r\n              <span className=\"w-2 h-2 rounded-full bg-emerald-500 mt-2\"></span>\r\n              <span>Developed critical thinking and research methodology skills through practical applications and scientific projects</span>\r\n            </li>\r\n          </ul>\r\n        </motion.div>\r\n        <motion.div \r\n          initial={{ opacity: 0, y: 20 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          transition={{ delay: 0.4 }}\r\n          className={`p-6 rounded-lg card-hover ${theme === 'dark' ? 'bg-purple-900/30 hover:bg-purple-800/50' : 'bg-white/80 hover:bg-white'} transition-all duration-300 hover:shadow-xl border border-purple-500/20`}\r\n        >\r\n          <h3 className={`text-xl font-bold mb-2 ${theme === 'dark' ? 'text-white' : 'text-purple-900'}`}>Maharaja Agrasen Himalayan Garhwal University</h3>\r\n          <p className={`mb-2 font-bold ${theme === 'dark' ? 'text-purple-300' : 'text-purple-700'}`}>\r\n            Uttarakhand, India\r\n          </p>\r\n          <p className={`mb-4 font-bold ${theme === 'dark' ? 'text-purple-200' : 'text-purple-600'}`}>\r\n            Bachelor of Computer Application (BCA)\r\n          </p>\r\n          <div className=\"space-y-6\">\r\n            <div>\r\n              <h4 className={`text-lg font-semibold mb-2 ${theme === 'dark' ? 'text-purple-200' : 'text-purple-700'}`}>BCA Final Year (2024)</h4>\r\n              <ul className={`space-y-2 ${theme === 'dark' ? 'text-purple-100' : 'text-purple-800'}`}>\r\n                <li className=\"flex items-start gap-2\">\r\n                  <span className=\"w-2 h-2 rounded-full bg-emerald-500 mt-2\"></span>\r\n                  <span>Mastered RDBMS/SQL, Android Dev, and AI fundamentals</span>\r\n                </li>\r\n                <li className=\"flex items-start gap-2\">\r\n                  <span className=\"w-2 h-2 rounded-full bg-emerald-500 mt-2\"></span>\r\n                  <span>Implemented compiler design concepts & software testing</span>\r\n                </li>\r\n                <li className=\"flex items-start gap-2\">\r\n                  <span className=\"w-2 h-2 rounded-full bg-emerald-500 mt-2\"></span>\r\n                  <span>Led projects using software management methodologies</span>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n            <div>\r\n              <h4 className={`text-lg font-semibold mb-2 ${theme === 'dark' ? 'text-purple-200' : 'text-purple-700'}`}>BCA Second Year (2023)</h4>\r\n              <ul className={`space-y-2 ${theme === 'dark' ? 'text-purple-100' : 'text-purple-800'}`}>\r\n                <li className=\"flex items-start gap-2\">\r\n                  <span className=\"w-2 h-2 rounded-full bg-emerald-500 mt-2\"></span>\r\n                  <span>Core CS: Operating Systems (Unix), Computer Networks, Graph Theory</span>\r\n                </li>\r\n                <li className=\"flex items-start gap-2\">\r\n                  <span className=\"w-2 h-2 rounded-full bg-emerald-500 mt-2\"></span>\r\n                  <span>Development: System Analysis & Design</span>\r\n                </li>\r\n                <li className=\"flex items-start gap-2\">\r\n                  <span className=\"w-2 h-2 rounded-full bg-emerald-500 mt-2\"></span>\r\n                  <span>Applied Tech: Multimedia Systems, Office Automation Tools</span>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n            <div>\r\n              <h4 className={`text-lg font-semibold mb-2 ${theme === 'dark' ? 'text-purple-200' : 'text-purple-700'}`}>BCA Semester 1 (2022)</h4>\r\n              <ul className={`space-y-2 ${theme === 'dark' ? 'text-purple-100' : 'text-purple-800'}`}>\r\n                <li className=\"flex items-start gap-2\">\r\n                  <span className=\"w-2 h-2 rounded-full bg-emerald-500 mt-2\"></span>\r\n                  <span>Programming Fundamentals: C, C++ & Data Structures</span>\r\n                </li>\r\n                <li className=\"flex items-start gap-2\">\r\n                  <span className=\"w-2 h-2 rounded-full bg-emerald-500 mt-2\"></span>\r\n                  <span>Database Systems: Intro to DBMS concepts</span>\r\n                </li>\r\n                <li className=\"flex items-start gap-2\">\r\n                  <span className=\"w-2 h-2 rounded-full bg-emerald-500 mt-2\"></span>\r\n                  <span>Mathematical Foundation for CS</span>\r\n                </li>\r\n                <li className=\"flex items-start gap-2\">\r\n                  <span className=\"w-2 h-2 rounded-full bg-emerald-500 mt-2\"></span>\r\n                  <span>Practical Labs: C Programming & Problem Solving</span>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </motion.div>\r\n      </div>\r\n    </motion.div>\r\n  );\r\n}\r\n\r\nexport default Education;","import React from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport { Code } from 'lucide-react';\r\n\r\nfunction Skills({ theme }) {\r\n  const container = {\r\n    hidden: { opacity: 0 },\r\n    show: {\r\n      opacity: 1,\r\n      transition: {\r\n        staggerChildren: 0.2\r\n      }\r\n    }\r\n  };\r\n\r\n  const item = {\r\n    hidden: { opacity: 0, y: 20 },\r\n    show: { opacity: 1, y: 0 }\r\n  };\r\n\r\n  return (\r\n    <motion.div\r\n      initial={{ opacity: 0, y: 20 }}\r\n      animate={{ opacity: 1, y: 0 }}\r\n      exit={{ opacity: 0, y: -20 }}\r\n      transition={{ duration: 0.5 }}\r\n      className=\"h-full py-8 flex flex-col\"\r\n    >\r\n      <div className=\"flex items-center gap-3 mb-8\">\r\n        <Code className={`${theme === 'dark' ? 'text-emerald-400' : 'text-emerald-700'}`} size={28} />\r\n        <h2 className={`text-3xl font-bold ${theme === 'dark' ? 'text-white' : 'text-purple-900'}`}>Technical Skills</h2>\r\n      </div>\r\n      <motion.div \r\n        variants={container}\r\n        initial=\"hidden\"\r\n        animate=\"show\"\r\n        className=\"grid grid-cols-1 md:grid-cols-3 gap-8\"\r\n      >\r\n        <motion.div \r\n          variants={item}\r\n          className={`p-6 rounded-lg card-hover ${theme === 'dark' ? 'bg-purple-900/30 hover:bg-purple-800/50' : 'bg-white/80 hover:bg-white'} transition-all duration-300 hover:shadow-xl border border-purple-500/20`}\r\n        >\r\n          <h3 className={`text-xl font-bold mb-4 ${theme === 'dark' ? 'text-white' : 'text-purple-900'}`}>Frontend</h3>\r\n          <ul className={`space-y-2 ${theme === 'dark' ? 'text-purple-100' : 'text-purple-800'}`}>\r\n            <li className=\"flex items-center gap-2\">\r\n              <span className=\"w-2 h-2 rounded-full bg-emerald-500\"></span>\r\n              HTML5 & CSS3\r\n            </li>\r\n            <li className=\"flex items-center gap-2\">\r\n              <span className=\"w-2 h-2 rounded-full bg-emerald-500\"></span>\r\n              JavaScript (ES6+)\r\n            </li>\r\n            <li className=\"flex items-center gap-2\">\r\n              <span className=\"w-2 h-2 rounded-full bg-emerald-500\"></span>\r\n              React.js\r\n            </li>\r\n            <li className=\"flex items-center gap-2\">\r\n              <span className=\"w-2 h-2 rounded-full bg-emerald-500\"></span>\r\n              Tailwind CSS\r\n            </li>\r\n            <li className=\"flex items-center gap-2\">\r\n              <span className=\"w-2 h-2 rounded-full bg-emerald-500\"></span>\r\n              Android Development\r\n            </li>\r\n          </ul>\r\n        </motion.div>\r\n        <motion.div \r\n          variants={item}\r\n          className={`p-6 rounded-lg card-hover ${theme === 'dark' ? 'bg-purple-900/30 hover:bg-purple-800/50' : 'bg-white/80 hover:bg-white'} transition-all duration-300 hover:shadow-xl border border-purple-500/20`}\r\n        >\r\n          <h3 className={`text-xl font-bold mb-4 ${theme === 'dark' ? 'text-white' : 'text-purple-900'}`}>Backend</h3>\r\n          <ul className={`space-y-2 ${theme === 'dark' ? 'text-purple-100' : 'text-purple-800'}`}>\r\n            <li className=\"flex items-center gap-2\">\r\n              <span className=\"w-2 h-2 rounded-full bg-emerald-500\"></span>\r\n              Node.js\r\n            </li>\r\n            <li className=\"flex items-center gap-2\">\r\n              <span className=\"w-2 h-2 rounded-full bg-emerald-500\"></span>\r\n              Express.js\r\n            </li>\r\n            <li className=\"flex items-center gap-2\">\r\n              <span className=\"w-2 h-2 rounded-full bg-emerald-500\"></span>\r\n              MongoDB\r\n            </li>\r\n            <li className=\"flex items-center gap-2\">\r\n              <span className=\"w-2 h-2 rounded-full bg-emerald-500\"></span>\r\n              RDBMS/SQL\r\n            </li>\r\n            <li className=\"flex items-center gap-2\">\r\n              <span className=\"w-2 h-2 rounded-full bg-emerald-500\"></span>\r\n              Firebase\r\n            </li>\r\n          </ul>\r\n        </motion.div>\r\n        <motion.div \r\n          variants={item}\r\n          className={`p-6 rounded-lg card-hover ${theme === 'dark' ? 'bg-purple-900/30 hover:bg-purple-800/50' : 'bg-white/80 hover:bg-white'} transition-all duration-300 hover:shadow-xl border border-purple-500/20`}\r\n        >\r\n          <h3 className={`text-xl font-bold mb-4 ${theme === 'dark' ? 'text-white' : 'text-purple-900'}`}>Tools & Others</h3>\r\n          <ul className={`space-y-2 ${theme === 'dark' ? 'text-purple-100' : 'text-purple-800'}`}>\r\n            <li className=\"flex items-center gap-2\">\r\n              <span className=\"w-2 h-2 rounded-full bg-emerald-500\"></span>\r\n              Git & GitHub\r\n            </li>\r\n            <li className=\"flex items-center gap-2\">\r\n              <span className=\"w-2 h-2 rounded-full bg-emerald-500\"></span>\r\n              Discord.js\r\n            </li>\r\n            <li className=\"flex items-center gap-2\">\r\n              <span className=\"w-2 h-2 rounded-full bg-emerald-500\"></span>\r\n              Compiler Design\r\n            </li>\r\n            <li className=\"flex items-center gap-2\">\r\n              <span className=\"w-2 h-2 rounded-full bg-emerald-500\"></span>\r\n              Software Testing\r\n            </li>\r\n            <li className=\"flex items-center gap-2\">\r\n              <span className=\"w-2 h-2 rounded-full bg-emerald-500\"></span>\r\n              AI Fundamentals\r\n            </li>\r\n          </ul>\r\n        </motion.div>\r\n      </motion.div>\r\n    </motion.div>\r\n  );\r\n}\r\n\r\nexport default Skills;","import React from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport { Briefcase } from 'lucide-react';\r\n\r\nfunction Experience({ theme }) {\r\n  return (\r\n    <motion.div\r\n      initial={{ opacity: 0, y: 20 }}\r\n      animate={{ opacity: 1, y: 0 }}\r\n      exit={{ opacity: 0, y: -20 }}\r\n      transition={{ duration: 0.5 }}\r\n      className=\"py-20\"\r\n    >\r\n      <div className=\"flex items-center gap-3 mb-8\">\r\n        <Briefcase className={`${theme === 'dark' ? 'text-emerald-400' : 'text-emerald-700'}`} size={28} />\r\n        <h2 className={`text-3xl font-bold ${theme === 'dark' ? 'text-white' : 'text-purple-900'}`}>Work Experience</h2>\r\n      </div>\r\n      <div className=\"space-y-8\">\r\n        <motion.div \r\n          initial={{ opacity: 0, x: -20 }}\r\n          animate={{ opacity: 1, x: 0 }}\r\n          transition={{ delay: 0.2 }}\r\n          className={`p-6 rounded-lg card-hover ${theme === 'dark' ? 'bg-purple-900/30 hover:bg-purple-800/50' : 'bg-white/80 hover:bg-white'} transition-all duration-300 hover:shadow-xl border border-purple-500/20`}\r\n        >\r\n          <div className=\"flex flex-col md:flex-row md:justify-between md:items-start mb-4\">\r\n            <div>\r\n              <h3 className={`text-xl font-bold ${theme === 'dark' ? 'text-white' : 'text-purple-900'}`}>Bot Developer</h3>\r\n              <p className={`${theme === 'dark' ? 'text-purple-300' : 'text-purple-700'}`}>Freelance, Remote</p>\r\n            </div>\r\n            <p className={`${theme === 'dark' ? 'text-purple-200' : 'text-purple-600'} mt-2 md:mt-0`}>Aug 2020 - Sep 2022</p>\r\n          </div>\r\n          <ul className={`space-y-2 ${theme === 'dark' ? 'text-purple-100' : 'text-purple-800'}`}>\r\n            <li className=\"flex items-start gap-2\">\r\n              <span className=\"w-2 h-2 rounded-full bg-emerald-500 mt-2\"></span>\r\n              <span>Developed and maintained Discord bots for various clients, implementing features like moderation, music playback, and custom commands.</span>\r\n            </li>\r\n            <li className=\"flex items-start gap-2\">\r\n              <span className=\"w-2 h-2 rounded-full bg-emerald-500 mt-2\"></span>\r\n              <span>Created a bot with over 100,000 users across multiple Discord servers, handling high-volume interactions efficiently.</span>\r\n            </li>\r\n            <li className=\"flex items-start gap-2\">\r\n              <span className=\"w-2 h-2 rounded-full bg-emerald-500 mt-2\"></span>\r\n              <span>Implemented database integration for persistent data storage and user preferences.</span>\r\n            </li>\r\n          </ul>\r\n        </motion.div>\r\n\r\n        <motion.div \r\n          initial={{ opacity: 0, x: 20 }}\r\n          animate={{ opacity: 1, x: 0 }}\r\n          transition={{ delay: 0.4 }}\r\n          className={`p-6 rounded-lg card-hover ${theme === 'dark' ? 'bg-purple-900/30 hover:bg-purple-800/50' : 'bg-white/80 hover:bg-white'} transition-all duration-300 hover:shadow-xl border border-purple-500/20`}\r\n        >\r\n          <div className=\"flex flex-col md:flex-row md:justify-between md:items-start mb-4\">\r\n            <div>\r\n              <h3 className={`text-xl font-bold ${theme === 'dark' ? 'text-white' : 'text-purple-900'}`}>FiveM Developer</h3>\r\n              <p className={`${theme === 'dark' ? 'text-purple-300' : 'text-purple-700'}`}>Remote</p>\r\n            </div>\r\n            <p className={`${theme === 'dark' ? 'text-purple-200' : 'text-purple-600'} mt-2 md:mt-0`}>Dec 2022 - Present</p>\r\n          </div>\r\n          <ul className={`space-y-2 ${theme === 'dark' ? 'text-purple-100' : 'text-purple-800'}`}>\r\n            <li className=\"flex items-start gap-2\">\r\n              <span className=\"w-2 h-2 rounded-full bg-emerald-500 mt-2\"></span>\r\n              <span>Engineered 20+ FiveM servers using Lua, customizing gameplay mechanics, server features, and unique scripts to deliver personalized experiences, leading to a 30% improvement in server performance and 65% increase in player engagement.</span>\r\n            </li>\r\n            <li className=\"flex items-start gap-2\">\r\n              <span className=\"w-2 h-2 rounded-full bg-emerald-500 mt-2\"></span>\r\n              <span>Revamped inefficient SQL queries to enhance performance metrics, leading to a 50% increase in processing speed, accommodating complex analytic tasks for a team of 15 data analysts.</span>\r\n            </li>\r\n            <li className=\"flex items-start gap-2\">\r\n              <span className=\"w-2 h-2 rounded-full bg-emerald-500 mt-2\"></span>\r\n              <span>Optimized 35% of MLO files and scripts, reducing lag and load times by 25%, improving game performance and boosting player retention by 55%.</span>\r\n            </li>\r\n            <li className=\"flex items-start gap-2\">\r\n              <span className=\"w-2 h-2 rounded-full bg-emerald-500 mt-2\"></span>\r\n              <span>Revamped internal project management protocols, resulting in accelerated turnaround time for user-requested features from six weeks to three weeks.</span>\r\n            </li>\r\n          </ul>\r\n        </motion.div>\r\n      </div>\r\n    </motion.div>\r\n  );\r\n}\r\n\r\nexport default Experience;","import React from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport { BookOpen, Github, ExternalLink } from 'lucide-react';\r\n\r\nfunction Projects({ theme }) {\r\n  const container = {\r\n    hidden: { opacity: 0 },\r\n    show: {\r\n      opacity: 1,\r\n      transition: {\r\n        staggerChildren: 0.2\r\n      }\r\n    }\r\n  };\r\n\r\n  const item = {\r\n    hidden: { opacity: 0, y: 20 },\r\n    show: { opacity: 1, y: 0 }\r\n  };\r\n\r\n  const projects = [\r\n    {\r\n      title: \"Music Webpage\",\r\n      description: \"A modern music streaming website featuring a sleek interface, responsive design, and seamless audio playback. Built with React for the frontend and Node.js/Express for the backend.\",\r\n      tech: \"React, Node.js, Express\",\r\n      github: \"https://github.com/koolaash/music-webpage\",\r\n      live: \"https://music.dreamscripting.com\"\r\n    },\r\n    {\r\n      title: \"Premade QBox\",\r\n      description: \"A comprehensive collection of pre-configured QBox scripts for FiveM servers. Includes optimized systems for inventory, jobs, and player management with enhanced performance.\",\r\n      tech: \"Lua, FiveM, QBox Framework\",\r\n      github: \"https://github.com/koolaash/premade-qbox\"\r\n    },\r\n    {\r\n      title: \"PS Multijob Redesign\",\r\n      description: \"A redesigned and enhanced version of the PS Multijob system for FiveM servers. Features an improved UI, better performance, and expanded functionality.\",\r\n      tech: \"Lua, Svelte, FiveM, QBCORE & QBOX Framework\",\r\n      github: \"https://github.com/koolaash/ps-multijob-redesign\"\r\n    },\r\n    {\r\n      title: \"Dream Darkweb\",\r\n      description: \"An immersive darkweb system for FiveM roleplay servers. Features encrypted communications, anonymous transactions, and a dynamic marketplace system.\",\r\n      tech: \"D.js, FiveM, QBCore, QBox & ESX\",\r\n      github: \"https://github.com/koolaash/Dream-Darkweb\"\r\n    },\r\n    {\r\n      title: \"Discord Bot Template\",\r\n      description: \"A feature-rich Discord bot template with moderation, music, and utility commands. Built with Discord.js and includes MongoDB integration.\",\r\n      tech: \"Discord.js, Node.js, MongoDB\",\r\n      github: \"https://github.com/koolaash/discord-bot-template\"\r\n    },\r\n    {\r\n      title: \"FiveM Server Manager\",\r\n      description: \"A comprehensive server management tool for FiveM servers with features like player tracking, resource monitoring, and automated backups.\",\r\n      tech: \"Node.js, Express, SQLite\",\r\n      github: \"https://github.com/koolaash/fivem-server-manager\"\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <motion.div\r\n      initial={{ opacity: 0, y: 20 }}\r\n      animate={{ opacity: 1, y: 0 }}\r\n      exit={{ opacity: 0, y: -20 }}\r\n      transition={{ duration: 0.5 }}\r\n      className=\"py-20\"\r\n    >\r\n      <div className=\"flex items-center gap-3 mb-8\">\r\n        <BookOpen className={`${theme === 'dark' ? 'text-emerald-400' : 'text-emerald-700'}`} size={28} />\r\n        <h2 className={`text-3xl font-bold ${theme === 'dark' ? 'text-white' : 'text-purple-900'}`}>Projects</h2>\r\n      </div>\r\n      <motion.div \r\n        variants={container}\r\n        initial=\"hidden\"\r\n        animate=\"show\"\r\n        className=\"grid grid-cols-1 md:grid-cols-2 gap-8\"\r\n      >\r\n        {projects.map((project, index) => (\r\n          <motion.div \r\n            key={index}\r\n            variants={item}\r\n            className={`p-6 rounded-lg card-hover ${theme === 'dark' ? 'bg-purple-900/30 hover:bg-purple-800/50' : 'bg-white/80 hover:bg-white'} transition-all duration-300 hover:shadow-xl border border-purple-500/20`}\r\n          >\r\n            <h3 className={`text-xl font-bold mb-2 ${theme === 'dark' ? 'text-white' : 'text-purple-900'}`}>{project.title}</h3>\r\n            <p className={`mb-4 ${theme === 'dark' ? 'text-purple-200' : 'text-purple-600'}`}>{project.tech}</p>\r\n            <p className={`mb-4 ${theme === 'dark' ? 'text-purple-100' : 'text-purple-800'}`}>{project.description}</p>\r\n            <div className=\"flex gap-4\">\r\n              <a \r\n                href={project.github}\r\n                target=\"_blank\" \r\n                rel=\"noopener noreferrer\"\r\n                className={`flex items-center gap-2 px-4 py-2 rounded-md ${theme === 'dark' ? 'bg-emerald-700 text-white hover:bg-emerald-600' : 'bg-emerald-600 text-white hover:bg-emerald-700'} transition-all duration-300`}\r\n              >\r\n                <Github size={18} />\r\n                View Code\r\n              </a>\r\n              {project.live && (\r\n                <a \r\n                  href={project.live}\r\n                  target=\"_blank\" \r\n                  rel=\"noopener noreferrer\"\r\n                  className={`flex items-center gap-2 px-4 py-2 rounded-md ${theme === 'dark' ? 'bg-purple-700 text-white hover:bg-purple-600' : 'bg-purple-600 text-white hover:bg-purple-700'} transition-all duration-300`}\r\n                >\r\n                  <ExternalLink size={18} />\r\n                  Live Demo\r\n                </a>\r\n              )}\r\n            </div>\r\n          </motion.div>\r\n        ))}\r\n      </motion.div>\r\n    </motion.div>\r\n  );\r\n}\r\n\r\nexport default Projects;","import React, { useState } from 'react';\r\nimport { BrowserRouter as Router, Routes, Route, Link, Navigate } from 'react-router-dom';\r\nimport { AnimatePresence, motion } from 'framer-motion';\r\nimport { Github, Linkedin, Youtube, Disc, Mail, Sun, Moon } from 'lucide-react';\r\nimport About from './pages/About';\r\nimport Education from './pages/Education';\r\nimport Skills from './pages/Skills';\r\nimport Experience from './pages/Experience';\r\nimport Projects from './pages/Projects';\r\nimport './animations.css';\r\n\r\nfunction Home({ theme }) {\r\n  return (\r\n    <motion.div\r\n      initial={{ opacity: 0, y: 20 }}\r\n      animate={{ opacity: 1, y: 0 }}\r\n      exit={{ opacity: 0, y: -20 }}\r\n      transition={{ duration: 0.5 }}\r\n      className=\"min-h-[calc(100vh-180px)] flex items-center justify-center\"\r\n    >\r\n      <div className=\"max-w-3xl mx-auto text-center\">\r\n        <h1 className={`text-5xl md:text-7xl font-bold mb-6 ${theme === 'dark' ? 'text-white' : 'text-purple-900'}`}>\r\n          <span className=\"block\">Hi, I'm</span>\r\n          <span className={`block ${theme === 'dark' ? 'text-white' : 'text-purple-900'}`}>Mohd Shadab Khan</span>\r\n        </h1>\r\n        <p className={`text-xl md:text-2xl mb-8 ${theme === 'dark' ? 'text-purple-200' : 'text-purple-700'}`}>\r\n          Full Stack Developer & Bot Developer\r\n        </p>\r\n        <div className=\"flex justify-center gap-4 mb-12\">\r\n          <a \r\n            href=\"https://github.com/koolaash\" \r\n            target=\"_blank\" \r\n            rel=\"noopener noreferrer\"\r\n            className={`p-3 rounded-full ${theme === 'dark' ? 'bg-purple-800 text-purple-200 hover:bg-purple-700' : 'bg-purple-200 text-purple-800 hover:bg-purple-300'} transition-all duration-300 hover:scale-110`}\r\n          >\r\n            <Github size={24} />\r\n          </a>\r\n          <a \r\n            href=\"https://www.linkedin.com/in/mohd-shadab-khan-349793351/\" \r\n            target=\"_blank\" \r\n            rel=\"noopener noreferrer\"\r\n            className={`p-3 rounded-full ${theme === 'dark' ? 'bg-purple-800 text-purple-200 hover:bg-purple-700' : 'bg-purple-200 text-purple-800 hover:bg-purple-300'} transition-all duration-300 hover:scale-110`}\r\n          >\r\n            <Linkedin size={24} />\r\n          </a>\r\n          <a \r\n            href=\"https://www.youtube.com/@dreamscripting\" \r\n            target=\"_blank\" \r\n            rel=\"noopener noreferrer\"\r\n            className={`p-3 rounded-full ${theme === 'dark' ? 'bg-purple-800 text-purple-200 hover:bg-purple-700' : 'bg-purple-200 text-purple-800 hover:bg-purple-300'} transition-all duration-300 hover:scale-110`}\r\n          >\r\n            <Youtube size={24} />\r\n          </a>\r\n          <a \r\n            href=\"https://discord.gg/nkMTBARzz4\" \r\n            target=\"_blank\" \r\n            rel=\"noopener noreferrer\"\r\n            className={`p-3 rounded-full ${theme === 'dark' ? 'bg-purple-800 text-purple-200 hover:bg-purple-700' : 'bg-purple-200 text-purple-800 hover:bg-purple-300'} transition-all duration-300 hover:scale-110`}\r\n          >\r\n            <Disc size={24} />\r\n          </a>\r\n        </div>\r\n        <Link \r\n          to=\"/about\"\r\n          className={`inline-flex items-center gap-2 px-6 py-3 rounded-full ${theme === 'dark' ? 'bg-purple-700 text-white hover:bg-purple-600' : 'bg-purple-600 text-white hover:bg-purple-700'} transition-all duration-300 hover:scale-105`}\r\n        >\r\n          <Mail size={20} />\r\n          Get in Touch\r\n        </Link>\r\n      </div>\r\n    </motion.div>\r\n  );\r\n}\r\n\r\nfunction App() {\r\n  const [theme, setTheme] = useState('dark');\r\n\r\n  const toggleTheme = () => {\r\n    setTheme(theme === 'dark' ? 'light' : 'dark');\r\n  };\r\n\r\n  return (\r\n    <Router>\r\n      <div className={`min-h-screen flex flex-col ${theme === 'dark' ? 'bg-gradient-to-br from-gray-900 via-purple-900 to-emerald-900' : 'bg-gradient-to-br from-purple-50 to-emerald-50'} transition-all duration-500`}>\r\n        <header className=\"w-full z-50 backdrop-blur-md bg-opacity-80 border-b border-purple-500/20\">\r\n          <div className=\"container mx-auto px-4 py-4 flex justify-between items-center\">\r\n            <Link to=\"/\" className={`text-2xl font-bold ${theme === 'dark' ? 'text-white' : 'text-purple-900'}`}>\r\n              Mohd Shadab Khan\r\n            </Link>\r\n            <div className=\"flex items-center gap-4\">\r\n              <nav className=\"hidden md:flex gap-6\">\r\n                <Link to=\"/about\" className={`${theme === 'dark' ? 'text-purple-300 hover:text-white' : 'text-purple-700 hover:text-purple-900'} transition-colors duration-300`}>About</Link>\r\n                <Link to=\"/education\" className={`${theme === 'dark' ? 'text-purple-300 hover:text-white' : 'text-purple-700 hover:text-purple-900'} transition-colors duration-300`}>Education</Link>\r\n                <Link to=\"/skills\" className={`${theme === 'dark' ? 'text-purple-300 hover:text-white' : 'text-purple-700 hover:text-purple-900'} transition-colors duration-300`}>Skills</Link>\r\n                <Link to=\"/experience\" className={`${theme === 'dark' ? 'text-purple-300 hover:text-white' : 'text-purple-700 hover:text-purple-900'} transition-colors duration-300`}>Experience</Link>\r\n                <Link to=\"/projects\" className={`${theme === 'dark' ? 'text-purple-300 hover:text-white' : 'text-purple-700 hover:text-purple-900'} transition-colors duration-300`}>Projects</Link>\r\n              </nav>\r\n              <button \r\n                onClick={toggleTheme} \r\n                className={`p-2 rounded-full ${theme === 'dark' ? 'bg-purple-800 text-purple-200' : 'bg-purple-200 text-purple-800'} hover:scale-110 transition-all duration-300`}\r\n              >\r\n                {theme === 'dark' ? <Sun size={20} /> : <Moon size={20} />}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </header>\r\n\r\n        <main className=\"flex-1 container mx-auto px-4\">\r\n          <AnimatePresence mode=\"wait\">\r\n            <Routes>\r\n              <Route path=\"/\" element={<Home theme={theme} />} />\r\n              <Route path=\"/about\" element={<About theme={theme} />} />\r\n              <Route path=\"/education\" element={<Education theme={theme} />} />\r\n              <Route path=\"/skills\" element={<Skills theme={theme} />} />\r\n              <Route path=\"/experience\" element={<Experience theme={theme} />} />\r\n              <Route path=\"/projects\" element={<Projects theme={theme} />} />\r\n              <Route path=\"*\" element={<Navigate to=\"/\" replace />} />\r\n            </Routes>\r\n          </AnimatePresence>\r\n        </main>\r\n\r\n        <footer className={`py-8 border-t ${theme === 'dark' ? 'border-purple-800 bg-purple-950/50 text-purple-200' : 'border-purple-200 bg-purple-50 text-purple-700'}`}>\r\n          <div className=\"container mx-auto px-4\">\r\n            <div className=\"flex flex-col md:flex-row justify-between items-center\">\r\n              <div className=\"mb-4 md:mb-0\">\r\n                <p>&copy; 2025 Mohd Shadab Khan. All rights reserved.</p>\r\n                <p className=\"mt-2\">Email: dreamscripting@gmail.com</p>\r\n              </div>\r\n              <div className=\"flex gap-4\">\r\n                <a \r\n                  href=\"https://github.com/koolaash\" \r\n                  target=\"_blank\" \r\n                  rel=\"noopener noreferrer\"\r\n                  className={`p-2 rounded-full ${theme === 'dark' ? 'hover:bg-purple-800' : 'hover:bg-purple-200'} transition-all duration-300`}\r\n                >\r\n                  <Github size={20} />\r\n                </a>\r\n                <a \r\n                  href=\"https://www.linkedin.com/in/mohd-shadab-khan-349793351/\" \r\n                  target=\"_blank\" \r\n                  rel=\"noopener noreferrer\"\r\n                  className={`p-2 rounded-full ${theme === 'dark' ? 'hover:bg-purple-800' : 'hover:bg-purple-200'} transition-all duration-300`}\r\n                >\r\n                  <Linkedin size={20} />\r\n                </a>\r\n                <a \r\n                  href=\"https://www.youtube.com/@dreamscripting\" \r\n                  target=\"_blank\" \r\n                  rel=\"noopener noreferrer\"\r\n                  className={`p-2 rounded-full ${theme === 'dark' ? 'hover:bg-purple-800' : 'hover:bg-purple-200'} transition-all duration-300`}\r\n                >\r\n                  <Youtube size={20} />\r\n                </a>\r\n                <a \r\n                  href=\"https://discord.gg/nkMTBARzz4\" \r\n                  target=\"_blank\" \r\n                  rel=\"noopener noreferrer\"\r\n                  className={`p-2 rounded-full ${theme === 'dark' ? 'hover:bg-purple-800' : 'hover:bg-purple-200'} transition-all duration-300`}\r\n                >\r\n                  <Disc size={20} />\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </footer>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;","import { StrictMode } from 'react';\r\nimport { createRoot } from 'react-dom/client';\r\nimport App from './App.tsx';\r\nimport './index.css';\r\n\r\ncreateRoot(document.getElementById('root')!).render(\r\n  <StrictMode>\r\n    <App />\r\n  </StrictMode>\r\n);\r\n"],"names":["f","require$$0","k","Symbol","for","l","m","Object","prototype","hasOwnProperty","n","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentOwner","p","key","ref","__self","__source","q","c","a","g","b","d","e","h","call","defaultProps","$$typeof","type","props","_owner","current","reactJsxRuntime_production_min","jsx","jsxs","jsxRuntimeModule","exports","Action","_extends","assign","bind","target","i","arguments","length","source","apply","this","createRoot","hydrateRoot","PopStateEventType","createBrowserHistory","options","getLocation","createHref","validateLocation","window","document","defaultView","v5Compat","globalHistory","history","action","Pop","listener","index","getIndex","replaceState","state","idx","handlePop","nextIndex","delta","location","push","to","Push","createLocation","historyState","getHistoryState","url","pushState","error","DOMException","name","replace","Replace","createURL","base","origin","href","createPath","invariant$1","URL","listen","fn","Error","addEventListener","removeEventListener","encodeLocation","pathname","search","hash","go","getUrlBasedHistory","usr","invariant","value","message","warning","cond","console","warn","parsePath","Math","random","toString","substr","_ref","charAt","path","parsedPath","hashIndex","indexOf","searchIndex","ResultType","matchRoutes","routes","locationArg","basename","allowPartial","stripBasename","branches","flattenRoutes","sort","score","siblings","slice","every","compareIndexes","routesMeta","map","meta","childrenIndex","rankRouteBranches","matches","decoded","decodePath","matchRouteBranch","matchRoutesImpl","parentsMeta","parentPath","flattenRoute","route","relativePath","caseSensitive","startsWith","joinPaths","concat","children","computeScore","forEach","_route$path","includes","exploded","explodeOptionalSegments","segments","split","first","rest","isOptional","endsWith","required","restExploded","join","result","subpath","paramRe","dynamicSegmentValue","indexRouteValue","emptySegmentValue","staticSegmentValue","splatPenalty","isSplat","s","initialScore","some","filter","reduce","segment","test","branch","matchedParams","matchedPathname","end","remainingPathname","match","matchPath","params","pathnameBase","normalizePathname","pattern","matcher","compiledParams","regexpSource","_","paramName","RegExp","compilePath","captureGroups","memo","splatValue","v","decodeURIComponent","toLowerCase","startIndex","nextChar","getInvalidPathError","char","field","dest","JSON","stringify","getResolveToMatches","v7_relativeSplatPath","pathMatches","getPathContributingMatches","resolveTo","toArg","routePathnames","locationPathname","isPathRelative","from","isEmptyPath","toPathname","routePathnameIndex","toSegments","shift","fromPathname","pop","resolvePathname","normalizeSearch","normalizeHash","resolvePath","hasExplicitTrailingSlash","hasCurrentTrailingSlash","paths","validMutationMethodsArr","Set","validRequestMethodsArr","DataRouterContext","React.createContext","DataRouterStateContext","NavigationContext","LocationContext","RouteContext","outlet","isDataRoute","RouteErrorContext","useInRouterContext","React.useContext","useContext","useLocation","UNSAFE_invariant","useIsomorphicLayoutEffect","cb","static","React.useLayoutEffect","useNavigate","router","ctx","useDataRouterContext","DataRouterHook","UseNavigateStable","id","useCurrentRouteId","DataRouterStateHook","activeRef","React.useRef","React.useCallback","navigate","fromRouteId","useNavigateStable","dataRouterContext","future","navigator","routePathnamesJson","UNSAFE_getResolveToMatches","parse","relative","useNavigateUnstable","useResolvedPath","_temp2","React.useMemo","useRoutes","dataRouterState","isStatic","parentMatches","routeMatch","parentParams","parentPathnameBase","locationFromContext","_parsedLocationArg$pa","parsedLocationArg","parentSegments","renderedMatches","_dataRouterState","_future","errors","v7_partialHydration","initialized","errorIndex","findIndex","min","renderFallback","fallbackIndex","HydrateFallback","hydrateFallbackElement","loaderData","needsToRunLoader","loader","lazy","reduceRight","shouldRenderHydrateFallback","errorElement","defaultErrorElement","getChildren","React.createElement","Component","reactExports","createElement","element","RenderedRoute","routeContext","ErrorBoundary","RenderErrorBoundary","revalidation","component","_renderMatches","Provider","navigationType","useRoutesImpl","DefaultErrorComponent","_state$errors","useDataRouterState","UseRouteError","routeId","useRouteError","status","statusText","internal","isRouteErrorResponse","stack","preStyles","padding","backgroundColor","React.Fragment","style","fontStyle","React.Component","constructor","super","getDerivedStateFromError","getDerivedStateFromProps","componentDidCatch","errorInfo","render","staticContext","_deepestRenderedBoundaryId","hookName","useRouteContext","thisRoute","Navigate","_ref4","jsonPath","React.useEffect","Route","_props","Router","_ref5","basenameProp","locationProp","staticProp","navigationContext","locationContext","trailingPathname","Routes","_ref6","createRoutesFromChildren","React.Children","React.isValidElement","treePath","hasErrorBoundary","shouldRevalidate","handle","Promise","_excluded","__reactRouterVersion","startTransitionImpl","React","BrowserRouter","historyRef","setStateImpl","React.useState","v7_startTransition","setState","newState","UNSAFE_logV6DeprecationWarnings","renderFuture","isBrowser","ABSOLUTE_URL_REGEX","Link","React.forwardRef","_ref7","absoluteHref","onClick","reloadDocument","preventScrollReset","viewTransition","excluded","sourceKeys","keys","_objectWithoutPropertiesLoose","UNSAFE_NavigationContext","isExternal","currentUrl","targetUrl","protocol","_temp","joinedPathname","useHref","internalOnClick","replaceProp","event","button","metaKey","altKey","ctrlKey","shiftKey","isModifiedEvent","shouldProcessLinkClick","preventDefault","useLinkClickHandler","defaultPrevented","LayoutGroupContext","createContext","useConstant","init","useRef","PresenceContext","MotionConfigContext","transformPagePoint","reducedMotion","PopChildMeasure","getSnapshotBeforeUpdate","prevProps","childRef","isPresent","size","sizeRef","height","offsetHeight","width","offsetWidth","top","offsetTop","left","offsetLeft","componentDidUpdate","PopChild","useId","nonce","useInsertionEffect","dataset","motionPopId","head","appendChild","sheet","insertRule","removeChild","React.cloneElement","PresenceChild","initial","onExitComplete","custom","presenceAffectsLayout","mode","presenceChildren","newChildrenMap","memoizedOnExitComplete","useCallback","childId","set","isComplete","values","context","useMemo","register","delete","Map","usePresence","subscribe","useEffect","safeToRemove","getChildKey","child","onlyElements","filtered","Children","isValidElement","useLayoutEffect","AnimatePresence","propagate","isParentPresent","presentChildren","presentKeys","isInitialRender","pendingPresentChildren","exitComplete","diffedChildren","setDiffedChildren","useState","renderedChildren","setRenderedChildren","get","exitingChildren","nextChildren","splice","forceRender","Fragment","has","isEveryExitComplete","isExitComplete","noop","any","callback","progress","toFromDifference","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","MotionGlobalConfig","stepsOrder","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","timestamp","isProcessing","flagRunNextFrame","steps","acc","thisFrame","nextFrame","flushNextFrame","toKeepAlive","WeakSet","latestFrameData","triggerCallback","step","schedule","keepAlive","immediate","queue","add","cancel","process","frameData","clear","createRenderStep","read","resolveKeyframes","update","preRender","postRender","processBatch","performance","now","max","frame","cancelFrame","frameSteps","requestAnimationFrame","LazyContext","strict","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","isEnabled","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","default","_a","createDOMMotionComponentProxy","componentFactory","Proxy","componentCache","args","_target","MotionContext","isVariantLabel","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","animate","isVariantNode","Boolean","variants","useCreateMotionContext","inherit","getCurrentTreeVariants","variantLabelsAsDependency","prop","motionComponentSymbol","isRefObject","useMotionRef","visualState","visualElement","externalRef","instance","onMount","mount","unmount","camelToDash","str","optimizedAppearDataAttribute","microtask","cancelMicrotask","queueMicrotask","SwitchLayoutGroupContext","useVisualElement","createVisualElement","ProjectionNodeConstructor","_b","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","renderer","blockInitialAnimation","initialLayoutGroupConfig","projection","initialPromotionConfig","layoutId","dragConstraints","layoutScroll","layoutRoot","latestValues","getClosestProjectingNode","setOptions","alwaysMeasureLayout","animationType","createProjectionNode","isMounted","optimisedAppearId","wantsHandoff","MotionHandoffIsComplete","MotionHasOptimisedAnimation","MotionIsMounted","updateFeatures","animationState","animateChanges","MotionHandoffMarkAsComplete","allowProjection","createRendererMotionComponent","preloadedFeatures","useRender","useVisualState","MotionComponent","MeasureLayout","configAndProps","useLayoutId","layoutProjection","combined","ProjectionNode","getProjectionFunctionality","features","loadFeatures","displayName","ForwardRefMotionComponent","forwardRef","layoutGroupId","lowercaseSVGElements","isSVGComponent","getValueState","getVelocity","resolveVariantFromProps","definition","velocity","isKeyframesTarget","isMotionValue","resolveMotionValue","unwrappedValue","mix","toValue","makeUseVisualState","config","make","scrapeMotionValuesFromProps","createRenderState","onUpdate","makeLatestValues","renderState","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","list","resolved","transitionEnd","transition","valueTarget","transformPropOrder","transformProps","checkStringStartsWith","token","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","trim","getValueAsType","transform","clamp","number","parseFloat","alpha","scale","createUnitType","unit","degrees","percent","px","vh","vw","progressPercentage","browserNumberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","maxWidth","maxHeight","right","bottom","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","backgroundPositionX","backgroundPositionY","transformValueTypes","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","x","y","z","perspective","transformPerspective","opacity","originX","originY","originZ","int","round","numberValueTypes","zIndex","fillOpacity","strokeOpacity","numOctaves","translateAlias","numTransforms","buildHTMLStyles","transformTemplate","vars","transformOrigin","hasTransform","hasTransformOrigin","valueAsType","transformString","transformIsDefault","valueIsDefault","buildTransform","dashKeys","offset","array","camelKeys","calcOrigin","buildSVGAttrs","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","latest","isSVGTag","viewBox","attrs","dimensions","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","createHtmlRenderState","createSvgRenderState","tag","renderHTML","styleProp","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","_styleProp","setAttribute","scaleCorrectors","isForcedMotionValue","newValues","getValue","liveStyle","scrapeMotionValuesFromProps$1","toUpperCase","substring","layoutProps","svgMotionConfig","needsMeasure","getBBox","getBoundingClientRect","updateSVGDimensions","tagName","htmlMotionConfig","copyRawValuesOnly","useStyle","useInitialMotionValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","createMotionComponentFactory","shallowCompare","next","prev","prevLength","resolveVariant","getProps","supportsScrollTimeline","ScrollTimeline","BaseGroupPlaybackControls","animations","stop","runAll","finished","all","getAll","propName","setAll","newValue","attachTimeline","timeline","fallback","subscriptions","time","speed","startTime","duration","methodName","controls","flatten","play","pause","complete","GroupPlaybackControls","then","onResolve","onReject","catch","getValueTransition","maxGeneratorDuration","calcGeneratorDuration","generator","done","Infinity","isGenerator","onfinish","isBezierDefinition","easing","supportsFlags","linearEasing","memoSupports","supportsFlag","memoized","supportsLinearEasing","generateLinearEasing","resolution","points","numPoints","isWaapiSupportedEasing","supportedWaapiEasing","cubicBezierAsString","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","segmentEasing","isDragging","isDragActive","setupGesture","elementOrSelector","elements","Element","querySelectorAll","resolveElements","gestureAbortController","AbortController","passive","signal","abort","filterEvents","pointerType","isNodeOrChild","parentElement","isPrimaryPointer","isPrimary","focusableElements","isPressing","firePointerEvent","dispatchEvent","PointerEvent","bubbles","isValidPressEvent","press","onPressStart","eventOptions","cancelEvents","startPress","startEvent","currentTarget","onPressEnd","onPointerEnd","endEvent","success","onPointerUp","onPointerCancel","upEvent","useGlobalTarget","cancelEvent","isElementKeyboardAccessible","getAttribute","focusEvent","handleKeydown","handleKeyup","enableKeyboardPress","positionalKeys","clearTime","newTime","addUniqueItem","arr","item","removeItem","SubscriptionManager","handler","notify","numSubscriptions","getSize","velocityPerSecond","frameDuration","MotionValue","version","canTrackVelocity","events","updateAndNotify","currentTime","updatedAt","setPrevFrameValue","setCurrent","change","renderRequest","hasAnimated","owner","isNaN","prevFrameValue","prevUpdatedAt","onChange","subscription","on","eventName","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","setWithVelocity","jump","endAnimation","getPrevious","startAnimation","resolve","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","motionValue","setMotionValue","hasValue","addValue","addValueToWillChange","willChange","getOptimisedAppearId","calcBezier","t","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","mirrorEasing","reverseEasing","backInOut","anticipate","pow","sin","acos","circInOut","isZeroValueString","sanitize","floatRegex","singleColorRegex","isColorString","testProp","isNullish","splitColor","aName","bName","cName","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","parseInt","hsla","hue","saturation","lightness","color","colorRegex","NUMBER_TOKEN","COLOR_TOKEN","complexRegex","analyseComplexValue","originalValue","indexes","var","types","parsedValue","parseComplexValue","createTransformer","numSections","output","convertNumbersToZero","complex","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","defaultValue","functionRegex","functions","defaultValueTypes","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","toResolve","isScheduled","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","resolver","needsMeasurement","elementsToMeasure","transformsToRestore","removedTransforms","removeNonTranslationalTransform","measureInitialState","restore","measureEndState","suspendedScrollY","scrollTo","readAllKeyframes","readKeyframes","KeyframeResolver","unresolvedKeyframes","onComplete","isAsync","scheduleResolve","currentValue","finalKeyframe","valueAsRead","readValue","setFinalKeyframe","renderEndStyles","resume","isNumericalString","splitCSSVariableRegex","getVariableValue","depth","exec","token1","token2","parseCSSVariable","getComputedStyle","getPropertyValue","trimmed","testValueType","dimensionValueTypes","findDimensionValueType","find","DOMKeyframesResolver","keyframe","resolveNoneKeyframes","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureViewportBox","measureKeyframe","finalKeyframeIndex","unsetTransformName","unsetTransformValue","isAnimatable","isNotNull","getFinalKeyframe","keyframes","repeat","repeatType","resolvedKeyframes","BaseAnimation","autoplay","delay","repeatDelay","isStopped","hasAttemptedResolve","createdAt","updateFinishedPromise","calcStartTime","resolvedAt","_resolved","onKeyframesResolved","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","canAnimate","resolveFinishedPromise","resolvedAnimation","initPlayback","onPostResolved","reject","currentFinishedPromise","mixNumber","hueToRgb","mixImmediate","mixLinearColor","fromExpo","expo","sqrt","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","combineFunctions","pipe","transformers","invisibleValues","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","template","originStats","targetStats","mixVisibility","orderedOrigin","pointers","originIndex","originValue","matchOrder","mixer","calcGeneratorVelocity","resolveValue","prevT","springDefaults","granular","safeMin","findSpring","bounce","mass","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","initialGuess","rootIterations","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","optionsOrVisualDuration","visualDuration","restSpeed","restDelta","isResolvedFromDuration","springOptions","root","PI","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","easingLookup","easingDefinitionToFunction","x1","y1","x2","y2","interpolate","input","isClamp","inputLength","isZeroDeltaRange","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","frameloopDriver","passTimestamp","generators","decay","tween","percentToProgress","MainThreadAnimation","holdTime","cancelTime","playbackSpeed","pendingPlayState","teardown","onStop","KeyframeResolver$1","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","resolvedDuration","totalDuration","tick","sample","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","driver","newSpeed","hasChanged","onPlay","stopDriver","acceleratedValues","startWaapiAnimation","valueName","keyframeOptions","iterations","direction","supportsWaapi","unsupportedEasingFunctions","AcceleratedAnimation","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","pregenerateKeyframes","pendingTimeline","playbackRate","playState","sampleTime","supports","HTMLElement","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","animateMotionValue","isHandoff","valueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","animationTypeState","getState","MotionHandoffAnimation","appearId","shouldReduceMotion","setTarget","animateVariant","variant","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sortByTreeOrder","animateChildren","last","sortNodePosition","numVariantProps","getVariantContext","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createState","buildResolvedTypeValues","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isActive","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","valueHasChanged","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setActive","setAnimateFunction","makeAnimator","reset","createTypeState","whileInView","whileHover","whileDrag","whileFocus","Feature","node","updateAnimationControlsSubscription","unmountControls","prevAnimate","prevIsPresent","prevPresenceContext","exitAnimation","addDomEvent","extractEventInfo","point","pageX","pageY","addPointerEvent","addPointerInfo","PanSession","handlers","contextWindow","dragSnapToOrigin","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcLength","axis","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","translateAxis","transformAxis","axisTranslate","axisScale","axisOrigin","transformBox","topLeft","bottomRight","transformBoxPoints","getContextWindow","ownerDocument","elementDragControls","WeakMap","VisualElementDragControls","openDragLock","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","layoutDependency","willUpdate","promote","relegate","getStack","members","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","remove","deregister","applyTo","boxShadow","compareByDepth","FlatTree","isDirty","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisTransforms","transforms","scaleKey","originKey","sourceAxis","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","scheduleRender","prevLead","lead","indexOfNode","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","metrics","totalNodes","resolvedTargetDeltas","recalculatedProjection","isDebug","MotionDebug","transformAxes","hiddenVisibility","visibility","resetDistortingTransform","sharedAnimationValues","setStaticValue","cancelTreeOptimisedTransformAnimations","projectionNode","hasCheckedOptimisedAppear","MotionCancelOptimisedAnimation","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","record","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","notifyListeners","subscriptionManager","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","prevLayout","layoutCorrected","phase","isRoot","wasRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","checkNodeWasScrollRoot","boxWithoutScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","isSharedTransition","treeLength","display","applyTreeDeltas","prevProjectionDelta","createProjectionDeltas","notifyAll","projectionDeltaWithTransform","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","xLength","yLength","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","resetValues","styles","pointerEvents","emptyStyles","valuesToRender","latestTransform","xTranslate","yTranslate","zTranslate","elementScaleX","elementScaleY","buildProjectionTransform","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","userAgent","roundPoint","maxDistance","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","handleHoverEvent","lifecycle","handlePressEvent","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","gestureAnimations","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","prevViewport","hasViewportOptionChanged","globalTapTarget","onFocus","isFocusVisible","onBlur","onHoverStart","onPointerEnter","enterEvent","onHoverEnd","onPointerLeave","leaveEvent","prefersReducedMotion","hasReducedMotionListener","valueTypes","visualElementStore","propEventHandlers","VisualElement","_prevProps","_visualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","renderScheduledAt","baseTarget","initialValues","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","feature","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","removeSyncCheck","MotionCheckAppearSync","other","sortInstanceNodePosition","featureDefinition","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","childSubscription","textContent","HTMLVisualElement","defaultType","computedStyle","SVGVisualElement","motion","defaultAttributes","xmlns","strokeWidth","strokeLinecap","strokeLinejoin","createLucideIcon","iconName","iconNode","absoluteStrokeWidth","className","Number","BookOpen","Briefcase","rx","ry","Code","Disc","cx","cy","ExternalLink","Github","GraduationCap","Linkedin","Mail","MessageSquare","Moon","Phone","Send","Sun","User","Youtube","About","theme","formData","setFormData","phone","email","subject","isSubmitting","setIsSubmitting","submitStatus","setSubmitStatus","handleChange","jsxRuntimeExports","div","src","alt","onSubmit","async","fetch","method","headers","content","embeds","title","fields","inline","Date","toISOString","ok","placeholder","rows","disabled","Education","Skills","hidden","Experience","Projects","description","tech","github","live","project","rel","Home","App","setTheme","getElementById","StrictMode"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269]}